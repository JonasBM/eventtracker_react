{"version":3,"sources":["actions/actionCRUD.js","actions/actionTypes.js","actions/actionMessages.js","actions/actionAuth.js","actions/notice/actionNotice.js","reducers/notice/reducerNotice.js","actions/notice/actionNoticeColor.js","reducers/notice/reducerNoticeColor.js","actions/notice/actionNoticeEventType.js","reducers/notice/reducerNoticeEventType.js","actions/notice/actionNoticeEventTypeFile.js","reducers/notice/reducerNoticeEventTypeFile.js","reducers/notice/index.js","actions/survey/actionSurvey.js","reducers/survey/reducerSurvey.js","actions/survey/actionSurveyEventType.js","reducers/survey/reducerSurveyEventType.js","reducers/survey/index.js","actions/report/actionReport.js","reducers/report/reducerReport.js","actions/report/actionReportEventType.js","reducers/report/reducerReportEventType.js","reducers/report/index.js","actions/activity/actionActivity.js","reducers/activity/reducerActivity.js","reducers/activity/index.js","actions/imovel/actionImovel.js","reducers/imovel/reducerImovel.js","reducers/imovel/reducerImovelUpdateLog.js","reducers/imovel/index.js","actions/user/actionUser.js","reducers/user/reducerUser.js","actions/user/actionUserProfile.js","reducers/user/reducerUserProfile.js","reducers/user/index.js","reducers/reducerAuth.js","reducers/errors.js","reducers/messages.js","reducers/index.js","reducers/date.js","store.js","loadInterceptor/index.js","components/common/Loading.js","components/common/PrivateRoute.js","components/common/NotFound.js","components/layouts/Header.js","components/layouts/Footer.js","components/layouts/Alerts.js","components/layouts/AlertTemplate.js","components/calendario/utils.js","actions/actionDate.js","components/calendario/Caption.js","components/calendario/common.js","components/calendario/NoticeEvent.js","components/calendario/SurveyEvent.js","components/calendario/ReportEvent.js","components/calendario/Day.js","components/calendario/Calendario.js","components/common/Forms.js","components/common/CommonModalFooter.js","components/common/AutocompleteImovel.js","components/calendario/ModalFormEvent/FormNotice.js","actions/actionFiles.js","components/calendario/ModalFormEvent/FormSurvey.js","components/calendario/ModalFormEvent/FormReport.js","components/calendario/ModalFormEvent/FormActivity.js","components/calendario/ModalFormEvent/index.js","components/common/TaskBar.js","components/calendario/ModalFormEvent/ModalNoticeNotification.js","components/calendario/index.js","components/tarefas/CalendarioTarefa.js","components/tarefas/index.js","components/perfil/FormChangePassword.js","components/perfil/FormUserData.js","components/perfil/FormReportPDF.js","components/perfil/FormSheetCSV.js","components/perfil/FormReportPDFAll.js","components/perfil/Perfil.js","components/common/NoticeEventList.js","components/common/SurveyEventList.js","components/common/ReportEventList.js","components/aconcluir/index.js","components/incompativel/index.js","components/busca/FormBusca.js","components/busca/index.js","components/admin/Users.js","components/admin/ModalFormUser/FormUser.js","components/admin/ModalFormUser/index.js","components/admin/ReportEventType.js","components/admin/ModalFormReportType/FormReportType.js","components/admin/ModalFormReportType/index.js","components/admin/SurveyEventType.js","components/admin/ModalFormSurveyType/FormSurveyType.js","components/admin/ModalFormSurveyType/index.js","components/admin/NoticeEventType.js","components/admin/ModalFormNoticeType/FormNoticeType.js","components/admin/ModalFormNoticeType/index.js","components/admin/NoticeEventTypeFile.js","components/admin/ModalFormNoticeTypeFile/FormNoticeTypeFile.js","components/admin/ModalFormNoticeTypeFile/index.js","components/admin/NoticeColor.js","components/admin/ModalFormNoticeColor/FormNoticeColor.js","components/admin/ModalFormNoticeColor/index.js","components/admin/FormDocument.js","components/admin/FormUpdateImovel.js","components/admin/index.js","hooks/input-hook.js","components/accounts/Login.js","components/accounts/Logout.js","components/common/AdminRoute.js","App.js","index.js"],"names":["header","GET_ERRORS","CREATE_MESSAGE","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","USER_LOADED","USER_LOADING","AUTH_ERROR","DATE_NEW","USER_NEW","NOTICE_GETLATEST","IMOVEL_UPDATELOG","createMessage","msg","type","payload","returnErrors","err","status","response","data","undefined_error","loadUser","dispatch","getState","tokenHeader","tokenConfig","axios","get","process","then","res","user","catch","logout","post","logoutAll","token","auth","undefined","config","headers","nomes","formatData","objeto","Object","keys","reduce","formData","key","append","FormData","actionCRUD","nome","url","create","types","CREATE","CRUDcreate","read","headerWithValues","assign","params","READ","readOptions","options","READ_OPTIONS","update","patch","id","UPDATE","CRUDupdate","delete","DELETE","CRUDdelete","includes","Error","push","this","toUpperCase","actionCRUDNotice","initialState","notices","actionCRUDNoticeColor","notice_colors","actionCRUDNoticeEventType","notice_event_types","actionCRUDNoticeEventTypeFile","notice_event_type_files","combineReducers","state","action","map","notice","filter","imovel_id","find","notice_event_type","notice_event_type_file","notice_event_type_file_files","notice_color","actionCRUDSurvey","surveys","actionCRUDSurveyEventType","survey_event_types","survey","survey_event_type","actionCRUDReport","reports","actionCRUDReportEventType","report_event_types","report","report_event_type","actionCRUDActivity","activitys","activity","actionCRUDImovel","updateImovelLog","code","imoveis","results","imovel","updatelog","actionCRUDUser","users","current","actionCRUDUserProfile","userprofiles","localStorage","getItem","isAuthenticated","isLoading","removeItem","setItem","errors","messages","date","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","noLoading","interceptors","request","use","replace","document","body","classList","add","error","remove","Promise","reject","Loading","className","role","PrivateRoute","Component","component","rest","useSelector","render","props","to","NotFound","NavItem","children","exact","path","match","activeClassName","aria-current","Header","authButton","style","height","alt","src","href","disabled","first_name","last_name","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","is_staff","target","rel","title","Footer","usePrevious","value","ref","useRef","useEffect","Alerts","prevProps","prevErrors","prevMessages","alert","useAlert","history","useHistory","username","join","password","non_field_errors","detail","success","CRUDread","ERROR","INFO","info","SUCCESS","AlertTemplate","message","close","alertClass","onClick","getDateFromString","stringDate","thedayString","toString","themonthString","splitString","split","Date","getNoticeColor","css_name","getNoticeEventType","notice_event","getAllNoticeConcluded","index","notice_events","length","concluded","getSurveyEventType","getReportEventType","getFirstVA","name","hasNotification","newDate","momentDate","window","pushState","format","CalendarCaption","momentdate","useDispatch","moment","clone","subtract","startOf","IconButton","icon","onclick","CompleteButton","MapButton","address","GeoItajaiButton","codigo_lote","GeoItajaiAlvaraButton","EventButton","notice_id","survey_id","report_id","activity_id","modalcall","day","data-modalcall","data-notice_id","data-survey_id","data-report_id","data-activity_id","data-day","NoticeEventSpan","show_start","deadline_date","is_frozen","short_name","identification","NoticeButton","backgroundColor","css_color","name_string","logradouro","numero","bairro","NoticeEventButton","authuser","useState","isOwner","setIsOwner","owner","show_deadline","completeTask","SurveyEventSpan","SurveyEventButton","SurveyEvent","ReportEventSpan","ReportEventButton","ReportEvent","Day","currentUser","notices_deadline","isSame","Calendario","calendar","setCalendar","locale","start_date","end_date","endOf","startDay","endDay","_date","isBefore","Array","fill","buildCalendar","Caption","weekdays","d","week","weekindex","required","subscription","touched","meta","InputFormGroup","isHidden","classNameDiv","label","htmlFor","CheckboxFormGroup","tooltip","SelectFormGroup","ToogleFieldSet","isDisabled","FileField","setLabel","input","onChange","files","CommonModalFooter","canDelete","canCopy","onDelete","form","reset","data-bs-dismiss","AutocompleteImovel","showResult","currentImovel","setCurrentImovel","showAutocomplete","setShowAutocomplete","showNewCEP","setShowNewCEP","logradouroBusca","setLogradouroBusca","CEPResults","setCEPResults","getFieldState","pristine","ImovelSearch","codigo_insc","complemento","number","street","codigo","inscricao_imobiliaria","test","minusIndex","indexOf","slice","trim","formatString","lastMinusIndex","lastIndexOf","firstCommaIndex","secondCommaIndex","SearchFromString","handleFocus","handleImovelChoose","event","mutators","setValue","dataset","aria-hidden","autoComplete","previous","debounce","debouncedSave","handleValueChange","data-imovel_id","data-imovel_value","onMouseDown","razao_social","numero_contribuinte","cep","maxLength","placeholder","crossDomain","uf","localidade","total","dados","mensagem","console","log","handleBuscaCEP","result","logradouroDNEC","parse","FormNoticeFine","fields","size","FormNoticeAppeal","min","max","validate","FormNoticeEvent","data-notice_event_id","data-notice_type_id","show_report_number","show_concluded","show_fine","show_appeal","requiredArray","FormNotice","isModalOpen","confirm_alert","element","confirm","bootstrap","Modal","getInstance","getElementById","hide","initialValues","onSubmit","values","criarnovo","closeModal","arrayObject","removedNoticeEvents","confirmSave","arrayMutators","field","changeValue","handleSubmit","noValidate","setTimeout","b","createElement","setAttribute","appendChild","click","parentNode","removeChild","onlyNumbers","cols","rows","deadline","default_deadline","deadline_working_days","default_deadline_working_days","default_concluded","responseType","file","Blob","fileURL","URL","createObjectURL","fileLink","download","revokeObjectURL","getnoticereportdocx","vistoriaAdministrativa","vistoria_administrativa_id","FormSurvey","order","FormReport","FormActivity","errormgs","ModalEventTab","active","ModalEventPanel","aria-labelledby","ModelFormEvent","setIsModalOpen","setNotice","setSurvey","setReport","setActivity","noticetab","surveytab","reporttab","activitytab","alltabs","tabstate","setTabstate","setDate","handleShowModal","e","relatedTarget","description","resethack","handleHiddenModal","addEventListener","removeEventListener","tabIndex","data-bs-backdrop","TaskBar","dateType","newUser","ModalNoticeNotification","noticeEventReference","setNoticeEventReference","noticeEventType","setNoticeEventType","noticeEvent","setNoticeEvent","noticeEventTypes","notice_event_id","getNoticeEvent","notice_type_id","aria-describedby","sort","a","notice_event_reference","notice_event_type_file_id","fileName","downloadNotification","CalendarioMain","location","useLocation","thedate","hash","substring","CalendarioTarefa","Tarefas","FormChangePassword","authUser","new_password","new_password_check","put","submitError","FormUserData","FormReportPDF","user_id","month","include_analytic_data","user_name","getReportPDF","FormSheetCSV","getSheetCSV","FormReportPDFAll","getReportPDFAll","Perfil","last_login","NoticeEventList","ReportEventList","SurveyEventList","Aconcluir","Incompativel","incompatible","FormBusca","setstate","Busca","Users","data-user_id","scope","email","profile","matricula","is_active","FormUser","toLowerCase","ModalFormUser","setUser","ReportEventType","data-report_type_id","FormReportType","reportType","ModalFormReportType","setReportType","reportTypes","report_type_id","MaxOrder","Math","apply","Infinity","SurveyEventType","data-survey_type_id","FormSurveyType","surveyType","ModalFormSurveyType","setSurveyType","surveyTypes","survey_type_id","NoticeEventType","rowSpan","colSpan","FormNoticeType","noticeType","parseInt","ModalFormNoticeType","setNoticeType","noticeTypes","o","NoticeEventTypeFile","notice_event_type_file_link","file_doc","startsWith","data-notice_type_file_id","FormNoticeTypeFile","noticeTypeFile","ModalFormNoticeTypeFile","setNoticeTypeFile","noticeTypeFiles","notice_type_file_id","NoticeColor","data-notice_color_id","FormNoticeColor","noticeColor","multiple","ModalFormNoticeColor","setNoticeColor","noticeColors","notice_color_id","FormVAPadrao","va_padrao","uploadFileVARequestDocx","submitting","FormRFPadrao","rf_padrao","uploadFileRFRequestDocx","FormDocument","FormUpdateImovel","duration","setDuration","diffTime","datetime","diff","datetime_started","check","color","inalterados","alterados","novos","progresso","aria-valuenow","aria-valuemin","aria-valuemax","hours","minutes","seconds","AccordionItem","accordionId","data-bs-parent","Admin","intervalId","setInterval","clearInterval","useInput","initialValue","bind","Login","isLoging","setIsLoging","bindUsername","resetUsername","bindPassword","resetPassword","preventDefault","Authorization","btoa","login","Logout","AdminRoute","App","template","timeout","position","containerStyle","zIndex","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.578d58a2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { returnErrors } from \"./actionMessages\";\r\nimport { tokenConfig } from \"../actions/actionAuth\";\r\nimport { createMessage } from \"./actionMessages\";\r\nvar nomes = [];\r\nvar header;\r\n\r\nconst formatData = (objeto, header) => {\r\n  if (objeto && header) {\r\n    if (header[\"Content-Type\"] === \"multipart/form-data\") {\r\n      return Object.keys(objeto).reduce((formData, key) => {\r\n        formData.append(key, objeto[key]);\r\n        return formData;\r\n      }, new FormData());\r\n    }\r\n  }\r\n  return objeto;\r\n};\r\n\r\nexport class actionCRUD {\r\n  constructor(nome, url, header = { \"Content-Type\": \"application/json\" }) {\r\n    if (nomes.includes(nome)) {\r\n      throw new Error('nome: \"' + nome + '\" já existe, o nome deve ser unico.');\r\n    } else {\r\n      nomes.push(nome);\r\n      this.nome = nome;\r\n      this.url = url;\r\n    }\r\n    this.types = {\r\n      CREATE: \"CREATE_\" + this.nome.toUpperCase(),\r\n      READ: \"READ_\" + this.nome.toUpperCase(),\r\n      READ_OPTIONS: \"READ_OPTIONS\" + this.nome.toUpperCase(),\r\n      UPDATE: \"UPDATE_\" + this.nome.toUpperCase(),\r\n      DELETE: \"DELETE_\" + this.nome.toUpperCase(),\r\n    };\r\n    this.header = header;\r\n  }\r\n\r\n  // CREATE\r\n  create = (objeto) => (dispatch, getState) => {\r\n    axios\r\n      .post(\r\n        this.url,\r\n        formatData(objeto, this.header),\r\n        tokenConfig(getState, this.header)\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.CREATE,\r\n          payload: res.data,\r\n        });\r\n        dispatch(createMessage({ CRUDcreate: \"Criado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  // READ\r\n  read = (objeto) => (dispatch, getState) => {\r\n    let headerWithValues = Object.assign(\r\n      {},\r\n      { params: formatData(objeto, this.header) },\r\n      tokenConfig(getState, this.header)\r\n    );\r\n    axios\r\n      .get(this.url, headerWithValues)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.READ,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  };\r\n\r\n  // READ_OPTIONS\r\n  readOptions = () => (dispatch, getState) => {\r\n    axios\r\n      .options(this.url, tokenConfig(getState, this.header))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.READ_OPTIONS,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  // UPDATE\r\n  update = (objeto) => (dispatch, getState) => {\r\n    axios\r\n      .patch(\r\n        this.url + objeto.id + \"/\",\r\n        formatData(objeto, this.header),\r\n        tokenConfig(getState, this.header)\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.UPDATE,\r\n          payload: res.data,\r\n        });\r\n        dispatch(createMessage({ CRUDupdate: \"Atualizado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  //DELETE\r\n  delete = (id) => (dispatch, getState) => {\r\n    axios\r\n      .delete(this.url + id + \"/\", tokenConfig(getState, header))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.DELETE,\r\n          payload: id,\r\n        });\r\n        dispatch(createMessage({ CRUDdelete: \"Deletado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n}\r\n","//Geral\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\nexport const DATE_NEW = \"DATE_NEW\";\r\nexport const USER_NEW = \"USER_NEW\";\r\n\r\nexport const FILE_REPORT_PDF = \"FILE_REPORT_PDF\";\r\n\r\nexport const NOTICE_GETLATEST = \"NOTICE_GETLATEST\";\r\n\r\nexport const IMOVEL_UPDATEDATA = \"IMOVEL_UPDATEDATA\";\r\nexport const IMOVEL_UPDATELOG = \"IMOVEL_UPDATELOG\";\r\n","import { CREATE_MESSAGE, GET_ERRORS } from \"./actionTypes\";\r\n\r\n// CREATE MESSAGE\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (err) => {\r\n  let msg;\r\n  let status;\r\n  if (err.response) {\r\n    msg = err.response.data;\r\n    status = err.response.status;\r\n  } else {\r\n    msg = { undefined_error: [err] };\r\n    status = \"undefined_error\";\r\n  }\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport { returnErrors, createMessage } from \"./actionMessages\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  USER_NEW,\r\n} from \"./actionTypes\";\r\n\r\n// CHECK TOKEN & LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User Loading\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/auth/login/\", tokenHeader)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data,\r\n        });\r\n        dispatch({\r\n          type: USER_NEW,\r\n          payload: res.data.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n        dispatch({\r\n          type: AUTH_ERROR,\r\n        });\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// LOGIN USER\r\nexport const login = (username, password) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Basic ${btoa(username + \":\" + password)}`,\r\n    },\r\n  };\r\n  axios\r\n    .post(process.env.REACT_APP_API_URL + \"api/auth/login/\", null, config)\r\n    .then((res) => {\r\n      dispatch(createMessage(\"Bem vindo\"));\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(loadUser());\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => (dispatch, getState) => {\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/auth/logout/\",\r\n        null,\r\n        tokenHeader\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\nexport const logoutAll = () => (dispatch, getState) => {\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/auth/logoutall/\",\r\n        null,\r\n        tokenHeader\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState, header) => {\r\n  // Get token from state\r\n  const token = getState().auth.token;\r\n  if (token == null) {\r\n    return null;\r\n  }\r\n  // Headers\r\n  if (header === undefined) {\r\n    header = { \"Content-Type\": \"application/json\" };\r\n  }\r\n\r\n  const config = {\r\n    headers: header,\r\n  };\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","import axios from \"axios\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { actionCRUD } from \"../actionCRUD\";\r\nimport { returnErrors } from \"../actionMessages\";\r\nimport { NOTICE_GETLATEST } from \"../actionTypes\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nexport const actionCRUDNotice = new actionCRUD(\r\n  \"notice\",\r\n  process.env.REACT_APP_API_URL + \"api/notice/\"\r\n);\r\n\r\nexport const getLatest = (imovel_id) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { params: { imovel_id: imovel_id } },\r\n    tokenConfig(getState)\r\n  );\r\n  axios\r\n    .get(process.env.REACT_APP_API_URL + \"api/latestnotice/\", headerWithValues)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: NOTICE_GETLATEST,\r\n        payload: res.data,\r\n      });\r\n      if (res.data.imovel_id !== null) {\r\n        bootstrap.Modal.getInstance(\r\n          document.getElementById(\"ModalEvent\")\r\n        ).hide();\r\n        setTimeout(() => {\r\n          var b = document.createElement(\"button\");\r\n          b.type = \"button\";\r\n          b.setAttribute(\"role\", \"button\");\r\n          b.setAttribute(\"data-bs-toggle\", \"modal\");\r\n          b.setAttribute(\"data-bs-target\", \"#ModalEvent\");\r\n          b.setAttribute(\"data-modalcall\", \"notice\");\r\n          b.setAttribute(\"data-notice_id\", res.data.id);\r\n          b.setAttribute(\"data-survey_id\", \"0\");\r\n          b.setAttribute(\"data-activity_id\", \"0\");\r\n          document.body.appendChild(b);\r\n          b.click();\r\n          b.parentNode.removeChild(b);\r\n        }, 500);\r\n      } else {\r\n        dispatch(\r\n          returnErrors(\"Não foi encontrado Autos passados neste imóvel\")\r\n        );\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n    });\r\n};\r\n","import { NOTICE_GETLATEST } from \"../../actions/actionTypes.js\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice.js\";\r\n\r\nconst initialState = {\r\n  notices: [],\r\n};\r\n\r\nexport default function reducerNotice(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNotice.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notices: [...state.notices, action.payload],\r\n      };\r\n    case actionCRUDNotice.types.READ:\r\n      return {\r\n        ...state,\r\n        notices: action.payload,\r\n      };\r\n    case actionCRUDNotice.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notices: state.notices.map((notice) =>\r\n          notice.id === action.payload.id ? action.payload : notice\r\n        ),\r\n      };\r\n    case actionCRUDNotice.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notices: state.notices.filter((notice) => notice.id !== action.payload),\r\n      };\r\n    case NOTICE_GETLATEST:\r\n      if (action.payload.imovel_id !== null) {\r\n        if (!state.notices.find((notice) => notice.id === action.payload.id)) {\r\n          return {\r\n            ...state,\r\n            notices: [...state.notices, action.payload],\r\n          };\r\n        }\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDNoticeColor = new actionCRUD(\r\n  \"noticecolor\",\r\n  process.env.REACT_APP_API_URL + \"api/noticecolor/\"\r\n);\r\n","import { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\n\r\nconst initialState = {\r\n  notice_colors: [],\r\n};\r\n\r\nexport default function reducerNoticeColor(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNoticeColor.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notice_colors: [...state.notice_colors, action.payload],\r\n      };\r\n    case actionCRUDNoticeColor.types.READ:\r\n      return {\r\n        ...state,\r\n        notice_colors: action.payload,\r\n      };\r\n    case actionCRUDNoticeColor.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notice_colors: state.notice_colors.map((notice_color) =>\r\n          notice_color.id === action.payload.id ? action.payload : notice_color\r\n        ),\r\n      };\r\n    case actionCRUDNoticeColor.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notice_colors: state.notice_colors.filter(\r\n          (notice_color) => notice_color.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDNoticeEventType = new actionCRUD(\r\n  \"noticeeventtype\",\r\n  process.env.REACT_APP_API_URL + \"api/noticeeventtype/\"\r\n);\r\n","import { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\n\r\nconst initialState = {\r\n  notice_event_types: [],\r\n};\r\n\r\nexport default function reducerNoticeEventType(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNoticeEventType.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: [...state.notice_event_types, action.payload],\r\n      };\r\n    case actionCRUDNoticeEventType.types.READ:\r\n      return {\r\n        ...state,\r\n        notice_event_types: action.payload,\r\n      };\r\n    case actionCRUDNoticeEventType.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: state.notice_event_types.map((notice_event_type) =>\r\n          notice_event_type.id === action.payload.id\r\n            ? action.payload\r\n            : notice_event_type\r\n        ),\r\n      };\r\n    case actionCRUDNoticeEventType.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: state.notice_event_types.filter(\r\n          (notice_event_type) => notice_event_type.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDNoticeEventTypeFile = new actionCRUD(\r\n  \"noticeeventtypefile\",\r\n  process.env.REACT_APP_API_URL + \"api/noticeeventtypefile/\",\r\n  { \"Content-Type\": \"multipart/form-data\" }\r\n);\r\n","import { actionCRUDNoticeEventTypeFile } from \"../../actions/notice/actionNoticeEventTypeFile\";\r\n\r\nconst initialState = {\r\n  notice_event_type_files: [],\r\n};\r\n\r\nexport default function reducerNoticeEventTypeFile(\r\n  state = initialState,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionCRUDNoticeEventTypeFile.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notice_event_type_files: [\r\n          ...state.notice_event_type_files,\r\n          action.payload,\r\n        ],\r\n      };\r\n    case actionCRUDNoticeEventTypeFile.types.READ:\r\n      return {\r\n        ...state,\r\n        notice_event_type_files: action.payload,\r\n      };\r\n    case actionCRUDNoticeEventTypeFile.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notice_event_type_files: state.notice_event_type_files.map(\r\n          (notice_event_type_file) =>\r\n            notice_event_type_file.id === action.payload.id\r\n              ? action.payload\r\n              : notice_event_type_file\r\n        ),\r\n      };\r\n    case actionCRUDNoticeEventTypeFile.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notice_event_type_file_files: state.notice_event_type_file_files.filter(\r\n          (notice_event_type_file) =>\r\n            notice_event_type_file.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerNotice from \"./reducerNotice\";\r\nimport reducerNoticeColor from \"./reducerNoticeColor\";\r\nimport reducerNoticeEventType from \"./reducerNoticeEventType\";\r\nimport reducerNoticeEventTypeFile from \"./reducerNoticeEventTypeFile\";\r\n\r\nexport default combineReducers({\r\n  notices: reducerNotice,\r\n  notice_event_types: reducerNoticeEventType,\r\n  notice_event_type_files: reducerNoticeEventTypeFile,\r\n  notice_colors: reducerNoticeColor,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDSurvey = new actionCRUD(\r\n  \"survey\",\r\n  process.env.REACT_APP_API_URL + \"api/survey/\"\r\n);\r\n","import { actionCRUDSurvey } from \"../../actions/survey/actionSurvey.js\";\r\n\r\nconst initialState = {\r\n  surveys: [],\r\n};\r\n\r\nexport default function reducerSurvey(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDSurvey.types.CREATE:\r\n      return {\r\n        ...state,\r\n        surveys: [...state.surveys, action.payload],\r\n      };\r\n    case actionCRUDSurvey.types.READ:\r\n      return {\r\n        ...state,\r\n        surveys: action.payload,\r\n      };\r\n    case actionCRUDSurvey.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        surveys: state.surveys.map((survey) =>\r\n          survey.id === action.payload.id ? action.payload : survey\r\n        ),\r\n      };\r\n    case actionCRUDSurvey.types.DELETE:\r\n      return {\r\n        ...state,\r\n        surveys: state.surveys.filter((survey) => survey.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDSurveyEventType = new actionCRUD(\r\n  \"surveyeventtype\",\r\n  process.env.REACT_APP_API_URL + \"api/surveyeventtype/\"\r\n);\r\n","import { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\n\r\nconst initialState = {\r\n  survey_event_types: [],\r\n};\r\n\r\nexport default function reducerSurveyEventType(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDSurveyEventType.types.CREATE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: [...state.survey_event_types, action.payload],\r\n      };\r\n    case actionCRUDSurveyEventType.types.READ:\r\n      return {\r\n        ...state,\r\n        survey_event_types: action.payload,\r\n      };\r\n    case actionCRUDSurveyEventType.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: state.survey_event_types.map((survey_event_type) =>\r\n          survey_event_type.id === action.payload.id\r\n            ? action.payload\r\n            : survey_event_type\r\n        ),\r\n      };\r\n    case actionCRUDSurveyEventType.types.DELETE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: state.survey_event_types.filter(\r\n          (survey_event_type) => survey_event_type.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerSurvey from \"./reducerSurvey\";\r\nimport reducerSurveyEventType from \"./reducerSurveyEventType\";\r\n\r\nexport default combineReducers({\r\n  surveys: reducerSurvey,\r\n  survey_event_types: reducerSurveyEventType,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDReport = new actionCRUD(\r\n  \"report\",\r\n  process.env.REACT_APP_API_URL + \"api/report/\"\r\n);\r\n","import { actionCRUDReport } from \"../../actions/report/actionReport.js\";\r\n\r\nconst initialState = {\r\n  reports: [],\r\n};\r\n\r\nexport default function reducerReport(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDReport.types.CREATE:\r\n      return {\r\n        ...state,\r\n        reports: [...state.reports, action.payload],\r\n      };\r\n    case actionCRUDReport.types.READ:\r\n      return {\r\n        ...state,\r\n        reports: action.payload,\r\n      };\r\n    case actionCRUDReport.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        reports: state.reports.map((report) =>\r\n          report.id === action.payload.id ? action.payload : report\r\n        ),\r\n      };\r\n    case actionCRUDReport.types.DELETE:\r\n      return {\r\n        ...state,\r\n        reports: state.reports.filter((report) => report.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDReportEventType = new actionCRUD(\r\n  \"reporteventtype\",\r\n  process.env.REACT_APP_API_URL + \"api/reporteventtype/\"\r\n);\r\n","import { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\n\r\nconst initialState = {\r\n  report_event_types: [],\r\n};\r\n\r\nexport default function reducerReportEventType(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDReportEventType.types.CREATE:\r\n      return {\r\n        ...state,\r\n        report_event_types: [...state.report_event_types, action.payload],\r\n      };\r\n    case actionCRUDReportEventType.types.READ:\r\n      return {\r\n        ...state,\r\n        report_event_types: action.payload,\r\n      };\r\n    case actionCRUDReportEventType.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        report_event_types: state.report_event_types.map((report_event_type) =>\r\n          report_event_type.id === action.payload.id\r\n            ? action.payload\r\n            : report_event_type\r\n        ),\r\n      };\r\n    case actionCRUDReportEventType.types.DELETE:\r\n      return {\r\n        ...state,\r\n        report_event_types: state.report_event_types.filter(\r\n          (report_event_type) => report_event_type.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerReport from \"./reducerReport\";\r\nimport reducerReportEventType from \"./reducerReportEventType\";\r\n\r\nexport default combineReducers({\r\n  reports: reducerReport,\r\n  report_event_types: reducerReportEventType,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDActivity = new actionCRUD(\r\n  \"activity\",\r\n  process.env.REACT_APP_API_URL + \"api/activity/\"\r\n);\r\n","import { actionCRUDActivity } from \"../../actions/activity/actionActivity.js\";\r\n\r\nconst initialState = {\r\n  activitys: [],\r\n};\r\n\r\nexport default function reducerActivity(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDActivity.types.CREATE:\r\n      return {\r\n        ...state,\r\n        activitys: [...state.activitys, action.payload],\r\n      };\r\n    case actionCRUDActivity.types.READ:\r\n      return {\r\n        ...state,\r\n        activitys: action.payload,\r\n      };\r\n    case actionCRUDActivity.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        activitys: state.activitys.map((activity) =>\r\n          activity.id === action.payload.id ? action.payload : activity\r\n        ),\r\n      };\r\n    case actionCRUDActivity.types.DELETE:\r\n      return {\r\n        ...state,\r\n        activitys: state.activitys.filter(\r\n          (activity) => activity.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerActivity from \"./reducerActivity\";\r\n\r\nexport default combineReducers({\r\n  activitys: reducerActivity,\r\n});\r\n","import axios from \"axios\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { actionCRUD } from \"../actionCRUD\";\r\nimport { createMessage, returnErrors } from \"../actionMessages\";\r\nimport { IMOVEL_UPDATEDATA, IMOVEL_UPDATELOG } from \"../actionTypes\";\r\n\r\nexport const actionCRUDImovel = new actionCRUD(\r\n  \"imovel\",\r\n  process.env.REACT_APP_API_URL + \"api/imovel/\"\r\n);\r\n\r\nexport const updateImovel = (check) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { params: check },\r\n    tokenConfig(getState)\r\n  );\r\n  axios\r\n    .get(process.env.REACT_APP_API_URL + \"api/geoitajai/\", headerWithValues)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: IMOVEL_UPDATEDATA,\r\n        payload: res.data,\r\n      });\r\n      if (res.data.response === \"Não Autorizado\") {\r\n        dispatch(createMessage({ ERROR: res.data.response }));\r\n      } else {\r\n        dispatch(createMessage({ SUCCESS: res.data.response }));\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n    });\r\n};\r\n\r\nexport const updateImovelLog = () => (dispatch, getState) => {\r\n  axios\r\n    .get(\r\n      process.env.REACT_APP_API_URL + \"api/imovelupdatelog/\",\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: IMOVEL_UPDATELOG,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      if (!err.code === \"ECONNABORTED\") {\r\n        dispatch(returnErrors(err));\r\n      }\r\n    });\r\n};\r\n","import { actionCRUDImovel } from \"../../actions/imovel/actionImovel\";\r\n\r\nconst initialState = {\r\n  imoveis: [],\r\n};\r\n\r\nexport default function reducerImovel(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDImovel.types.CREATE:\r\n      return {\r\n        ...state,\r\n        imoveis: [...state.imoveis, action.payload],\r\n      };\r\n    case actionCRUDImovel.types.READ:\r\n      return {\r\n        ...state,\r\n        imoveis: action.payload.results,\r\n      };\r\n    case actionCRUDImovel.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        imoveis: state.imoveis.map((imovel) =>\r\n          imovel.id === action.payload.id ? action.payload : imovel\r\n        ),\r\n      };\r\n    case actionCRUDImovel.types.DELETE:\r\n      return {\r\n        ...state,\r\n        imoveis: state.imoveis.filter((imovel) => imovel.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IMOVEL_UPDATELOG } from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function reducerImovelUpdateLog(state = initialState, action) {\r\n  switch (action.type) {\r\n    case IMOVEL_UPDATELOG:\r\n      return {\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerImovel from \"./reducerImovel\";\r\nimport reducerImovelUpdateLog from \"./reducerImovelUpdateLog\";\r\n\r\nexport default combineReducers({\r\n  imoveis: reducerImovel,\r\n  updatelog: reducerImovelUpdateLog,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\nimport { USER_NEW } from \"../actionTypes\";\r\n\r\nexport const actionCRUDUser = new actionCRUD(\r\n  \"user\",\r\n  process.env.REACT_APP_API_URL + \"api/user/\"\r\n);\r\n\r\nexport const newUser = (user) => {\r\n  return {\r\n    type: USER_NEW,\r\n    payload: user,\r\n  };\r\n};\r\n","import { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport { USER_NEW } from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  current: {},\r\n};\r\n\r\nexport default function reducerUser(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDUser.types.CREATE:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case actionCRUDUser.types.READ:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case actionCRUDUser.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id === action.payload.id ? action.payload : user\r\n        ),\r\n      };\r\n    case actionCRUDUser.types.DELETE:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    case USER_NEW:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\nimport axios from \"axios\";\r\nimport { returnErrors, createMessage } from \"../actionMessages\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { logoutAll } from \"../actionAuth\";\r\n\r\nexport const actionCRUDUserProfile = new actionCRUD(\r\n  \"userprofile\",\r\n  process.env.REACT_APP_API_URL + \"api/userprofile/\"\r\n);\r\n\r\nexport const changePassword = (objeto) => (dispatch, getState) => {\r\n  axios\r\n    .put(\r\n      process.env.REACT_APP_API_URL + \"api/changepassword/\",\r\n      { ...objeto },\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch(createMessage({ CRUDupdate: \"Senha alterada com sucesso!\" }));\r\n      dispatch(logoutAll());\r\n    })\r\n    .catch((err) => dispatch(returnErrors(err)));\r\n};\r\n","import { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile.js\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport default function reducerUserProfile(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDUserProfile.types.CREATE:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case actionCRUDUserProfile.types.READ:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case actionCRUDUserProfile.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id === action.payload.id ? action.payload : user\r\n        ),\r\n      };\r\n    case actionCRUDUserProfile.types.DELETE:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerUser from \"./reducerUser\";\r\nimport reducerUserProfile from \"./reducerUserProfile\";\r\n\r\nexport default combineReducers({\r\n  users: reducerUser,\r\n  userprofiles: reducerUserProfile,\r\n});\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n  isLoading: null,\r\n};\r\n\r\nexport default function reducerAuth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case \"UPDATE_USERPROFILE\":\r\n      return {\r\n        ...state,\r\n        user: state.user.id === action.payload.id ? action.payload : state.user,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function errors(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function messages(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport notice from \"./notice\";\r\nimport survey from \"./survey\";\r\nimport report from \"./report\";\r\nimport activity from \"./activity\";\r\nimport imovel from \"./imovel\";\r\nimport user from \"./user\";\r\nimport reducerAuth from \"./reducerAuth\";\r\nimport errors from \"./errors\";\r\nimport messages from \"./messages\";\r\nimport date from \"./date\";\r\n\r\nexport default combineReducers({\r\n  auth: reducerAuth,\r\n  user,\r\n  notice,\r\n  survey,\r\n  report,\r\n  activity,\r\n  errors,\r\n  messages,\r\n  date,\r\n  imovel,\r\n});\r\n","import { DATE_NEW } from \"../actions/actionTypes\";\r\n\r\nconst initialState = null;\r\n\r\nexport default function date(state = initialState, action) {\r\n  switch (action.type) {\r\n    case DATE_NEW:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport \"./index.css\";\r\n\r\nconst noLoading = [\"api/imovelupdatelog/\", \"api/imovel/\"];\r\n\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    if (\r\n      !noLoading.includes(config.url.replace(process.env.REACT_APP_API_URL, \"\"))\r\n    ) {\r\n      document.body.classList.add(\"loading-indicator\");\r\n    }\r\n    // const token = window.localStorage.token;\r\n    // if (token) {\r\n    //   config.headers.Authorization = `token ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return response;\r\n  },\r\n  function (error) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"w-100 h-100 d-grid justify-content-center align-content-center\">\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.isLoading && auth.isAuthenticated != null) {\r\n          if (auth.isAuthenticated) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        } else {\r\n          return <Loading />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 - Pagina não encontrada!</h1>\r\n      <Link to=\"/\">Ir para pagina inicial</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem = ({ to, children }) => {\r\n  return (\r\n    <Route\r\n      exact\r\n      path={to}\r\n      children={({ match }) => (\r\n        <li className={match ? \"nav-item active\" : \"nav-item\"}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            className=\"nav-link\"\r\n            aria-current=\"page\"\r\n            to={to}\r\n          >\r\n            {children}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  let authButton;\r\n  if (auth.isAuthenticated) {\r\n    authButton = (\r\n      <NavLink\r\n        to=\"/login\"\r\n        activeClassName=\"d-none\"\r\n        className=\"btn btn-outline-primary\"\r\n      >\r\n        Sair\r\n      </NavLink>\r\n    );\r\n  } else {\r\n    authButton = (\r\n      <NavLink\r\n        to=\"/login\"\r\n        activeClassName=\"d-none\"\r\n        className=\"btn btn-outline-primary\"\r\n      >\r\n        entrar\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg p-2\">\r\n      <img\r\n        style={{ height: \"35px\" }}\r\n        className=\"d-none d-xl-inline-block mr-2\"\r\n        alt=\"\"\r\n        src={process.env.PUBLIC_URL + \"/Logo.png\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <span className=\"navbar-brand\" href=\"/\" disabled=\"disabled\">\r\n          {auth.user\r\n            ? \"AFM \" + auth.user.first_name + \" \" + auth.user.last_name\r\n            : \"Event Tracker\"}\r\n        </span>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n            <NavItem to=\"/perfil\">Perfil</NavItem>\r\n            <NavItem to=\"/\">Calendario</NavItem>\r\n            <NavItem to=\"/tarefas\">Tarefas do Dia</NavItem>\r\n            <NavItem to=\"/aconcluir\">A Concluir</NavItem>\r\n            <NavItem to=\"/busca\">Buscar</NavItem>\r\n            <NavItem to=\"/incompativel\">Verificação de imóvel</NavItem>\r\n            {auth && auth.user && auth.user.is_staff && (\r\n              <NavItem to=\"/admin\">Administração</NavItem>\r\n            )}\r\n\r\n            <li className=\"nav-item ml-lg-5\">\r\n              <a\r\n                className=\"nav-link\"\r\n                href=\"https://github.com/JonasBM/eventtracker_react/wiki\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n                type=\"button\"\r\n                title=\"Ajuda\"\r\n              >\r\n                Ajuda\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {authButton}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"container-fluid bg-light\">\r\n      <span className=\"text-muted\">©2020 Jonas Martins</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n\r\nconst Alerts = (prevProps, props) => {\r\n  const { errors, messages } = useSelector((state) => state);\r\n  const prevErrors = usePrevious(errors);\r\n  const prevMessages = usePrevious(messages);\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (errors !== prevErrors) {\r\n      if (errors.msg.username)\r\n        alert.error(`Usuário: ${errors.msg.username.join()}`);\r\n      if (errors.msg.password)\r\n        alert.error(`Senha: ${errors.msg.password.join()}`);\r\n      if (errors.msg.non_field_errors) {\r\n        alert.error(errors.msg.non_field_errors.join());\r\n      }\r\n      if (errors.msg.detail) {\r\n        alert.error(errors.msg.detail);\r\n      }\r\n      if (errors.msg.undefined_error) {\r\n        alert.error(errors.msg.undefined_error.join());\r\n      }\r\n      if (errors.status >= 300) {\r\n        if (!errors.msg) {\r\n          alert.error(errors.status);\r\n        }\r\n      }\r\n    }\r\n    if (messages !== prevMessages) {\r\n      if (messages.CRUDcreate) alert.success(messages.CRUDcreate);\r\n      if (messages.CRUDread) alert.success(messages.CRUDread);\r\n      if (messages.CRUDupdate) alert.success(messages.CRUDupdate);\r\n      if (messages.CRUDdelete) alert.success(messages.CRUDdelete);\r\n      if (messages.ERROR) alert.error(messages.ERROR);\r\n      if (messages.INFO) alert.info(messages.INFO);\r\n      if (messages.SUCCESS) alert.success(messages.SUCCESS);\r\n    }\r\n  }, [errors, prevErrors, messages, prevMessages, alert, history]);\r\n\r\n  return <Fragment />;\r\n};\r\n\r\nexport default Alerts;\r\n","import React from \"react\";\r\n\r\nconst AlertTemplate = ({ style, options, message, close }) => {\r\n  let alertClass = \"\";\r\n  if (options.type === \"info\") {\r\n    alertClass = \"alert-info\";\r\n  } else if (options.type === \"success\") {\r\n    alertClass = \"alert-success\";\r\n  } else if (options.type === \"error\") {\r\n    alertClass = \"alert-danger\";\r\n  }\r\n  return (\r\n    <div\r\n      className={\"alert alert-dismissible fade show \" + alertClass}\r\n      role=\"alert\"\r\n      style={style}\r\n    >\r\n      {message}\r\n      <button className=\"close\" onClick={close}>\r\n        <span>&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertTemplate;\r\n","import bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport store from \"../../store\";\r\n\r\nexport default function buildCalendar(date) {\r\n  const calendar = [];\r\n  const startDay = date.clone().startOf(\"month\").startOf(\"week\");\r\n  const endDay = date.clone().endOf(\"month\").endOf(\"week\");\r\n  const _date = startDay.clone().subtract(1, \"day\");\r\n  while (_date.isBefore(endDay, \"day\")) {\r\n    calendar.push(\r\n      Array(7)\r\n        .fill(0)\r\n        .map(() => _date.add(1, \"day\").clone())\r\n    );\r\n  }\r\n  return calendar;\r\n}\r\n\r\nexport const filterOnlyInArrayByID = (arrayObject) => {\r\n  return function (current) {\r\n    for (let index = 0; index < arrayObject.length; index++) {\r\n      if (current.id === arrayObject[index].id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyUnConcluded = () => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (!notice.notice_events[index].concluded) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyConcluded = () => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].concluded) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterSurveybyUnConcluded = () => {\r\n  return function (survey) {\r\n    return !survey.concluded;\r\n  };\r\n};\r\n\r\nexport const filterSurveybyConcluded = () => {\r\n  return function (survey) {\r\n    return survey.concluded;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDate = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (\r\n        notice.notice_events[index].date === stringDate ||\r\n        notice.notice_events[index].deadline_date === stringDate\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDateStart = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDateDeadline = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].deadline_date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterSurveyByDate = (stringDate) => {\r\n  return function (survey) {\r\n    if (survey.date === stringDate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterReportByDate = (stringDate) => {\r\n  return function (report) {\r\n    if (report.date === stringDate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterActivityByDate = (stringDate) => {\r\n  return function (activity) {\r\n    if (activity.date === stringDate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticeEventByDate = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].deadline_date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const getDateFromString = (stringDate) => {\r\n  const thedayString = stringDate\r\n    .toString()\r\n    .match(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/g);\r\n  const themonthString = stringDate\r\n    .toString()\r\n    .match(/^\\d{4}-(0[1-9]|1[012])$/g);\r\n  if (thedayString !== null) {\r\n    let splitString = thedayString[0].split(\"-\");\r\n    return new Date(splitString[0], splitString[1] - 1, splitString[2]);\r\n  } else if (themonthString !== null) {\r\n    let splitString = themonthString[0].split(\"-\");\r\n    return new Date(splitString[0], splitString[1] - 1);\r\n  } else {\r\n    return new Date();\r\n  }\r\n};\r\n\r\nexport const getFirstDateOfMonth = (date) => {\r\n  return new Date(date.getFullYear(), date.getMonth());\r\n};\r\n\r\nexport const getLastDateOfMonth = (date) => {\r\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n};\r\n\r\nexport const getStarDayOfCalendar = (firstDayOfMonth) => {\r\n  let startDate = new Date(firstDayOfMonth.getTime());\r\n  startDate.setDate(firstDayOfMonth.getDate() - firstDayOfMonth.getDay());\r\n  return startDate;\r\n};\r\n\r\nexport const getEndDayOfCalendar = (lastDayOfMonth) => {\r\n  let endDate = new Date(lastDayOfMonth.getTime());\r\n  if (endDate.getDay() !== 6) {\r\n    endDate.setDate(lastDayOfMonth.getDate() + lastDayOfMonth.getDay());\r\n  }\r\n  return endDate;\r\n};\r\n\r\nexport const openNoticeModal = (notice) => {\r\n  var myModal = new bootstrap.Modal(document.getElementById(\"ModalEvent\"), {});\r\n  myModal.show();\r\n};\r\n\r\nexport const getNoticeEvent = (notice_event_id) => {\r\n  if (notice_event_id) {\r\n    const notices = store.getState().notice.notices.notices;\r\n    for (let index = 0; index < notices.length; index++) {\r\n      let notice_event;\r\n      if (notices[index].notice_events) {\r\n        notice_event = notices[index].notice_events.find(\r\n          (notice_event) =>\r\n            notice_event.id.toString() === notice_event_id.toString()\r\n        );\r\n      }\r\n      if (notice_event) {\r\n        return notice_event;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getNoticeColor = (notice) => {\r\n  if (notice) {\r\n    const notice_colors = store.getState().notice.notice_colors.notice_colors;\r\n    let notice_color = notice_colors.find(\r\n      (notice_color) => notice_color.css_name === notice.css_name\r\n    );\r\n    return notice_color;\r\n  }\r\n};\r\n\r\nexport const getNoticeEventType = (notice_event) => {\r\n  if (notice_event) {\r\n    const notice_event_types = store.getState().notice.notice_event_types\r\n      .notice_event_types;\r\n\r\n    let notice_event_type = notice_event_types.find(\r\n      (notice_event_type) =>\r\n        notice_event_type.id === notice_event.notice_event_type\r\n    );\r\n    return notice_event_type;\r\n  }\r\n};\r\n\r\nexport const getAllNoticeConcluded = (notice) => {\r\n  for (let index = 0; index < notice.notice_events.length; index++) {\r\n    if (!notice.notice_events[index].concluded) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getSurveyEventType = (survey) => {\r\n  if (survey) {\r\n    const survey_event_types = store.getState().survey.survey_event_types\r\n      .survey_event_types;\r\n    let survey_event_type = survey_event_types.find(\r\n      (survey_event_type) => survey_event_type.id === survey.survey_event_type\r\n    );\r\n    return survey_event_type;\r\n  }\r\n};\r\n\r\nexport const getReportEventType = (report) => {\r\n  if (report) {\r\n    const report_event_types = store.getState().report.report_event_types\r\n      .report_event_types;\r\n    let report_event_type = report_event_types.find(\r\n      (report_event_type) => report_event_type.id === report.report_event_type\r\n    );\r\n    return report_event_type;\r\n  }\r\n};\r\n\r\nexport const getFirstVA = (notice) => {\r\n  if (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      let notice_event_type = getNoticeEventType(notice.notice_events[index]);\r\n      if (notice_event_type.name === \"Vistoria Administrativa\") {\r\n        return notice.notice_events[index];\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const hasNotification = (notice_event_type) => {\r\n  if (notice_event_type) {\r\n    const notice_event_type_files = store.getState().notice\r\n      .notice_event_type_files.notice_event_type_files;\r\n\r\n    for (let index = 0; index < notice_event_type_files.length; index++) {\r\n      if (\r\n        notice_event_type.id ===\r\n        notice_event_type_files[index].notice_event_type\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n","import { DATE_NEW } from \"./actionTypes\";\r\n\r\nexport const newDate = (momentDate) => {\r\n  window.history.pushState(null, null, \"#\" + momentDate.format(\"YYYY-MM-DD\"));\r\n  return {\r\n    type: DATE_NEW,\r\n    payload: momentDate,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst CalendarCaption = ({ momentdate }) => {\r\n  const dispatch = useDispatch();\r\n  const dateBackward = () => {\r\n    dispatch(\r\n      newDate(moment(momentdate.clone().subtract(1, \"months\").startOf(\"month\")))\r\n    );\r\n  };\r\n  const dateForward = () => {\r\n    dispatch(\r\n      newDate(moment(momentdate.clone().add(1, \"months\").startOf(\"month\")))\r\n    );\r\n  };\r\n  const dateToday = () => {\r\n    dispatch(newDate(moment()));\r\n  };\r\n\r\n  return (\r\n    <caption className=\"bg-primary text-center\">\r\n      <div className=\"float-left ml-2\">\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            className=\"btn btn-secondary border-right\"\r\n            onClick={dateBackward}\r\n          >\r\n            <i className=\"fa fa-chevron-left\"></i>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary border-left\"\r\n            onClick={dateForward}\r\n          >\r\n            <i className=\"fa fa-chevron-right\"></i>\r\n          </button>\r\n        </div>\r\n        <button className=\"btn btn-secondary mx-2\" onClick={dateToday}>\r\n          Hoje\r\n        </button>\r\n      </div>\r\n      <h4 className=\"text-uppercase font-weight-bold\">\r\n        {momentdate.format(\"MMMM Y\")}\r\n      </h4>\r\n    </caption>\r\n  );\r\n};\r\n\r\nexport default CalendarCaption;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const IconButton = ({ icon, href = null, onclick = null, title }) => {\r\n  return (\r\n    <div className=\"col col-auto p-0 d-flex flex-column justify-content-center\">\r\n      <a\r\n        href={href}\r\n        onClick={onclick}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className=\"btn btn-secondary d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n        type=\"button\"\r\n        title={title}\r\n      >\r\n        <i className={\"fa \" + icon}></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompleteButton = ({ concluded, onclick }) => {\r\n  return (\r\n    <IconButton\r\n      icon={concluded ? \"fa-check-square-o\" : \"fa-square-o\"}\r\n      onclick={onclick}\r\n      title=\"Marcar como finalizado\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const MapButton = ({ address }) => {\r\n  return (\r\n    <IconButton\r\n      href={\"https://www.google.com/maps/place/\" + address}\r\n      icon=\"fa-map\"\r\n      title=\"Procurar endereço no GMaps\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const GeoItajaiButton = ({ codigo_lote }) => {\r\n  return (\r\n    <IconButton\r\n      href={\r\n        \"https://geoitajai.github.io/geo/consultazoneamento_openlayers.html#\" +\r\n        codigo_lote\r\n      }\r\n      icon=\"fa-file-text-o\"\r\n      title=\"Consulta Prévia\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const GeoItajaiAlvaraButton = ({ codigo_lote }) => {\r\n  return (\r\n    <IconButton\r\n      href={\r\n        \"https://geoitajai.github.io/geo/consultaalvara.html#\" + codigo_lote\r\n      }\r\n      icon=\"fa-id-card-o\"\r\n      title=\"Grau de risco\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const EventButton = ({\r\n  notice_id = \"0\",\r\n  survey_id = \"0\",\r\n  report_id = \"0\",\r\n  activity_id = \"0\",\r\n  modalcall = \"none\",\r\n  title = \"\",\r\n  day = moment().format(\"YYYY-MM-DD\"),\r\n  children,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"col p-1 text-truncate d-flex flex-column justify-content-center\"\r\n      role=\"button\"\r\n      title={title}\r\n      data-bs-toggle=\"modal\"\r\n      data-bs-target=\"#ModalEvent\"\r\n      data-modalcall={modalcall}\r\n      data-notice_id={notice_id}\r\n      data-survey_id={survey_id}\r\n      data-report_id={report_id}\r\n      data-activity_id={activity_id}\r\n      data-day={day}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getNoticeEventType,\r\n  getAllNoticeConcluded,\r\n  getNoticeColor,\r\n} from \"./utils\";\r\nimport {\r\n  CompleteButton,\r\n  MapButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n  GeoItajaiAlvaraButton,\r\n} from \"./common\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\n\r\nconst NoticeEventSpan = ({ notice_event, day }) => {\r\n  let notice_event_type = getNoticeEventType(notice_event);\r\n  if (notice_event && day && notice_event_type) {\r\n    if (\r\n      (notice_event.date === day.format(\"YYYY-MM-DD\") &&\r\n        notice_event_type.show_start) ||\r\n      notice_event.deadline_date === day.format(\"YYYY-MM-DD\")\r\n    ) {\r\n      return (\r\n        <span\r\n          className={\r\n            \"row no-gutters py-1 text-truncate d-inline-block\" +\r\n            (notice_event.is_frozen ? \" text-white\" : \" font-weight-bold\")\r\n          }\r\n        >\r\n          {\"A. \" + notice_event_type.short_name + \": \"}\r\n          {notice_event.identification !== null && notice_event.identification}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const NoticeButton = ({ notice, day }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: getNoticeColor(notice)\r\n          ? getNoticeColor(notice).css_color\r\n          : \"red\",\r\n      }}\r\n      className={\r\n        \"row no-gutters event user-select-none text-truncate\" +\r\n        (getAllNoticeConcluded(notice) ? \" concluded\" : \"\")\r\n      }\r\n    >\r\n      <EventButton\r\n        notice_id={notice.id}\r\n        modalcall=\"notice\"\r\n        title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n        day={day.format(\"YYYY-MM-DD\")}\r\n      >\r\n        {notice.notice_events\r\n          .filter(\r\n            (notice_event) => notice_event.date === day.format(\"YYYY-MM-DD\")\r\n          )\r\n          .map((notice_event, index) => (\r\n            <NoticeEventSpan\r\n              key={notice_event.id}\r\n              notice_event={notice_event}\r\n              day={day}\r\n            />\r\n          ))}\r\n      </EventButton>\r\n      <GeoItajaiButton\r\n        codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n      />\r\n      <GeoItajaiAlvaraButton\r\n        codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n      />\r\n      <MapButton\r\n        address={\r\n          notice.imovel\r\n            ? notice.imovel.logradouro +\r\n              \",\" +\r\n              notice.imovel.numero +\r\n              \"-\" +\r\n              notice.imovel.bairro +\r\n              \"-itajaí\"\r\n            : \"\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoticeEventButton = ({ notice, day }) => {\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const completeTask = (notice_event) => {\r\n    notice_event.concluded = !notice_event.concluded;\r\n    dispatch(actionCRUDNotice.update(notice));\r\n  };\r\n\r\n  return notice.notice_events\r\n    .filter(\r\n      (notice_event) => notice_event.deadline_date === day.format(\"YYYY-MM-DD\")\r\n    )\r\n    .map((notice_event) => {\r\n      let notice_event_type = getNoticeEventType(notice_event);\r\n      if (notice_event_type) {\r\n        if (notice_event_type.show_deadline && !notice_event.is_frozen) {\r\n          return (\r\n            notice_event.deadline_date === day.format(\"YYYY-MM-DD\") && (\r\n              <div\r\n                key={notice_event.id}\r\n                style={{\r\n                  backgroundColor: getNoticeEventType(notice_event)\r\n                    ? getNoticeEventType(notice_event).css_color\r\n                    : \"blue\",\r\n                }}\r\n                className={\r\n                  \"row no-gutters event user-select-none text-truncate\" +\r\n                  (notice_event.concluded ? \" concluded\" : \"\")\r\n                }\r\n              >\r\n                <EventButton\r\n                  notice_id={notice.id}\r\n                  modalcall=\"notice\"\r\n                  title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n                  day={day.format(\"YYYY-MM-DD\")}\r\n                >\r\n                  <NoticeEventSpan notice_event={notice_event} day={day} />\r\n                </EventButton>\r\n                <CompleteButton\r\n                  concluded={notice_event.concluded}\r\n                  onclick={\r\n                    isOwner ? () => completeTask(notice_event) : () => {}\r\n                  }\r\n                />\r\n                <GeoItajaiButton\r\n                  codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n                />\r\n                <GeoItajaiAlvaraButton\r\n                  codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n                />\r\n                <MapButton\r\n                  address={\r\n                    notice.imovel\r\n                      ? notice.imovel.logradouro +\r\n                        \",\" +\r\n                        notice.imovel.numero +\r\n                        \"-\" +\r\n                        notice.imovel.bairro +\r\n                        \"-itajaí\"\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </div>\r\n            )\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n};\r\n\r\n// deprecated\r\nconst NoticeEvent = ({ notice, day }) => {\r\n  if (notice.date === day.format(\"YYYY-MM-DD\")) {\r\n    return <NoticeButton notice={notice} day={day} />;\r\n  } else {\r\n    return <NoticeEventButton notice={notice} day={day} />;\r\n  }\r\n};\r\n\r\nexport default NoticeEvent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CompleteButton,\r\n  MapButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n  GeoItajaiAlvaraButton,\r\n} from \"./common\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSurveyEventType } from \"./utils\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\n\r\nconst SurveyEventSpan = ({ survey }) => {\r\n  let survey_event_type = getSurveyEventType(survey);\r\n  if (survey && survey_event_type) {\r\n    return (\r\n      <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n        {\"V. \" + survey_event_type.short_name + \": \"}\r\n        {survey.identification !== null && survey.identification}\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst SurveyEventButton = ({ survey, day }) => {\r\n  let survey_event_type = getSurveyEventType(survey);\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && survey !== undefined) {\r\n      setIsOwner(authuser.id === survey.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, survey]);\r\n\r\n  const completeTask = () => {\r\n    survey.concluded = !survey.concluded;\r\n    dispatch(actionCRUDSurvey.update(survey));\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: survey_event_type\r\n          ? survey_event_type.css_color\r\n          : \"green\",\r\n      }}\r\n      className={\r\n        \"row no-gutters event user-select-none text-truncate \" +\r\n        (survey.concluded ? \" concluded\" : \"\")\r\n      }\r\n    >\r\n      <EventButton\r\n        survey_id={survey.id}\r\n        modalcall=\"survey\"\r\n        title={survey.imovel ? survey.imovel.name_string : \"\"}\r\n        day={day.format(\"YYYY-MM-DD\")}\r\n      >\r\n        <SurveyEventSpan survey={survey} />\r\n      </EventButton>\r\n      <CompleteButton\r\n        concluded={survey.concluded}\r\n        onclick={isOwner ? () => completeTask() : () => {}}\r\n      />\r\n      <GeoItajaiButton\r\n        codigo_lote={survey.imovel ? survey.imovel.codigo_lote : \"\"}\r\n      />\r\n      <GeoItajaiAlvaraButton\r\n        codigo_lote={survey.imovel ? survey.imovel.codigo_lote : \"\"}\r\n      />\r\n      <MapButton\r\n        address={\r\n          survey.imovel\r\n            ? survey.imovel.logradouro +\r\n              \",\" +\r\n              survey.imovel.numero +\r\n              \"-\" +\r\n              survey.imovel.bairro +\r\n              \"-itajaí\"\r\n            : \"\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SurveyEvent = ({ survey, day }) => {\r\n  return <SurveyEventButton survey={survey} day={day} />;\r\n};\r\n\r\nexport default SurveyEvent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CompleteButton,\r\n  MapButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n  GeoItajaiAlvaraButton,\r\n} from \"./common\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReportEventType } from \"./utils\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\n\r\nconst ReportEventSpan = ({ report }) => {\r\n  let report_event_type = getReportEventType(report);\r\n  if (report && report_event_type) {\r\n    return (\r\n      <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n        {\"R. \" + report_event_type.short_name + \": \"}\r\n        {report.identification !== null && report.identification}\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst ReportEventButton = ({ report, day }) => {\r\n  let report_event_type = getReportEventType(report);\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && report !== undefined) {\r\n      setIsOwner(authuser.id === report.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, report]);\r\n\r\n  const completeTask = () => {\r\n    report.concluded = !report.concluded;\r\n    dispatch(actionCRUDReport.update(report));\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: report_event_type\r\n          ? report_event_type.css_color\r\n          : \"yellow\",\r\n      }}\r\n      className={\r\n        \"row no-gutters event user-select-none text-truncate \" +\r\n        (report.concluded ? \" concluded\" : \"\")\r\n      }\r\n    >\r\n      <EventButton\r\n        report_id={report.id}\r\n        modalcall=\"report\"\r\n        title={report.imovel ? report.imovel.name_string : \"\"}\r\n        day={day.format(\"YYYY-MM-DD\")}\r\n      >\r\n        <ReportEventSpan report={report} />\r\n      </EventButton>\r\n      <CompleteButton\r\n        concluded={report.concluded}\r\n        onclick={isOwner ? () => completeTask() : () => {}}\r\n      />\r\n      <GeoItajaiButton\r\n        codigo_lote={report.imovel ? report.imovel.codigo_lote : \"\"}\r\n      />\r\n      <GeoItajaiAlvaraButton\r\n        codigo_lote={report.imovel ? report.imovel.codigo_lote : \"\"}\r\n      />\r\n      <MapButton\r\n        address={\r\n          report.imovel\r\n            ? report.imovel.logradouro +\r\n              \",\" +\r\n              report.imovel.numero +\r\n              \"-\" +\r\n              report.imovel.bairro +\r\n              \"-itajaí\"\r\n            : \"\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ReportEvent = ({ report, day }) => {\r\n  return <ReportEventButton report={report} day={day} />;\r\n};\r\n\r\nexport default ReportEvent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Day.css\";\r\nimport { NoticeButton, NoticeEventButton } from \"./NoticeEvent\";\r\nimport SurveyEvent from \"./SurveyEvent\";\r\nimport ReportEvent from \"./ReportEvent\";\r\nimport moment from \"moment\";\r\nimport {\r\n  filterNoticebyDateStart,\r\n  filterNoticebyDateDeadline,\r\n  filterSurveyByDate,\r\n  filterReportByDate,\r\n  filterActivityByDate,\r\n} from \"./utils\";\r\n\r\nconst Day = ({ day, momentdate }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n\r\n  const notices = useSelector((state) =>\r\n    state.notice.notices.notices\r\n      .filter((notice) => {\r\n        return notice.owner === currentUser.id;\r\n      })\r\n      .filter(filterNoticebyDateStart(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const notices_deadline = useSelector((state) =>\r\n    state.notice.notices.notices\r\n      .filter((notice) => {\r\n        return notice.owner === currentUser.id;\r\n      })\r\n      .filter(filterNoticebyDateDeadline(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const surveys = useSelector((state) =>\r\n    state.survey.surveys.surveys\r\n      .filter((survey) => {\r\n        return survey.owner === currentUser.id;\r\n      })\r\n      .filter(filterSurveyByDate(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const reports = useSelector((state) =>\r\n    state.report.reports.reports\r\n      .filter((report) => {\r\n        return report.owner === currentUser.id;\r\n      })\r\n      .filter(filterReportByDate(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const activity = useSelector((state) =>\r\n    state.activity.activitys.activitys\r\n      .filter((activity) => {\r\n        return activity.owner === currentUser.id;\r\n      })\r\n      .find(filterActivityByDate(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && activity !== undefined) {\r\n      setIsOwner(authuser.id === activity.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, activity]);\r\n\r\n  if (!momentdate.isSame(day, \"month\")) {\r\n    return (\r\n      <td id={day.format(\"YYYY-MM-DD\")} className=\"opacity-4\">\r\n        <div className=\"text-right pb-1\">\r\n          <button className=\"btn btn-circle btn-secondary disabled\">\r\n            {day.format(\"DD\").toString()}\r\n          </button>\r\n        </div>\r\n      </td>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <td\r\n      id={day.format(\"YYYY-MM-DD\")}\r\n      className={day.isSame(moment(), \"day\") ? \"bg-dark\" : \"\"}\r\n    >\r\n      <div className=\"text-right pb-1\">\r\n        <button\r\n          className={\r\n            \"btn btn-circle\" + (activity ? \" btn-primary\" : \" btn-secondary\")\r\n          }\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalEvent\"\r\n          data-modalcall={\r\n            isOwner\r\n              ? activity !== undefined\r\n                ? \"activity_all\"\r\n                : \"none\"\r\n              : \"activity\"\r\n          }\r\n          data-notice_id=\"0\"\r\n          data-survey_id=\"0\"\r\n          data-report_id=\"0\"\r\n          data-activity_id={activity !== undefined ? activity.id : \"0\"}\r\n          data-day={day.format(\"YYYY-MM-DD\")}\r\n          disabled={\r\n            activity !== undefined || authuser.id === currentUser.id\r\n              ? \"\"\r\n              : \"disabled\"\r\n          }\r\n        >\r\n          {day.format(\"DD\").toString()}\r\n        </button>\r\n      </div>\r\n      {notices.map((notice) => (\r\n        <NoticeButton key={notice.id} notice={notice} day={day} />\r\n      ))}\r\n      {notices_deadline.map((notice) => (\r\n        <NoticeEventButton key={notice.id} notice={notice} day={day} />\r\n      ))}\r\n      {surveys.map((survey) => (\r\n        <SurveyEvent key={survey.id} survey={survey} day={day} />\r\n      ))}\r\n      {reports.map((report) => (\r\n        <ReportEvent key={report.id} report={report} day={day} />\r\n      ))}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDNoticeEventTypeFile } from \"../../actions/notice/actionNoticeEventTypeFile\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\nimport { actionCRUDActivity } from \"../../actions/activity/actionActivity\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport \"./Calendario.css\";\r\n\r\nimport buildCalendar from \"./utils\";\r\n\r\nimport Caption from \"./Caption\";\r\nimport Day from \"./Day\";\r\n\r\nconst Calendario = ({ momentdate }) => {\r\n  const [calendar, setCalendar] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    moment.locale(\"pt-br\");\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    dispatch(actionCRUDReportEventType.read());\r\n    dispatch(actionCRUDNoticeEventTypeFile.read());\r\n    const params = {\r\n      start_date: momentdate\r\n        .clone()\r\n        .startOf(\"month\")\r\n        .startOf(\"week\")\r\n        .format(\"YYYY-MM-DD\"),\r\n      end_date: momentdate\r\n        .clone()\r\n        .endOf(\"month\")\r\n        .endOf(\"week\")\r\n        .format(\"YYYY-MM-DD\"),\r\n    };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDReport.read(params));\r\n    dispatch(actionCRUDActivity.read(params));\r\n\r\n    setCalendar(buildCalendar(momentdate));\r\n  }, [dispatch, momentdate]);\r\n\r\n  return (\r\n    <section>\r\n      <table id=\"calendar\" className=\"table table-light table-bordered\">\r\n        <Caption momentdate={momentdate} />\r\n        <thead className=\"thead-dark\">\r\n          <tr className=\"text-center text-uppercase\">\r\n            {moment.weekdays().map((d, index) => (\r\n              <th key={\"week\" + index} className=\"weekdays \">\r\n                {d}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {calendar.map((week, weekindex) => (\r\n            <tr key={\"week\" + weekindex}>\r\n              {week.map((day) => (\r\n                <Day\r\n                  key={day.format(\"YYYY-MM-DD\")}\r\n                  day={day}\r\n                  momentdate={momentdate}\r\n                >\r\n                  {day.format(\"D\").toString()}\r\n                </Day>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Calendario;\r\n","import React, { useState } from \"react\";\r\nimport { Field } from \"react-final-form\";\r\n\r\nexport const required = (value) => (value ? undefined : \"Campo obrigatório\");\r\n\r\nexport const Error = ({ name }) => (\r\n  <Field name={name} subscription={{ error: true, touched: true }}>\r\n    {({ meta: { error, touched } }) =>\r\n      error && touched ? (\r\n        <div className=\"invalid-feedback d-block\">{error.toString()}</div>\r\n      ) : null\r\n    }\r\n  </Field>\r\n);\r\n\r\nexport const InputFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n    delete props.className;\r\n  }\r\n  let classNameDiv = \"form-group mb-0\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n\r\n  let id = \"id_\" + props.name;\r\n  if (props.id !== undefined) {\r\n    id = props.id;\r\n    delete props.id;\r\n  }\r\n\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv}>\r\n      {props.label && (\r\n        <label htmlFor={id} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"input\"\r\n        type=\"text\"\r\n        {...props}\r\n        className={className}\r\n        id={id}\r\n        name={props.name}\r\n      />\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CheckboxFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"custom-control-input\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n    delete props.className;\r\n  }\r\n  let classNameDiv = \"custom-control custom-checkbox\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n\r\n  let id = \"id_\" + props.name;\r\n  if (props.id !== undefined) {\r\n    id = props.id;\r\n    delete props.id;\r\n  }\r\n\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv} title={props.tooltip}>\r\n      <Field\r\n        component=\"input\"\r\n        type=\"checkbox\"\r\n        {...props}\r\n        id={id}\r\n        name={props.name}\r\n        className={className}\r\n      />\r\n      {props.label && (\r\n        <label className=\"custom-control-label\" htmlFor={id}>\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SelectFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n  }\r\n  let classNameDiv = \"form-group mb-0\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n  let id = \"id_\" + props.name;\r\n  if (props.id !== undefined) {\r\n    id = props.id;\r\n    delete props.id;\r\n  }\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv}>\r\n      {props.label && (\r\n        <label htmlFor={id} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"select\"\r\n        {...props}\r\n        className={className}\r\n        id={id}\r\n        name={props.name}\r\n      />\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ComboboxFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n  }\r\n  let id = \"id_\" + props.name;\r\n  if (props.id !== undefined) {\r\n    id = props.id;\r\n    delete props.id;\r\n  }\r\n  const { children, ...childprops } = props;\r\n  return (\r\n    <div className={props.isHidden ? \"d-none\" : \"form-group mb-0\"}>\r\n      {props.label && (\r\n        <label htmlFor={id} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"input\"\r\n        type=\"text\"\r\n        {...childprops}\r\n        className={className}\r\n        id={id}\r\n        name={props.name}\r\n        list={id + \"_list\"}\r\n      />\r\n      <datalist id={id + \"_list\"}>{children}</datalist>\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ToogleFieldSet = ({ isDisabled = false, ...props }) => {\r\n  if (isDisabled) {\r\n    return <fieldset disabled>{props.children}</fieldset>;\r\n  } else {\r\n    return <fieldset>{props.children}</fieldset>;\r\n  }\r\n};\r\n\r\nexport const FileField = ({ name, ...props }) => {\r\n  const [label, setLabel] = useState(props.label);\r\n  return (\r\n    <div className=\"custom-file\">\r\n      <Field name={name}>\r\n        {({ input: { value, onChange, ...input } }) => (\r\n          <input\r\n            {...input}\r\n            type=\"file\"\r\n            onChange={({ target }) => {\r\n              onChange(target.files[0]);\r\n              if (target.files[0] !== undefined) {\r\n                setLabel(target.files[0].name);\r\n              } else {\r\n                setLabel(props.label);\r\n              }\r\n            }}\r\n            {...props}\r\n            className=\"custom-file-input form-control form-control-sm\"\r\n          />\r\n        )}\r\n      </Field>\r\n      <label className=\"custom-file-label col-form-label-sm\" htmlFor={props.id}>\r\n        {label}\r\n      </label>\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { CheckboxFormGroup } from \"./Forms\";\r\n\r\nconst CommonModalFooter = ({\r\n  isDisabled = false,\r\n  canDelete = false,\r\n  canCopy = false,\r\n  onDelete,\r\n  form,\r\n}) => {\r\n  return (\r\n    <div className=\"modal-footer\">\r\n      {canDelete && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"mr-auto btn btn-danger font-weight-bold\"\r\n          onClick={onDelete}\r\n          disabled={isDisabled}\r\n        >\r\n          Deletar\r\n        </button>\r\n      )}\r\n      {form && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary font-weight-bold\"\r\n          onClick={() => {\r\n            form.reset();\r\n          }}\r\n          title=\"Recarregar informações iniciais\"\r\n          disabled={isDisabled}\r\n        >\r\n          <i className=\"fa fa-refresh\" />\r\n        </button>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary font-weight-bold\"\r\n        data-bs-dismiss=\"modal\"\r\n      >\r\n        Fechar\r\n      </button>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary font-weight-bold\"\r\n        disabled={isDisabled}\r\n      >\r\n        Salvar\r\n      </button>\r\n      {canCopy && (\r\n        <CheckboxFormGroup\r\n          name=\"criarnovo\"\r\n          label=\"Criar novo\"\r\n          tooltip=\"Salva como um novo evento\"\r\n          disabled={isDisabled}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommonModalFooter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Error, InputFormGroup } from \"./Forms\";\r\nimport \"./AutocompleteImovel.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport formatString from \"format-string-by-pattern\";\r\nimport { actionCRUDImovel } from \"../../actions/imovel/actionImovel\";\r\nimport { OnFocus, OnBlur, OnChange } from \"react-final-form-listeners\";\r\nimport {\r\n  GeoItajaiButton,\r\n  GeoItajaiAlvaraButton,\r\n  IconButton,\r\n  MapButton,\r\n} from \"../calendario/common\";\r\nimport debounce from \"lodash.debounce\";\r\nimport axios from \"axios\";\r\nimport { createMessage } from \"../../actions/actionMessages\";\r\n\r\nexport const SearchFromString = (value, imovel_id = null) => {\r\n  let all = /^[\\d.]+-(.+)$/g;\r\n  // let address = /^[^-]+$/g;\r\n  let codigo_insc = /^[\\d.]+$/g;\r\n\r\n  let bairro = \"\";\r\n  let complemento = \"\";\r\n  let number = \"\";\r\n  let street = \"\";\r\n  let codigo = \"\";\r\n  let inscricao_imobiliaria = \"\";\r\n\r\n  if (all.test(value)) {\r\n    let minusIndex = value.indexOf(\"-\");\r\n    codigo = value.slice(0, minusIndex).trim();\r\n    street = value.slice(minusIndex + 1).trim();\r\n  } else {\r\n    if (codigo_insc.test(value)) {\r\n      codigo = value;\r\n    } else {\r\n      street = value;\r\n    }\r\n  }\r\n\r\n  if (codigo) {\r\n    codigo = codigo.replace(/\\D/g, \"\");\r\n    inscricao_imobiliaria = formatString(\"999.999.99.9999.9999.999\", codigo);\r\n  }\r\n  if (street) {\r\n    let lastMinusIndex = street.lastIndexOf(\"-\");\r\n\r\n    if (lastMinusIndex > 0) {\r\n      bairro = street.slice(lastMinusIndex + 1).trim();\r\n      street = street.slice(0, lastMinusIndex).trim();\r\n    }\r\n    let firstCommaIndex = street.indexOf(\",\");\r\n    if (firstCommaIndex > 0) {\r\n      number = street.slice(firstCommaIndex + 1);\r\n      let secondCommaIndex = number.indexOf(\",\");\r\n      if (secondCommaIndex > 0) {\r\n        complemento = number.slice(secondCommaIndex + 1).trim();\r\n        number = number.slice(0, secondCommaIndex);\r\n      }\r\n      //number = number.replace(/(?<!\\/)[nN]|[º°]/g, \"\").trim();\r\n      if (!number.includes(\"s/n\")) {\r\n        number = number.replace(/[nN]|[º°]/g, \"\").trim();\r\n      } else {\r\n        number = number.trim();\r\n      }\r\n      //number = number.trim();\r\n      street = street.slice(0, firstCommaIndex).trim();\r\n    }\r\n  }\r\n\r\n  return {\r\n    id: imovel_id,\r\n    bairro: bairro,\r\n    complemento: complemento,\r\n    number: number,\r\n    street: street,\r\n    codigo: codigo,\r\n    inscricao_imobiliaria: inscricao_imobiliaria,\r\n  };\r\n};\r\n\r\nconst AutocompleteImovel = ({\r\n  name,\r\n  name_string,\r\n  label,\r\n  form,\r\n  className,\r\n  showResult = true,\r\n  ...props\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const imoveis = useSelector((state) => state.imovel.imoveis.imoveis);\r\n  const [currentImovel, setCurrentImovel] = useState();\r\n  const [showAutocomplete, setShowAutocomplete] = useState(false);\r\n  //const [blurTimer, setBlurTimer] = useState(null);\r\n\r\n  const [showNewCEP, setShowNewCEP] = useState(false);\r\n  const [logradouroBusca, setLogradouroBusca] = useState(\"\");\r\n  const [CEPResults, setCEPResults] = useState();\r\n\r\n  useEffect(() => {\r\n    setCurrentImovel(form.getFieldState(name).value);\r\n    if (form.getFieldState(name_string).pristine) {\r\n      setShowAutocomplete(false);\r\n    }\r\n  }, [form, name, name_string]);\r\n\r\n  const ImovelSearch = (value) => {\r\n    if (form.getFieldState(name).value) {\r\n      let params = SearchFromString(value, form.getFieldState(name).value.id);\r\n      dispatch(actionCRUDImovel.read(params));\r\n    }\r\n  };\r\n\r\n  const handleValueChange = (value, previous) => {\r\n    if (value.length > 3) {\r\n      const debouncedSave = debounce(() => ImovelSearch(value), 500);\r\n      debouncedSave();\r\n      handleFocus(true);\r\n    } else {\r\n      handleFocus(false);\r\n    }\r\n    if (value.length === 0) {\r\n      form.mutators.setValue(name, null);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (value) => {\r\n    if (\r\n      value &&\r\n      form.getFieldState(name_string).value !== undefined &&\r\n      form.getFieldState(name_string).value.length > 3\r\n    ) {\r\n      setShowAutocomplete(true);\r\n    } else {\r\n      setShowAutocomplete(false);\r\n    }\r\n  };\r\n\r\n  const handleImovelChoose = (event) => {\r\n    handleFocus(false);\r\n    setShowNewCEP(false);\r\n    if (imoveis) {\r\n      form.mutators.setValue(\r\n        name,\r\n        imoveis.find(\r\n          (imovel) => imovel.id.toString() === event.target.dataset.imovel_id\r\n        )\r\n      );\r\n      form.mutators.setValue(name + \"_id\", event.target.dataset.imovel_id);\r\n    }\r\n  };\r\n\r\n  const handleBuscaCEP = () => {\r\n    const header = {\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params: { uf: \"SC\", localidade: \"Itajai\", logradouro: logradouroBusca },\r\n    };\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/buscacep/\", header)\r\n      .then((res) => {\r\n        if (res.data.total > 0) {\r\n          setCEPResults(res.data.dados);\r\n        } else {\r\n          dispatch(createMessage({ INFO: res.data.mensagem }));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSaveCEP = () => {\r\n    if (form.getFieldState(\"newCEP\")) {\r\n      form.mutators.setValue(\r\n        name + \".cep\",\r\n        formatString(\"99.999-999\", form.getFieldState(\"newCEP\").value)\r\n      );\r\n      dispatch(actionCRUDImovel.update(form.getFieldState(name).value));\r\n    }\r\n    setShowNewCEP(false);\r\n  };\r\n\r\n  if (className !== undefined) {\r\n    className += \" form-control form-control-sm\";\r\n  } else {\r\n    className = \"form-control form-control-sm\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group mb-0\">\r\n      {label && (\r\n        <label htmlFor={\"id_\" + name} className=\"mb-0\">\r\n          {label}{\" \"}\r\n          <i\r\n            className=\"fa fa-question fa-sm\"\r\n            aria-hidden=\"true\"\r\n            title='Digite o codigo do imovel, insc. imobiliária, ou endereço &#013; ex.: &#013; endereço: \"logradouro,numero,complemento-bairro\" &#013; codigo do imóvel: \"123456\" &#013; insc. imobiliária (com ou sem pontos): \"123.456...\" &#013; Após terminar de digitar espere por meio segundo para a pesquisar ser realizada'\r\n          />\r\n        </label>\r\n      )}\r\n\r\n      <div className=\"autocomplete\">\r\n        <Field\r\n          component=\"input\"\r\n          type=\"text\"\r\n          {...props}\r\n          className={className}\r\n          id={\"id_\" + name_string}\r\n          name={name_string}\r\n          autoComplete=\"off\"\r\n        />\r\n        <OnChange name=\"imovel.name_string\">\r\n          {(value, previous) => {\r\n            handleValueChange(value, previous);\r\n          }}\r\n        </OnChange>\r\n        <OnFocus name=\"imovel.name_string\">\r\n          {() => {\r\n            handleFocus(true);\r\n          }}\r\n        </OnFocus>\r\n        <OnBlur name=\"imovel.name_string\">\r\n          {() => {\r\n            handleFocus(false);\r\n          }}\r\n        </OnBlur>\r\n        <Field component=\"input\" type=\"hidden\" id={\"id_\" + name} name={name} />\r\n        <div className={showAutocomplete ? \"autocomplete-items\" : \"d-none\"}>\r\n          {imoveis &&\r\n            imoveis.map((imovel, index) => (\r\n              <div\r\n                role=\"button\"\r\n                key={index}\r\n                data-imovel_id={imovel.id}\r\n                data-imovel_value={imovel.name_string}\r\n                onMouseDown={handleImovelChoose}\r\n                //onClick={handleImovelChoose}\r\n                className={\r\n                  currentImovel\r\n                    ? imovel.name_string === currentImovel.name_string\r\n                      ? \"autocomplete-active\"\r\n                      : \"\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                {imovel.name_string}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <Error name={name_string} />\r\n      {showResult && currentImovel && (\r\n        <ul className=\"list-group p-1 m-2 autocomplete-resultlist border\">\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            razao_social: {currentImovel.razao_social}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Código do imóvel: {currentImovel.codigo}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Insc. Imobiliária: {currentImovel.inscricao_imobiliaria}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Contribuinte: {currentImovel.numero_contribuinte}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Endereço: {currentImovel.logradouro + \", \" + currentImovel.numero}\r\n            {currentImovel.complemento ? \", \" + currentImovel.complemento : \"\"}\r\n            {\" - \"}\r\n            Bairro: {currentImovel.bairro}\r\n            {\" - \"}CEP:{\" \"}\r\n            {currentImovel.cep && formatString(\"99.999-999\", currentImovel.cep)}\r\n            <div className=\"row no-gutters d-inline-flex float-right\">\r\n              <IconButton\r\n                icon={showNewCEP ? \"fa-envelope-open-o\" : \"fa-envelope-o\"}\r\n                onclick={() => {\r\n                  setLogradouroBusca(currentImovel.logradouro);\r\n                  setCEPResults();\r\n                  setShowNewCEP(!showNewCEP);\r\n                  form.mutators.setValue(\r\n                    \"newCEP\",\r\n                    formatString(\"99.999-999\", currentImovel.cep)\r\n                  );\r\n                }}\r\n                title=\"Autalizar CEP\"\r\n              />\r\n              <GeoItajaiButton codigo_lote={currentImovel.codigo_lote} />\r\n              <GeoItajaiAlvaraButton codigo_lote={currentImovel.codigo_lote} />\r\n              <MapButton\r\n                address={\r\n                  currentImovel.logradouro +\r\n                  \",\" +\r\n                  currentImovel.numero +\r\n                  \"-\" +\r\n                  currentImovel.bairro +\r\n                  \"-itajaí\"\r\n                }\r\n              />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            <div className={showNewCEP ? \"collapse show p-1\" : \"collapse\"}>\r\n              <div className=\"card card-body d-block p-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-sm\"\r\n                  maxLength=\"255\"\r\n                  value={logradouroBusca}\r\n                  placeholder=\"Logradouro sem número e sem bairro\"\r\n                  onChange={(event) => {\r\n                    setLogradouroBusca(event.target.value);\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary btn-sm my-1\"\r\n                  onClick={() => {\r\n                    handleBuscaCEP();\r\n                  }}\r\n                >\r\n                  Buscar CEP <i className=\"fa fa-search\"></i>\r\n                </button>\r\n                <div className=\"list-group border-0\">\r\n                  {CEPResults &&\r\n                    CEPResults.map((result, index) => (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"list-group-item list-group-item-action p-1 \"\r\n                        key={index}\r\n                        onClick={() => {\r\n                          form.mutators.setValue(\r\n                            \"newCEP\",\r\n                            formatString(\"99.999-999\", result.cep)\r\n                          );\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {result.logradouroDNEC}\r\n                          {\" - \"}\r\n                          {result.bairro}\r\n                          {\": \"}\r\n                          {result.cep}\r\n                        </span>\r\n                      </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"newCEP\"\r\n                    label=\"Novo CEP:\"\r\n                    maxLength=\"255\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    parse={formatString(\"99.999-999\")}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={() => {\r\n                      handleSaveCEP();\r\n                    }}\r\n                  >\r\n                    Salvar CEP\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutocompleteImovel;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  actionCRUDNotice,\r\n  getLatest,\r\n} from \"../../../actions/notice/actionNotice\";\r\nimport { Form } from \"react-final-form\";\r\nimport arrayMutators from \"final-form-arrays\";\r\nimport { FieldArray } from \"react-final-form-arrays\";\r\nimport moment from \"moment\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport {\r\n  getNoticeEventType,\r\n  filterOnlyInArrayByID,\r\n  getFirstVA,\r\n  hasNotification,\r\n} from \"../utils\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport AutocompleteImovel from \"../../common/AutocompleteImovel\";\r\nimport formatString from \"format-string-by-pattern\";\r\nimport {\r\n  getnoticereportdocx,\r\n  getVArequestdocx,\r\n} from \"../../../actions/actionFiles\";\r\nimport { IconButton } from \"../common\";\r\n\r\nconst FormNoticeFine = ({ fields, name, index, isOwner }) => {\r\n  return (\r\n    <div key={name} className=\"row px-4 py-1 form-inline border-bottom\">\r\n      <InputFormGroup\r\n        name={name + \".identification\"}\r\n        label=\"Nº:\"\r\n        size=\"10\"\r\n        maxLength=\"255\"\r\n        placeholder=\"identificação\"\r\n        className=\"mx-1\"\r\n      />\r\n      <InputFormGroup\r\n        name={name + \".date\"}\r\n        label=\"Data:\"\r\n        type=\"date\"\r\n        className=\"mx-1\"\r\n      />\r\n      {isOwner && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger border-0 btn-sm\"\r\n          onClick={() => fields.remove(index)}\r\n        >\r\n          <i className=\"fa fa-trash fa-sm\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormNoticeAppeal = ({ form, fields, name, index, isOwner }) => {\r\n  return (\r\n    <Fragment key={name}>\r\n      <div className=\"row px-4 py-1 form-inline\">\r\n        <InputFormGroup\r\n          name={name + \".identification\"}\r\n          label=\"Nº:\"\r\n          size=\"10\"\r\n          maxLength=\"255\"\r\n          placeholder=\"identificação\"\r\n          className=\"mx-1\"\r\n        />\r\n        <InputFormGroup\r\n          name={name + \".extension\"}\r\n          label=\"Extensão (dias):\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"999\"\r\n          placeholder=\"0\"\r\n          className=\"mx-1\"\r\n          classNameDiv=\"m-1\"\r\n        />\r\n        {isOwner && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger border-0 btn-sm\"\r\n            onClick={() => fields.remove(index)}\r\n          >\r\n            <i className=\"fa fa-trash fa-sm\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"row px-4 py-1 form-inline border-bottom\">\r\n        <InputFormGroup\r\n          name={name + \".start_date\"}\r\n          label=\"Inicio:\"\r\n          type=\"date\"\r\n          className=\"mx-1\"\r\n          validate={required}\r\n        />\r\n        <InputFormGroup\r\n          name={name + \".end_date\"}\r\n          label=\"Fim:\"\r\n          type=\"date\"\r\n          className=\"mx-1\"\r\n        />\r\n        <IconButton\r\n          icon={\"fa-times-circle-o\"}\r\n          onclick={() => {\r\n            form.mutators.setValue(name + \".end_date\", null);\r\n          }}\r\n          title=\"Limpar data\"\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst FormNoticeEvent = ({ form, fields, name, index, push, isOwner }) => {\r\n  const notice_event_type = getNoticeEventType(fields.value[index]);\r\n  return (\r\n    <div>\r\n      <hr className=\"m-1\" />\r\n      <div className=\"row text-center\">\r\n        <span className=\"col text-uppercase w-100 font-weight-bold text-nowrap inline-block\">\r\n          {notice_event_type.name}\r\n          {hasNotification(notice_event_type) &&\r\n            fields.value[index].id &&\r\n            fields.value[index].id.toString() !== \"0\" && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary border-0 btn-sm mx-1 never-disabled\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#ModalNoticeNotification\"\r\n                data-modalcall=\"notification\"\r\n                data-notice_event_id={fields.value[index].id}\r\n                data-notice_type_id={notice_event_type.id}\r\n              >\r\n                <i className=\"fa fa-print\"></i>\r\n              </button>\r\n            )}\r\n        </span>\r\n\r\n        {isOwner && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger border-0\"\r\n            onClick={() => fields.remove(index)}\r\n          >\r\n            <i className=\"fa fa-trash fa-lg\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n      {getNoticeEventType(fields.value[index]) !== undefined && (\r\n        <div className=\"row\">\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"form-inline\">\r\n              <InputFormGroup\r\n                name={name + \"date\"}\r\n                label=\"Data:\"\r\n                type=\"date\"\r\n                className=\"mx-1\"\r\n                classNameDiv=\"m-1\"\r\n                validate={required}\r\n              />\r\n              <InputFormGroup\r\n                name={name + \".identification\"}\r\n                label=\"Nº:\"\r\n                type=\"text\"\r\n                size=\"15\"\r\n                maxLength=\"255\"\r\n                placeholder=\"identificação\"\r\n                className=\"mx-1\"\r\n                classNameDiv=\"m-1\"\r\n              />\r\n              {getNoticeEventType(fields.value[index]).show_report_number && (\r\n                <InputFormGroup\r\n                  name={name + \"report_number\"}\r\n                  label=\"RF:\"\r\n                  type=\"text\"\r\n                  size=\"10\"\r\n                  maxLength=\"255\"\r\n                  className=\"mx-1\"\r\n                  classNameDiv=\"m-1\"\r\n                />\r\n              )}\r\n              {getNoticeEventType(fields.value[index]).show_concluded && (\r\n                <CheckboxFormGroup\r\n                  name={name + \".concluded\"}\r\n                  label=\"Concluído\"\r\n                  className=\"mx-1\"\r\n                  classNameDiv=\"m-1\"\r\n                />\r\n              )}\r\n              {getNoticeEventType(fields.value[index]).show_deadline && (\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name={name + \".deadline\"}\r\n                    label=\"Prazo (dias):\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"999\"\r\n                    placeholder=\"prazo\"\r\n                    className=\"mx-1\"\r\n                    classNameDiv=\"m-1\"\r\n                    validate={required}\r\n                  />\r\n                  <CheckboxFormGroup\r\n                    name={name + \".deadline_working_days\"}\r\n                    label=\"Apenas dias úteis\"\r\n                    className=\"mx-1\"\r\n                    classNameDiv=\"m-1\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {getNoticeEventType(fields.value[index]).show_fine && (\r\n            <Fragment>\r\n              <div className=\"row text-left m-1\">\r\n                <span className=\"col-lg w-100\">Multas:</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary btn-sm\"\r\n                  onClick={() =>\r\n                    push(name + \".notice_fines\", {\r\n                      date: moment().format(\"YYYY-MM-DD\"),\r\n                    })\r\n                  }\r\n                >\r\n                  Adicionar multa\r\n                </button>\r\n              </div>\r\n              <div className=\"row pr-1 pb-1 w-100 justify-content-center\">\r\n                <FieldArray name={name + \".notice_fines\"}>\r\n                  {({ fields }) =>\r\n                    fields.map((name, index) => (\r\n                      <FormNoticeFine\r\n                        key={name}\r\n                        fields={fields}\r\n                        name={name}\r\n                        index={index}\r\n                        isOwner={isOwner}\r\n                      />\r\n                    ))\r\n                  }\r\n                </FieldArray>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {getNoticeEventType(fields.value[index]).show_appeal && (\r\n            <Fragment>\r\n              <div className=\"row text-left m-1\">\r\n                <span className=\"col-lg w-100\">Recursos:</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary btn-sm\"\r\n                  onClick={() =>\r\n                    push(name + \".notice_appeals\", {\r\n                      start_date: moment().format(\"YYYY-MM-DD\"),\r\n                    })\r\n                  }\r\n                >\r\n                  Adicionar recurso\r\n                </button>\r\n              </div>\r\n              <div className=\"row pr-1 pb-1 w-100 justify-content-center\">\r\n                <FieldArray name={name + \".notice_appeals\"}>\r\n                  {({ fields }) =>\r\n                    fields.map((name, index) => (\r\n                      <FormNoticeAppeal\r\n                        key={name}\r\n                        form={form}\r\n                        fields={fields}\r\n                        name={name}\r\n                        index={index}\r\n                        isOwner={isOwner}\r\n                      />\r\n                    ))\r\n                  }\r\n                </FieldArray>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst requiredArray = (value) =>\r\n  value && value.length > 0 ? undefined : \"Required\";\r\n\r\nconst FormNotice = ({ notice, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(notice.date).format(\"DD/MM/YYYY\");\r\n\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      confirm_alert += newLine;\r\n      confirm_alert += \"Nº: \" + notice.notice_events[index].identification;\r\n      confirm_alert +=\r\n        \" (\" +\r\n        notice_event_types.find(\r\n          (element) =>\r\n            element.id === notice.notice_events[index].notice_event_type\r\n        ).name +\r\n        \")\";\r\n    }\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNotice.delete(notice.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = (values) => {\r\n    let removedNoticeEvents = notice.notice_events.filter(\r\n      filterOnlyInArrayByID(values.notice_events)\r\n    );\r\n    if (removedNoticeEvents.length === 0) {\r\n      return true;\r\n    }\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Salvando este Auto você estará removendo:\";\r\n    for (let index = 0; index < removedNoticeEvents.length; index++) {\r\n      confirm_alert += newLine;\r\n      confirm_alert += \"Nº: \" + removedNoticeEvents[index].identification;\r\n      confirm_alert +=\r\n        \" (\" +\r\n        notice_event_types.find(\r\n          (element) =>\r\n            element.id === removedNoticeEvents[index].notice_event_type\r\n        ).name +\r\n        \")\";\r\n    }\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Gostaria de continuar?\";\r\n\r\n    return window.confirm(confirm_alert);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        dispatch(actionCRUDNotice.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          dispatch(actionCRUDNotice.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={notice}\r\n      onSubmit={onSubmit}\r\n      mutators={{\r\n        ...arrayMutators,\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        form: {\r\n          mutators: { push },\r\n        },\r\n        form,\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <ToogleFieldSet isDisabled={true}>\r\n                <div className=\"row no-gutters form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    validate={required}\r\n                    className=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </div>\r\n              </ToogleFieldSet>\r\n              <AutocompleteImovel\r\n                name=\"imovel\"\r\n                name_string=\"imovel.name_string\"\r\n                label=\"Imóvel:\"\r\n                form={form}\r\n                disabled={!isOwner}\r\n              />\r\n              {form &&\r\n                notice &&\r\n                notice.id === 0 &&\r\n                form.getFieldState(\"imovel\") !== undefined &&\r\n                form.getFieldState(\"imovel\").value && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        getLatest(form.getFieldState(\"imovel\").value.id)\r\n                      );\r\n                    }}\r\n                  >\r\n                    Carregar Autos passados deste Imóvel\r\n                  </button>\r\n                )}\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"document\"\r\n                  label=\"CPF/CNPJ:\"\r\n                  maxLength=\"255\"\r\n                  parse={(value) => {\r\n                    if (!value) return value;\r\n                    const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                    if (value.length > 14) {\r\n                      return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                    } else {\r\n                      return formatString(\"999.999.999-99\", onlyNumbers);\r\n                    }\r\n                  }}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"address\"\r\n                  label=\"Endereço:\"\r\n                  maxLength=\"255\"\r\n                />\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"3\"\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">Adicionar:</div>\r\n                  <div className=\"col text-left\">\r\n                    {notice_event_types.map((notice_event_type, index) => (\r\n                      <button\r\n                        key={index}\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-primary btn-sm m-1\"\r\n                        onClick={() =>\r\n                          push(\"notice_events\", {\r\n                            date: day.format(\"YYYY-MM-DD\"),\r\n                            deadline: notice_event_type.default_deadline,\r\n                            deadline_working_days:\r\n                              notice_event_type.default_deadline_working_days,\r\n                            concluded: notice_event_type.default_concluded,\r\n                            notice_event_type: notice_event_type.id,\r\n                          })\r\n                        }\r\n                      >\r\n                        {notice_event_type.name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </ToogleFieldSet>\r\n              <div className={notice && notice.id === 0 ? \"row d-none\" : \"row\"}>\r\n                <div className=\"col text-left\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-sm m-1\"\r\n                    onClick={() => {\r\n                      dispatch(getnoticereportdocx(notice));\r\n                    }}\r\n                    disabled={notice && notice.imovel ? false : true}\r\n                  >\r\n                    Gerar Relatório de Fiscalização\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-sm m-1\"\r\n                    onClick={() => {\r\n                      dispatch(getVArequestdocx(getFirstVA(notice)));\r\n                    }}\r\n                    disabled={\r\n                      notice && notice.imovel\r\n                        ? getFirstVA(notice)\r\n                          ? false\r\n                          : true\r\n                        : true\r\n                    }\r\n                  >\r\n                    Gerar Pedido de VA\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <div className=\"container\">\r\n                  <FieldArray name=\"notice_events\" validate={requiredArray}>\r\n                    {({ fields, meta: { touched } }) => (\r\n                      <div>\r\n                        {fields.map((name, index) => (\r\n                          <FormNoticeEvent\r\n                            key={name}\r\n                            form={form}\r\n                            fields={fields}\r\n                            name={name}\r\n                            index={index}\r\n                            push={push}\r\n                            isOwner={isOwner}\r\n                          />\r\n                        ))}\r\n                        {fields.length === 0 && touched ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            É necessario adicionar ao menos um Auto ou VA\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </FieldArray>\r\n                </div>\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              notice !== undefined ? (notice.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={\r\n              notice !== undefined ? (notice.id !== 0 ? true : false) : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNotice;\r\n","import axios from \"axios\";\r\nimport { returnErrors, createMessage } from \"./actionMessages\";\r\nimport { tokenConfig } from \"./actionAuth\";\r\nimport store from \"../store\";\r\nimport { getNoticeEventType } from \"../components/calendario/utils\";\r\n\r\nexport const getReportPDF = (values) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: values },\r\n    tokenConfig(getState)\r\n  );\r\n  let user = store\r\n    .getState()\r\n    .user.users.users.find(\r\n      (user) => user.id.toString() === values.user_id.toString()\r\n    );\r\n\r\n  let user_name = \"\";\r\n  if (user) {\r\n    user_name = user.first_name;\r\n    if (user.last_name) {\r\n      user_name += \" \" + user.last_name;\r\n    }\r\n    user_name += \"-\";\r\n  }\r\n  let fileName = \"relatório_mensal-\" + user_name + values.month + \".pdf\";\r\n  try {\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/reportpdf/\", headerWithValues)\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getReportPDFAll = (values) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: values },\r\n    tokenConfig(getState)\r\n  );\r\n  let fileName = \"relatório mensal de desempenho-\" + values.month + \".pdf\";\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/reportpdfall/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getSheetCSV = (values) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: values },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  let user = store\r\n    .getState()\r\n    .user.users.users.find(\r\n      (user) => user.id.toString() === values.user_id.toString()\r\n    );\r\n\r\n  let user_name = \"\";\r\n  if (user) {\r\n    user_name = user.first_name;\r\n    if (user.last_name) {\r\n      user_name += \" \" + user.last_name;\r\n    }\r\n    user_name += \"-\";\r\n  }\r\n  let fileName = \"planilha_mensal-\" + user_name + values.month + \".csv\";\r\n  try {\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/sheetcsv/\", headerWithValues)\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"text/csv\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getnoticereportdocx = (notice) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: { notice_id: notice.id } },\r\n    tokenConfig(getState)\r\n  );\r\n  let fileName = \"relatório de Fiscalização.docx\";\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/noticereportdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getVArequestdocx = (vistoriaAdministrativa) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    {\r\n      responseType: \"blob\",\r\n      params: { vistoria_administrativa_id: vistoriaAdministrativa.id },\r\n    },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  let fileName = \"Pedido de VA.docx\";\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/varequestdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const downloadFileVARequestDocx = () => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    {\r\n      responseType: \"blob\",\r\n    },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/filevarequestdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = \"va_padrao.docx\";\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const uploadFileVARequestDocx = (values) => (dispatch, getState) => {\r\n  console.log(\"ploadFileVARequestDocx:\", values);\r\n  let formData = new FormData();\r\n  formData.append(\"va_padrao\", values.va_padrao);\r\n  try {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/filevarequestdocx/\",\r\n        formData,\r\n        tokenConfig(getState, { \"Content-Type\": \"multipart/form-data\" })\r\n      )\r\n      .then((res) => {\r\n        dispatch(createMessage({ SUCCESS: res.data.detail }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const downloadFileRFRequestDocx = () => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    {\r\n      responseType: \"blob\",\r\n    },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/filerfrequestdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = \"rf_padrao.docx\";\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const uploadFileRFRequestDocx = (values) => (dispatch, getState) => {\r\n  console.log(\"uploadFileRFRequestDocx:\", values);\r\n  let formData = new FormData();\r\n  formData.append(\"rf_padrao\", values.rf_padrao);\r\n  try {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/filerfrequestdocx/\",\r\n        formData,\r\n        tokenConfig(getState, { \"Content-Type\": \"multipart/form-data\" })\r\n      )\r\n      .then((res) => {\r\n        dispatch(createMessage({ SUCCESS: res.data.detail }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const downloadNotification = (\r\n  notice_event_type_file,\r\n  notice_event,\r\n  notice_event_reference\r\n) => (dispatch, getState) => {\r\n  if (!notice_event || !notice_event_type_file) {\r\n    return false;\r\n  }\r\n  let params = {\r\n    notice_event_id: notice_event.id,\r\n    notice_event_type_file_id: notice_event_type_file.id,\r\n  };\r\n\r\n  if (notice_event_reference) {\r\n    params = {\r\n      notice_event_id: notice_event.id,\r\n      notice_event_type_file_id: notice_event_type_file.id,\r\n      notice_event_reference: notice_event_reference,\r\n    };\r\n  }\r\n\r\n  const notice_event_type = getNoticeEventType(notice_event);\r\n\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    {\r\n      responseType: \"blob\",\r\n      params: params,\r\n    },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  let fileName =\r\n    \"Auto \" +\r\n    notice_event_type.name.toUpperCase() +\r\n    \"_\" +\r\n    notice_event.identification +\r\n    \"_\" +\r\n    notice_event_type_file.name +\r\n    \".docx\";\r\n\r\n  fileName = fileName.replace(/[/\\\\?%*:|\"<>,;=]/g, \"-\");\r\n\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/downloadnotification/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDSurvey } from \"../../../actions/survey/actionSurvey\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport moment from \"moment\";\r\nimport AutocompleteImovel from \"../../common/AutocompleteImovel\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormSurvey = ({ survey, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && survey !== undefined) {\r\n      setIsOwner(authuser.id === survey.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, survey]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta Vistoria de \";\r\n    confirm_alert +=\r\n      survey_event_types.find(\r\n        (element) => element.id === survey.survey_event_type\r\n      ).name + \"?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Nº: \" + survey.identification;\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(survey.date).format(\"DD/MM/YYYY\");\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurvey.delete(survey.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        dispatch(actionCRUDSurvey.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          dispatch(actionCRUDSurvey.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={survey}\r\n      onSubmit={onSubmit}\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <ToogleFieldSet isDisabled={true}>\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    validate={required}\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </ToogleFieldSet>\r\n                <ToogleFieldSet isDisabled={!isOwner}>\r\n                  <InputFormGroup\r\n                    name=\"date\"\r\n                    label=\"Data:\"\r\n                    type=\"date\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  />\r\n                </ToogleFieldSet>\r\n              </div>\r\n              <AutocompleteImovel\r\n                name=\"imovel\"\r\n                name_string=\"imovel.name_string\"\r\n                label=\"Imóvel:\"\r\n                form={form}\r\n                disabled={!isOwner}\r\n              />\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"document\"\r\n                  label=\"CPF/CNPJ:\"\r\n                  maxLength=\"255\"\r\n                  parse={(value) => {\r\n                    if (!value) return value;\r\n                    const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                    if (value.length > 14) {\r\n                      return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                    } else {\r\n                      return formatString(\"999.999.999-99\", onlyNumbers);\r\n                    }\r\n                  }}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"address\"\r\n                  label=\"Endereço:\"\r\n                  maxLength=\"255\"\r\n                />\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"3\"\r\n                />\r\n                <div className=\"d-flex flex-row\">\r\n                  <div className=\"form-inline\">\r\n                    <InputFormGroup\r\n                      name=\"identification\"\r\n                      label=\"Identificação:\"\r\n                      maxLength=\"255\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    />\r\n                    <SelectFormGroup\r\n                      name=\"survey_event_type\"\r\n                      label=\"Tipo:\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    >\r\n                      <option value=\"\">---------</option>\r\n                      {survey_event_types.map((survey_event_type, index) => (\r\n                        <option\r\n                          key={survey_event_type.id}\r\n                          value={survey_event_type.id}\r\n                        >\r\n                          {survey_event_type.order} - {survey_event_type.name}\r\n                        </option>\r\n                      ))}\r\n                    </SelectFormGroup>\r\n                    <CheckboxFormGroup\r\n                      name=\"concluded\"\r\n                      label=\"Concluído\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              survey !== undefined ? (survey.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={\r\n              survey !== undefined ? (survey.id !== 0 ? true : false) : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSurvey;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDReport } from \"../../../actions/report/actionReport\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport moment from \"moment\";\r\nimport AutocompleteImovel from \"../../common/AutocompleteImovel\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormReport = ({ report, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const report_event_types = useSelector(\r\n    (state) => state.report.report_event_types.report_event_types\r\n  );\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && report !== undefined) {\r\n      setIsOwner(authuser.id === report.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, report]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta Vistoria de \";\r\n    confirm_alert +=\r\n      report_event_types.find(\r\n        (element) => element.id === report.report_event_type\r\n      ).name + \"?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Nº: \" + report.identification;\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(report.date).format(\"DD/MM/YYYY\");\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDReport.delete(report.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        dispatch(actionCRUDReport.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          dispatch(actionCRUDReport.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={report}\r\n      onSubmit={onSubmit}\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <ToogleFieldSet isDisabled={true}>\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    validate={required}\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </ToogleFieldSet>\r\n                <ToogleFieldSet isDisabled={!isOwner}>\r\n                  <InputFormGroup\r\n                    name=\"date\"\r\n                    label=\"Data:\"\r\n                    type=\"date\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  />\r\n                </ToogleFieldSet>\r\n              </div>\r\n              <AutocompleteImovel\r\n                name=\"imovel\"\r\n                name_string=\"imovel.name_string\"\r\n                label=\"Imóvel:\"\r\n                form={form}\r\n                disabled={!isOwner}\r\n              />\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"document\"\r\n                  label=\"CPF/CNPJ:\"\r\n                  maxLength=\"255\"\r\n                  parse={(value) => {\r\n                    if (!value) return value;\r\n                    const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                    if (value.length > 14) {\r\n                      return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                    } else {\r\n                      return formatString(\"999.999.999-99\", onlyNumbers);\r\n                    }\r\n                  }}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"address\"\r\n                  label=\"Endereço:\"\r\n                  maxLength=\"255\"\r\n                />\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"3\"\r\n                />\r\n                <div className=\"d-flex flex-row\">\r\n                  <div className=\"form-inline\">\r\n                    <InputFormGroup\r\n                      name=\"identification\"\r\n                      label=\"Identificação:\"\r\n                      maxLength=\"255\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    />\r\n                    <SelectFormGroup\r\n                      name=\"report_event_type\"\r\n                      label=\"Tipo:\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    >\r\n                      <option value=\"\">---------</option>\r\n                      {report_event_types.map((report_event_type, index) => (\r\n                        <option\r\n                          key={report_event_type.id}\r\n                          value={report_event_type.id}\r\n                        >\r\n                          {report_event_type.order} - {report_event_type.name}\r\n                        </option>\r\n                      ))}\r\n                    </SelectFormGroup>\r\n                    <CheckboxFormGroup\r\n                      name=\"concluded\"\r\n                      label=\"Concluído\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              report !== undefined ? (report.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={\r\n              report !== undefined ? (report.id !== 0 ? true : false) : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormReport;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCRUDActivity } from \"../../../actions/activity/actionActivity\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport moment from \"moment\";\r\nimport { createMessage } from \"../../../actions/actionMessages\";\r\n\r\nconst FormActivity = ({ activity, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const activitys = useSelector((state) => state.activity.activitys.activitys);\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && activity !== undefined) {\r\n      setIsOwner(authuser.id === activity.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, activity]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta Atividade?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(activity.date).format(\"DD/MM/YYYY\");\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDActivity.delete(activity.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    let errormgs = {\r\n      ERROR: \"Apenas é permitido um registro de atividade por data\",\r\n    };\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        if (\r\n          activitys.filter(\r\n            (activity) =>\r\n              activity.date === values.date && activity.owner === values.owner\r\n          ).length > 0\r\n        ) {\r\n          dispatch(createMessage(errormgs));\r\n          return;\r\n        }\r\n        dispatch(actionCRUDActivity.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          if (\r\n            activitys.filter(\r\n              (activity) =>\r\n                activity.id !== values.id &&\r\n                activity.date === values.date &&\r\n                activity.owner === values.owner\r\n            ).length > 0\r\n          ) {\r\n            dispatch(createMessage(errormgs));\r\n            return;\r\n          }\r\n          dispatch(actionCRUDActivity.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={activity}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <ToogleFieldSet isDisabled={true}>\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </ToogleFieldSet>\r\n                <ToogleFieldSet isDisabled={!isOwner}>\r\n                  <InputFormGroup\r\n                    name=\"date\"\r\n                    label=\"Data:\"\r\n                    type=\"date\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  />\r\n                </ToogleFieldSet>\r\n              </div>\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"20\"\r\n                  validate={required}\r\n                />\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              activity !== undefined\r\n                ? activity.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={\r\n              activity !== undefined\r\n                ? activity.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormActivity;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormNotice from \"./FormNotice\";\r\nimport FormSurvey from \"./FormSurvey\";\r\nimport FormReport from \"./FormReport\";\r\nimport FormActivity from \"./FormActivity\";\r\nimport store from \"../../../store\";\r\nimport moment from \"moment\";\r\n\r\nconst ModalEventTab = ({ active, name }) => {\r\n  return (\r\n    <a\r\n      className={\r\n        \"nav-item nav-link font-weight-bold text-capitalize\" +\r\n        (!active ? \" disabled\" : \"\")\r\n      }\r\n      id={\"nav-\" + name + \"-tab\"}\r\n      data-bs-toggle=\"tab\"\r\n      href={\"#nav-\" + name}\r\n      role=\"tab\"\r\n      aria-controls={\"nav-\" + name}\r\n    >\r\n      {name}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst ModalEventPanel = ({ name, children }) => {\r\n  return (\r\n    <div\r\n      className=\"tab-pane fade\"\r\n      id={\"nav-\" + name}\r\n      role=\"tabpanel\"\r\n      aria-labelledby={\"nav-\" + name + \"-tab\"}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function ModelFormEvent() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [notice, setNotice] = useState();\r\n  const [survey, setSurvey] = useState();\r\n  const [report, setReport] = useState();\r\n  const [activity, setActivity] = useState();\r\n\r\n  const [tabstate, setTabstate] = useState({\r\n    title: \"Criar\",\r\n    noticetab: true,\r\n    surveytab: true,\r\n    reporttab: true,\r\n    activitytab: true,\r\n    alltabs: true,\r\n  });\r\n\r\n  const [date, setDate] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const modalcall = e.relatedTarget.dataset.modalcall;\r\n\r\n    if (\r\n      modalcall !== \"notice\" &&\r\n      modalcall !== \"survey\" &&\r\n      modalcall !== \"report\" &&\r\n      modalcall !== \"activity_all\" &&\r\n      modalcall !== \"none\"\r\n    ) {\r\n      return false;\r\n    }\r\n    const currentUser = store.getState().user.users.current;\r\n\r\n    const notices = store.getState().notice.notices.notices;\r\n    const surveys = store.getState().survey.surveys.surveys;\r\n    const reports = store.getState().report.reports.reports;\r\n    const activitys = store.getState().activity.activitys.activitys;\r\n\r\n    setDate(moment(e.relatedTarget.dataset.day));\r\n\r\n    let notice;\r\n    if (e.relatedTarget.dataset.notice_id !== \"0\") {\r\n      notice = notices.find(\r\n        (notice) => notice.id.toString() === e.relatedTarget.dataset.notice_id\r\n      );\r\n    }\r\n    if (notice !== undefined) {\r\n      setNotice(notice);\r\n    } else {\r\n      setNotice({\r\n        id: 0,\r\n        imovel: null,\r\n        imovel_id: 0,\r\n        document: null,\r\n        date: e.relatedTarget.dataset.day,\r\n        address: null,\r\n        description: null,\r\n        owner: currentUser.id,\r\n        notice_events: [],\r\n        css_name: null,\r\n        resethack: [],\r\n      });\r\n    }\r\n    let survey;\r\n    if (e.relatedTarget.dataset.survey_id !== \"0\") {\r\n      survey = surveys.find(\r\n        (survey) => survey.id.toString() === e.relatedTarget.dataset.survey_id\r\n      );\r\n    }\r\n    if (survey !== undefined) {\r\n      setSurvey(survey);\r\n    } else {\r\n      setSurvey({\r\n        id: 0,\r\n        imovel: null,\r\n        imovel_id: 0,\r\n        document: null,\r\n        identification: null,\r\n        date: e.relatedTarget.dataset.day,\r\n        survey_event_type: null,\r\n        address: null,\r\n        description: null,\r\n        concluded: false,\r\n        owner: currentUser.id,\r\n        resethack: [],\r\n      });\r\n    }\r\n    let report;\r\n    if (e.relatedTarget.dataset.report_id !== \"0\") {\r\n      report = reports.find(\r\n        (report) => report.id.toString() === e.relatedTarget.dataset.report_id\r\n      );\r\n    }\r\n    if (report !== undefined) {\r\n      setReport(report);\r\n    } else {\r\n      setReport({\r\n        id: 0,\r\n        imovel: null,\r\n        imovel_id: 0,\r\n        document: null,\r\n        identification: null,\r\n        date: e.relatedTarget.dataset.day,\r\n        report_event_type: null,\r\n        address: null,\r\n        description: null,\r\n        concluded: false,\r\n        owner: currentUser.id,\r\n        resethack: [],\r\n      });\r\n    }\r\n    let activity;\r\n    if (e.relatedTarget.dataset.activity_id !== \"0\") {\r\n      activity = activitys.find(\r\n        (activity) =>\r\n          activity.id.toString() === e.relatedTarget.dataset.activity_id\r\n      );\r\n    }\r\n    if (activity !== undefined) {\r\n      setActivity(activity);\r\n    } else {\r\n      setActivity({\r\n        id: 0,\r\n        date: e.relatedTarget.dataset.day,\r\n        owner: currentUser.id,\r\n        description: null,\r\n        resethack: [],\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"notice\") {\r\n      setTabstate({\r\n        title: \"Editar Auto\",\r\n        noticetab: true,\r\n        surveytab: false,\r\n        reporttab: false,\r\n        activitytab: false,\r\n        alltabs: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"survey\") {\r\n      setTabstate({\r\n        title: \"Editar Vistoria\",\r\n        noticetab: false,\r\n        surveytab: true,\r\n        reporttab: false,\r\n        activitytab: false,\r\n        alltabs: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"report\") {\r\n      setTabstate({\r\n        title: \"Editar Relatório\",\r\n        noticetab: false,\r\n        surveytab: false,\r\n        reporttab: true,\r\n        activitytab: false,\r\n        alltabs: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"activity\") {\r\n      setTabstate({\r\n        title: \"Editar Atividade\",\r\n        noticetab: false,\r\n        surveytab: false,\r\n        reporttab: false,\r\n        activitytab: true,\r\n        alltabs: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"activity_all\") {\r\n      setTabstate({\r\n        title: \"Editar Atividade\",\r\n        noticetab: false,\r\n        surveytab: false,\r\n        reporttab: false,\r\n        activitytab: true,\r\n        alltabs: true,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"none\") {\r\n      setTabstate({\r\n        title: \"Criar\",\r\n        noticetab: true,\r\n        surveytab: true,\r\n        reporttab: true,\r\n        activitytab: true,\r\n        alltabs: true,\r\n      });\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleHiddenModal = (e) => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      tabstate.noticetab &&\r\n      !tabstate.surveytab &&\r\n      !tabstate.reporttab &&\r\n      !tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-auto-tab\").click();\r\n    } else if (\r\n      !tabstate.noticetab &&\r\n      tabstate.surveytab &&\r\n      !tabstate.reporttab &&\r\n      !tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-vistoria-tab\").click();\r\n    } else if (\r\n      !tabstate.noticetab &&\r\n      !tabstate.surveytab &&\r\n      tabstate.reporttab &&\r\n      !tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-relatório-tab\").click();\r\n    } else if (\r\n      !tabstate.noticetab &&\r\n      !tabstate.surveytab &&\r\n      !tabstate.reporttab &&\r\n      tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-atividade-tab\").click();\r\n    } else {\r\n      document.getElementById(\"nav-auto-tab\").click();\r\n    }\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    window.addEventListener(\"hidden.bs.modal\", handleHiddenModal);\r\n    return () => {\r\n      window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n      window.removeEventListener(\"hidden.bs.modal\", handleHiddenModal);\r\n    };\r\n  }, [tabstate]);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalEvent\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\" id=\"id_modal-header\">\r\n              {tabstate.title}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <nav>\r\n            <div\r\n              className=\"nav nav-tabs justify-content-center\"\r\n              id=\"nav-tab\"\r\n              role=\"tablist\"\r\n            >\r\n              <ModalEventTab\r\n                active={tabstate.noticetab || tabstate.alltabs}\r\n                name=\"auto\"\r\n              />\r\n              <ModalEventTab\r\n                active={tabstate.surveytab || tabstate.alltabs}\r\n                name=\"vistoria\"\r\n              />\r\n              <ModalEventTab\r\n                active={tabstate.reporttab || tabstate.alltabs}\r\n                name=\"relatório\"\r\n              />\r\n              <ModalEventTab\r\n                active={tabstate.activitytab || tabstate.alltabs}\r\n                name=\"atividade\"\r\n              />\r\n            </div>\r\n          </nav>\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <ModalEventPanel name=\"auto\">\r\n              <FormNotice\r\n                notice={notice}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n            <ModalEventPanel name=\"vistoria\">\r\n              <FormSurvey\r\n                survey={survey}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n            <ModalEventPanel name=\"relatório\">\r\n              <FormReport\r\n                report={report}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n            <ModalEventPanel name=\"atividade\">\r\n              <FormActivity\r\n                activity={activity}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, SelectFormGroup, required } from \"../common/Forms\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { newUser } from \"../../actions/user/actionUser\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { OnChange } from \"react-final-form-listeners\";\r\n\r\nconst TaskBar = ({ momentdate, dateType }) => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const momentDate = useSelector((state) => state.date);\r\n\r\n  const onSubmit = (values) => {};\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-2\">\r\n      <div className=\"form-inline\">\r\n        <button\r\n          className=\"btn btn-sm btn-outline-primary mx-1 d-none d-lg-inline-block\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalEvent\"\r\n          data-modalcall=\"none\"\r\n          data-day={momentDate ? momentDate.format(\"YYYY-MM-DD\") : \"\"}\r\n        >\r\n          Novo Evento\r\n        </button>\r\n        <Form\r\n          initialValues={{ momentdate, currentUser }}\r\n          onSubmit={onSubmit}\r\n          render={({ handleSubmit }) => {\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"needs-validation d-flex\"\r\n                noValidate\r\n              >\r\n                <div className=\"col form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"currentUser.id\"\r\n                    label=\"AFM:\"\r\n                    className=\"mx-1\"\r\n                  >\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                  <OnChange name=\"currentUser.id\">\r\n                    {(value, previous) => {\r\n                      let user = users.find(\r\n                        (user) => user.id.toString() === value\r\n                      );\r\n                      if (user !== undefined) {\r\n                        dispatch(newUser(user));\r\n                      }\r\n                    }}\r\n                  </OnChange>\r\n                </div>\r\n                {momentdate && dateType && (\r\n                  <div className=\"col form-inline\">\r\n                    <InputFormGroup\r\n                      name=\"momentdate\"\r\n                      label=\"data:\"\r\n                      type={dateType}\r\n                      className=\"mx-1\"\r\n                      validate={required}\r\n                      parse={\r\n                        dateType === \"month\"\r\n                          ? (value) => value && moment(value + \"-01\")\r\n                          : (value) => value && moment(value)\r\n                      }\r\n                      format={\r\n                        dateType === \"month\"\r\n                          ? (value) => (value ? value.format(\"YYYY-MM\") : \"\")\r\n                          : (value) => (value ? value.format(\"YYYY-MM-DD\") : \"\")\r\n                      }\r\n                    />\r\n                    <OnChange name=\"momentdate\">\r\n                      {(value, previous) => {\r\n                        dispatch(newDate(value));\r\n                      }}\r\n                    </OnChange>\r\n                  </div>\r\n                )}\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TaskBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport { downloadNotification } from \"../../../actions/actionFiles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getNoticeEvent } from \"../utils\";\r\n\r\nexport default function ModalNoticeNotification() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [noticeEventReference, setNoticeEventReference] = useState(\"\");\r\n\r\n  const [noticeEventType, setNoticeEventType] = useState();\r\n  const [noticeEvent, setNoticeEvent] = useState();\r\n\r\n  const notice_event_type_files = useSelector((state) =>\r\n    state.notice.notice_event_type_files.notice_event_type_files.filter(\r\n      function (notice_event_type_file) {\r\n        if (noticeEventType) {\r\n          return (\r\n            notice_event_type_file.notice_event_type === noticeEventType.id\r\n          );\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    )\r\n  );\r\n\r\n  const handleShowModal = (e) => {\r\n    const modalcall = e.relatedTarget.dataset.modalcall;\r\n    if (modalcall !== \"notification\") {\r\n      return false;\r\n    }\r\n\r\n    const noticeEventTypes = store.getState().notice.notice_event_types\r\n      .notice_event_types;\r\n\r\n    if (e.relatedTarget.dataset.notice_event_id !== \"0\") {\r\n      setNoticeEvent(getNoticeEvent(e.relatedTarget.dataset.notice_event_id));\r\n    }\r\n\r\n    let noticeEventType;\r\n    if (e.relatedTarget.dataset.notice_type_id !== \"0\") {\r\n      noticeEventType = noticeEventTypes.find(\r\n        (noticeEventType) =>\r\n          noticeEventType.id.toString() ===\r\n          e.relatedTarget.dataset.notice_type_id.toString()\r\n      );\r\n      setNoticeEventType(noticeEventType);\r\n    }\r\n    setNoticeEventReference(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeNotification\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header p-2\">\r\n            <h6 className=\"modal-title font-weight-bold\">\r\n              Notificação de {noticeEventType && noticeEventType.name} -{\" \"}\r\n              {noticeEvent && noticeEvent.identification}\r\n            </h6>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"container p-3\">\r\n            <form>\r\n              <div className=\"form-group form-inline\">\r\n                <label htmlFor=\"noticeReference\">Auto descumprido:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-sm mx-1\"\r\n                  id=\"noticeReference\"\r\n                  aria-describedby=\"noticeReferenceHelp\"\r\n                  placeholder=\"Identificação\"\r\n                  value={noticeEventReference}\r\n                  onChange={(e) => {\r\n                    setNoticeEventReference(e.target.value);\r\n                  }}\r\n                />\r\n                <small\r\n                  id=\"noticeReferenceHelp\"\r\n                  className=\"form-text text-muted\"\r\n                >\r\n                  Informe o numero do Auto descumprido para adicionar ao texto\r\n                </small>\r\n              </div>\r\n              <span>Escolha o tipo de notificação para impressão:</span>\r\n              {noticeEventType && notice_event_type_files.length > 0 ? (\r\n                notice_event_type_files\r\n                  .sort((a, b) => a.order - b.order)\r\n                  .map((notice_event_type_file, index) => {\r\n                    return (\r\n                      <div className=\"m-1\" key={notice_event_type_file.id}>\r\n                        <button\r\n                          className=\"btn btn-secondary btn-sm d-block w-100\"\r\n                          type=\"button\"\r\n                          onClick={() =>\r\n                            dispatch(\r\n                              downloadNotification(\r\n                                notice_event_type_file,\r\n                                noticeEvent,\r\n                                noticeEventReference\r\n                              )\r\n                            )\r\n                          }\r\n                        >\r\n                          {notice_event_type_file.name}\r\n                        </button>\r\n                      </div>\r\n                    );\r\n                  })\r\n              ) : (\r\n                <p>\r\n                  Não há notificações para este tipo de Auto, por favor solicite\r\n                  a um administrador o cadastro.\r\n                </p>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport Calendario from \"./Calendario\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getDateFromString } from \"./utils\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ModalFormEvent from \"./ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport ModalNoticeNotification from \"./ModalFormEvent/ModalNoticeNotification\";\r\n\r\nexport default function CalendarioMain() {\r\n  const dispatch = useDispatch();\r\n  const momentdate = useSelector((state) => state.date);\r\n  const user = useSelector((state) => state.user.users.current);\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    let thedate = moment();\r\n    if (location.hash !== \"\") {\r\n      thedate = moment(getDateFromString(location.hash.substring(1)));\r\n    }\r\n    dispatch(newDate(thedate));\r\n  }, [dispatch, location.hash]);\r\n  if (momentdate) {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row no-gutters px-3\">\r\n            <ModalFormEvent />\r\n            <ModalNoticeNotification />\r\n            <div className=\"col col-12\">\r\n              <TaskBar momentdate={momentdate} dateType=\"month\" />\r\n              <Calendario momentdate={momentdate} user={user} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\nimport { actionCRUDActivity } from \"../../actions/activity/actionActivity\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport Day from \"../calendario/Day\";\r\nimport \"./CalendarioTarefa.css\";\r\n\r\nconst CalendarioTarefa = ({ momentdate }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    moment.locale(\"pt-br\");\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    dispatch(actionCRUDReportEventType.read());\r\n    const params = {\r\n      start_date: momentdate.clone().format(\"YYYY-MM-DD\"),\r\n      end_date: momentdate.clone().format(\"YYYY-MM-DD\"),\r\n    };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDReport.read(params));\r\n    dispatch(actionCRUDActivity.read(params));\r\n  }, [dispatch, momentdate]);\r\n\r\n  return (\r\n    <table id=\"calendartarefa\" className=\"table table-light table-bordered \">\r\n      <tbody>\r\n        <tr>\r\n          <Day day={momentdate} momentdate={momentdate}>\r\n            {momentdate.format(\"D\").toString()}\r\n          </Day>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CalendarioTarefa;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getDateFromString } from \"../calendario/utils\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport CalendarioTarefa from \"./CalendarioTarefa\";\r\n\r\nexport default function Tarefas() {\r\n  const dispatch = useDispatch();\r\n  const momentdate = useSelector((state) => state.date);\r\n  const user = useSelector((state) => state.user.users.current);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let thedate = moment();\r\n    if (location.hash !== \"\") {\r\n      thedate = moment(getDateFromString(location.hash.substring(1)));\r\n    }\r\n    dispatch(newDate(thedate));\r\n  }, [dispatch, location.hash]);\r\n\r\n  if (momentdate) {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutters px-3 justify-content-md-center\">\r\n          <ModalFormEvent />\r\n          <div className=\"col col-12 col-md-9 col-lg-6\">\r\n            <TaskBar momentdate={momentdate} dateType=\"date\" />\r\n            <CalendarioTarefa momentdate={momentdate} user={user} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePassword } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst FormChangePassword = ({ authUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    if (values.new_password === values.new_password_check) {\r\n      dispatch(changePassword({ user: authUser, ...values }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (values.new_password !== values.new_password_check) {\r\n          errors.new_password = \"As novas senhas devem ser a iguais\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitError }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          {submitError && <div className=\"error\">{submitError}</div>}\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"old_password\"\r\n              label=\"Senha atual: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"new_password\"\r\n              label=\"Nova Senha: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"new_password_check\"\r\n              label=\"Nova Senha: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary font-weight-bold mt-2\"\r\n          >\r\n            Alterar Senha\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormChangePassword;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\n\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst FormUserData = ({ authUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(actionCRUDUserProfile.update(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={authUser}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <InputFormGroup\r\n            name=\"username\"\r\n            label=\"Username:\"\r\n            validate={required}\r\n          />\r\n          <InputFormGroup name=\"first_name\" label=\"Nome:\" validate={required} />\r\n          <InputFormGroup name=\"last_name\" label=\"Sobrenome:\" />\r\n          <InputFormGroup name=\"email\" label=\"email:\" />\r\n          <InputFormGroup name=\"profile.matricula\" label=\"Matrícula:\" />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary font-weight-bold mt-2\"\r\n          >\r\n            Salvar\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUserData;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  required,\r\n  SelectFormGroup,\r\n} from \"../common/Forms\";\r\n\r\nimport { getReportPDF } from \"../../actions/actionFiles.js\";\r\n\r\nconst FormReportPDF = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n  const users = useSelector((state) => state.user.users.users);\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(getReportPDF(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        user_id: authUser.id,\r\n        month: moment().format(\"YYYY-MM\"),\r\n        include_analytic_data: true,\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Baixar relatório individual\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <SelectFormGroup\r\n              name=\"user_id\"\r\n              id=\"id_user_id_report\"\r\n              label=\"AFM:\"\r\n              className=\"m-1\"\r\n            >\r\n              {users.map((user, index) => (\r\n                <option key={user.id} value={user.id}>\r\n                  {user.first_name} {user.last_name}\r\n                </option>\r\n              ))}\r\n            </SelectFormGroup>\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"month\"\r\n              id=\"id_month_report\"\r\n              label=\"Referência: \"\r\n              type=\"month\"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <CheckboxFormGroup\r\n              name=\"include_analytic_data\"\r\n              label=\"Incluir relatório analítico\"\r\n              className=\"m-1\"\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Criar relatório\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormReportPDF;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required, SelectFormGroup } from \"../common/Forms\";\r\n\r\nimport { getSheetCSV } from \"../../actions/actionFiles\";\r\n\r\nconst FormSheetCSV = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n  const users = useSelector((state) => state.user.users.users);\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(getSheetCSV(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        user_id: authUser.id,\r\n        month: moment().format(\"YYYY-MM\"),\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Baixar planilha em formato csv\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <SelectFormGroup\r\n              name=\"user_id\"\r\n              id=\"id_user_id_sheet\"\r\n              label=\"AFM:\"\r\n              className=\"m-1\"\r\n            >\r\n              {users.map((user, index) => (\r\n                <option key={user.id} value={user.id}>\r\n                  {user.first_name} {user.last_name}\r\n                </option>\r\n              ))}\r\n            </SelectFormGroup>\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"month\"\r\n              id=\"id_month_sheet\"\r\n              label=\"Referência: \"\r\n              type=\"month\"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Baixar planilha\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSheetCSV;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\n\r\nimport { getReportPDFAll } from \"../../actions/actionFiles.js\";\r\n\r\nconst FormReportPDFAll = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(getReportPDFAll(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        month: moment().format(\"YYYY-MM\"),\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Baixar relatório geral da Auditoria\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"month\"\r\n              id=\"id_month_report_all\"\r\n              label=\"Referência: \"\r\n              type=\"month\"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Criar relatório\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormReportPDFAll;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\nimport { logoutAll } from \"../../actions/actionAuth\";\r\nimport FormChangePassword from \"./FormChangePassword\";\r\nimport FormUserData from \"./FormUserData\";\r\nimport FormReportPDF from \"./FormReportPDF\";\r\nimport FormSheetCSV from \"./FormSheetCSV\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport FormReportPDFAll from \"./FormReportPDFAll\";\r\n\r\nconst Perfil = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDUserProfile.read());\r\n  }, [dispatch, authUser]);\r\n\r\n  const handleLogoutAll = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria sair de todas as Instâncias?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Você terá que entrar novamente em todos os dispositivos.\";\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(logoutAll());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-body container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 offset-lg-1 col-lg-4\">\r\n          <h5>\r\n            {\"Bem vindo, \"}\r\n            {authUser\r\n              ? authUser.first_name\r\n                ? authUser.first_name\r\n                : authUser.username\r\n              : \"\"}\r\n            {\"!\"}\r\n          </h5>\r\n          <h6>\r\n            {\" (último login: \"}\r\n            {authUser ? authUser.last_login : \"\"}\r\n            {\")\"}\r\n          </h6>\r\n          <div>\r\n            <FormUserData authUser={authUser} />\r\n          </div>\r\n\r\n          <div className=\"mt-2\">\r\n            <FormChangePassword authUser={authUser} />\r\n          </div>\r\n          <div className=\"row m-1 p-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary font-weight-bold mt-2\"\r\n              onClick={handleLogoutAll}\r\n            >\r\n              Sair de todos os locais\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 offset-lg-1 col-lg-4 mt-2 mt-lg-0\">\r\n          <div className=\"row m-1 p-2 border\">\r\n            <FormReportPDFAll />\r\n          </div>\r\n          <div className=\"row m-1 p-2 border\">\r\n            <FormReportPDF />\r\n          </div>\r\n          <div className=\"row m-1 p-2 border\">\r\n            <FormSheetCSV />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getNoticeEventType } from \"../calendario/utils\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CompleteButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n  MapButton,\r\n} from \"../calendario/common\";\r\n\r\nconst NoticeEventSpan = ({ notice_event }) => {\r\n  let notice_event_type = getNoticeEventType(notice_event);\r\n  if (notice_event && notice_event_type) {\r\n    return (\r\n      <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n        {\"A. \" + notice_event_type.short_name + \": \"}\r\n        {notice_event.identification !== null && notice_event.identification}\r\n        {\" (\" + notice_event.deadline_date + \")\"}\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const NoticeEventButton = ({ notice, concluded, notice_event_type }) => {\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const completeTask = (notice_event) => {\r\n    notice_event.concluded = !notice_event.concluded;\r\n    dispatch(actionCRUDNotice.update(notice));\r\n  };\r\n\r\n  const filterNoticeEventbyConcluded = (notice_event) => {\r\n    let show_concluded;\r\n    let notice_event_type = getNoticeEventType(notice_event);\r\n    if (notice_event_type) {\r\n      show_concluded = notice_event_type.show_concluded;\r\n    } else {\r\n      show_concluded = true;\r\n    }\r\n    if (concluded === \"0\") {\r\n      if (show_concluded) {\r\n        return !notice_event.concluded;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if (concluded === \"1\") {\r\n      if (show_concluded) {\r\n        return notice_event.concluded;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterNoticeEventbyType = (notice_event) => {\r\n    if (notice_event_type === \"\") {\r\n      return false;\r\n    }\r\n    if (notice_event_type === \"0\") {\r\n      return true;\r\n    }\r\n    if (notice_event.notice_event_type.toString() === notice_event_type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return notice.notice_events\r\n    .filter(filterNoticeEventbyType)\r\n    .filter(filterNoticeEventbyConcluded)\r\n    .map((notice_event) => {\r\n      let notice_event_type = getNoticeEventType(notice_event);\r\n      return (\r\n        <div\r\n          key={notice_event.id}\r\n          style={{\r\n            backgroundColor: notice_event_type\r\n              ? notice_event_type.css_color\r\n              : \"blue\",\r\n          }}\r\n          className={\r\n            \"row no-gutters event user-select-none text-truncate\" +\r\n            (notice_event.concluded ? \" concluded\" : \"\")\r\n          }\r\n        >\r\n          <EventButton\r\n            notice_id={notice.id}\r\n            modalcall=\"notice\"\r\n            title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n            day={moment().format(\"YYYY-MM-DD\")}\r\n          >\r\n            <NoticeEventSpan notice_event={notice_event} />\r\n          </EventButton>\r\n          {notice_event_type && notice_event_type.show_concluded && (\r\n            <CompleteButton\r\n              concluded={notice_event.concluded}\r\n              onclick={isOwner ? () => completeTask(notice_event) : () => {}}\r\n            />\r\n          )}\r\n          <GeoItajaiButton\r\n            codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n          />\r\n          <MapButton\r\n            address={\r\n              notice.imovel\r\n                ? notice.imovel.logradouro +\r\n                  \",\" +\r\n                  notice.imovel.numero +\r\n                  \"-\" +\r\n                  notice.imovel.bairro +\r\n                  \"-itajaí\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n};\r\n\r\nconst NoticeEventList = ({ title, concluded, notice_event_type }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const notices = useSelector((state) =>\r\n    state.notice.notices.notices.filter((notice) => {\r\n      return notice.owner === currentUser.id;\r\n    })\r\n  );\r\n  return (\r\n    <div className=\"border p-2 m-1\">\r\n      <span>\r\n        <strong>{title ? title : \"\"}</strong>\r\n      </span>\r\n      {notices &&\r\n        notices.map((notice) => (\r\n          <NoticeEventButton\r\n            key={notice.id}\r\n            notice={notice}\r\n            concluded={concluded}\r\n            notice_event_type={notice_event_type}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeEventList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReportEvent from \"../calendario/ReportEvent\";\r\nimport moment from \"moment\";\r\n\r\nconst ReportEventList = ({ title, concluded, report_event_type }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const reports = useSelector((state) =>\r\n    state.report.reports.reports.filter((notice) => {\r\n      return notice.owner === currentUser.id;\r\n    })\r\n  );\r\n\r\n  const filterReportEventbyConcluded = (report) => {\r\n    if (concluded === \"0\") {\r\n      return !report.concluded;\r\n    } else if (concluded === \"1\") {\r\n      return report.concluded;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterReportEventbyType = (report) => {\r\n    if (report_event_type === \"\") {\r\n      return false;\r\n    }\r\n    if (report_event_type === \"0\") {\r\n      return true;\r\n    }\r\n    if (report.report_event_type.toString() === report_event_type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-2 m-1\">\r\n      <span>\r\n        <strong>{title ? title : \"\"}</strong>\r\n      </span>\r\n      {reports &&\r\n        reports\r\n          .filter(filterReportEventbyType)\r\n          .filter(filterReportEventbyConcluded)\r\n          .map((report) => (\r\n            <ReportEvent\r\n              key={report.id}\r\n              report={report}\r\n              day={moment(report.date)}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportEventList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SurveyEvent from \"../calendario/SurveyEvent\";\r\nimport moment from \"moment\";\r\n\r\nconst SurveyEventList = ({ title, concluded, survey_event_type }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const surveys = useSelector((state) =>\r\n    state.survey.surveys.surveys.filter((notice) => {\r\n      return notice.owner === currentUser.id;\r\n    })\r\n  );\r\n\r\n  const filterSurveyEventbyConcluded = (survey) => {\r\n    if (concluded === \"0\") {\r\n      return !survey.concluded;\r\n    } else if (concluded === \"1\") {\r\n      return survey.concluded;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterSurveyEventbyType = (survey) => {\r\n    if (survey_event_type === \"\") {\r\n      return false;\r\n    }\r\n    if (survey_event_type === \"0\") {\r\n      return true;\r\n    }\r\n    if (survey.survey_event_type.toString() === survey_event_type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-2 m-1\">\r\n      <span>\r\n        <strong>{title ? title : \"\"}</strong>\r\n      </span>\r\n      {surveys &&\r\n        surveys\r\n          .filter(filterSurveyEventbyType)\r\n          .filter(filterSurveyEventbyConcluded)\r\n          .map((survey) => (\r\n            <SurveyEvent\r\n              key={survey.id}\r\n              survey={survey}\r\n              day={moment(survey.date)}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyEventList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\nimport ReportEventList from \"../common/ReportEventList\";\r\n\r\nexport default function Aconcluir() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    dispatch(actionCRUDReportEventType.read());\r\n    const params = { concluded: \"0\" };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDReport.read(params));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutters justify-content-md-center\">\r\n        <ModalFormEvent />\r\n        <div className=\"col col-12 col-lg-9\">\r\n          <TaskBar />\r\n          <div className=\"row row-cols-1 row-cols-lg-3\">\r\n            <div className=\"col\">\r\n              <NoticeEventList\r\n                title=\"Autos a concluir:\"\r\n                concluded=\"0\"\r\n                notice_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SurveyEventList\r\n                title=\"Vistorias a concluir:\"\r\n                concluded=\"0\"\r\n                survey_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <ReportEventList\r\n                title=\"Relatórios a concluir:\"\r\n                concluded=\"0\"\r\n                report_event_type=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\nimport ReportEventList from \"../common/ReportEventList\";\r\n\r\nexport default function Incompativel() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    dispatch(actionCRUDReportEventType.read());\r\n    const params = { incompatible: true };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDReport.read(params));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutters justify-content-md-center\">\r\n        <ModalFormEvent />\r\n        <div className=\"col col-12 col-lg-9\">\r\n          <TaskBar />\r\n          <div className=\"row row-cols-1 row-cols-lg-3\">\r\n            <div className=\"col\">\r\n              <NoticeEventList\r\n                title=\"Autos sem imóvel:\"\r\n                concluded=\"\"\r\n                notice_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SurveyEventList\r\n                title=\"Vistorias sem imóvel:\"\r\n                concluded=\"\"\r\n                survey_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <ReportEventList\r\n                title=\"Relatórios sem imóvel:\"\r\n                concluded=\"\"\r\n                report_event_type=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, SelectFormGroup } from \"../common/Forms\";\r\nimport AutocompleteImovel from \"../common/AutocompleteImovel\";\r\nimport \"./index.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IconButton } from \"../calendario/common\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDReport } from \"../../actions/report/actionReport\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormBusca = ({ state, setstate }) => {\r\n  const dispatch = useDispatch();\r\n  const report_event_types = useSelector(\r\n    (state) => state.report.report_event_types.report_event_types\r\n  );\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  const onSubmit = (values) => {\r\n    if (values.notice_event_type !== \"\") {\r\n      dispatch(actionCRUDNotice.read(values));\r\n    }\r\n    if (values.survey_event_type !== \"\") {\r\n      dispatch(actionCRUDSurvey.read(values));\r\n    }\r\n    if (values.report_event_type !== \"\") {\r\n      dispatch(actionCRUDReport.read(values));\r\n    }\r\n    setstate(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={state}\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n            <div className=\"modal-body container\">\r\n              <div className=\"container\">\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"start_date\"\r\n                    label=\"Desde:\"\r\n                    type=\"date\"\r\n                    className=\"ml-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <IconButton\r\n                    icon={\"fa-times-circle-o\"}\r\n                    onclick={() => {\r\n                      form.mutators.setValue(\"start_date\", \"\");\r\n                    }}\r\n                    title=\"Limpar data\"\r\n                  />\r\n                  <InputFormGroup\r\n                    name=\"end_date\"\r\n                    label=\"Até:\"\r\n                    type=\"date\"\r\n                    className=\"ml-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <IconButton\r\n                    icon={\"fa-times-circle-o\"}\r\n                    onclick={() => {\r\n                      form.mutators.setValue(\"end_date\", \"\");\r\n                    }}\r\n                    title=\"Limpar data\"\r\n                  />\r\n                </div>\r\n                <AutocompleteImovel\r\n                  name=\"imovel\"\r\n                  name_string=\"imovel.name_string\"\r\n                  label=\"Imóvel:\"\r\n                  form={form}\r\n                />\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"identification\"\r\n                    label=\"Identificação/Nº:\"\r\n                    maxLength=\"255\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <InputFormGroup\r\n                    name=\"document\"\r\n                    label=\"CPF/CNPJ:\"\r\n                    maxLength=\"255\"\r\n                    parse={(value) => {\r\n                      if (!value) return value;\r\n                      const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                      if (value.length > 14) {\r\n                        return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                      } else {\r\n                        return formatString(\"999.999.999-99\", onlyNumbers);\r\n                      }\r\n                    }}\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <SelectFormGroup\r\n                    name=\"concluded\"\r\n                    label=\"Concluído:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Não concluído</option>\r\n                    <option value=\"1\">Concluído</option>\r\n                  </SelectFormGroup>\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"notice_event_type\"\r\n                    label=\"Tipo de Auto:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Todos</option>\r\n                    {notice_event_types.map((notice_event_type, index) => (\r\n                      <option\r\n                        key={notice_event_type.id}\r\n                        value={notice_event_type.id}\r\n                      >\r\n                        {notice_event_type.order} - {notice_event_type.name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                  <SelectFormGroup\r\n                    name=\"survey_event_type\"\r\n                    label=\"Tipo de Vistoria:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Todos</option>\r\n                    {survey_event_types.map((survey_event_type, index) => (\r\n                      <option\r\n                        key={survey_event_type.id}\r\n                        value={survey_event_type.id}\r\n                      >\r\n                        {survey_event_type.order} - {survey_event_type.name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                  <SelectFormGroup\r\n                    name=\"report_event_type\"\r\n                    label=\"Tipo de Relatório:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Todos</option>\r\n                    {report_event_types.map((report_event_type, index) => (\r\n                      <option\r\n                        key={report_event_type.id}\r\n                        value={report_event_type.id}\r\n                      >\r\n                        {report_event_type.order} - {report_event_type.name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary mr-2\"\r\n                  onClick={() => {\r\n                    form.reset();\r\n                  }}\r\n                  title=\"Recarregar\"\r\n                >\r\n                  <i className=\"fa fa-refresh\" />\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormBusca;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport FormBusca from \"./FormBusca\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\nimport ReportEventList from \"../common/ReportEventList\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Busca() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const [state, setstate] = useState({\r\n    start_date: moment().startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    end_date: moment().endOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    imovel: \"\",\r\n    imovel_id: \"\",\r\n    identification: \"\",\r\n    concluded: \"\",\r\n    notice_event_type: \"0\",\r\n    survey_event_type: \"0\",\r\n    report_event_type: \"0\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    dispatch(actionCRUDReportEventType.read());\r\n  }, [dispatch, location]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ModalFormEvent />\r\n      <TaskBar />\r\n      <FormBusca state={state} setstate={setstate} />\r\n      <h5 className=\"p-2\">Resultado:</h5>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutters row-cols-1 row-cols-lg-3 justify-content-md-center\">\r\n          <div className=\"col col-12 col-lg-4\">\r\n            <NoticeEventList\r\n              title=\"Autos:\"\r\n              concluded={state.concluded}\r\n              notice_event_type={state.notice_event_type}\r\n            />\r\n          </div>\r\n          <div className=\"col col-12 col-lg-4\">\r\n            <SurveyEventList\r\n              title=\"Vistorias:\"\r\n              concluded={state.concluded}\r\n              survey_event_type={state.survey_event_type}\r\n            />\r\n          </div>\r\n          <div className=\"col col-12 col-lg-4\">\r\n            <ReportEventList\r\n              title=\"Relatórios:\"\r\n              concluded={state.concluded}\r\n              report_event_type={state.report_event_type}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.userprofiles.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUserProfile.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (user) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Usuário?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Usuário: \" + user.username;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDUserProfile.delete(user.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de usuários{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalUser\"\r\n          data-modalcall=\"none\"\r\n          data-user_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Usuário</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Sobrenome</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Matrícula</th>\r\n          <th scope=\"col\">Administrador</th>\r\n          <th scope=\"col\">Último Login</th>\r\n          <th scope=\"col\">Ativo</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user, index) => (\r\n          <tr key={user.id}>\r\n            <td>{user.id}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.first_name}</td>\r\n            <td>{user.last_name}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.profile.matricula}</td>\r\n            <td>{user.is_staff ? \"Sim\" : \"Não\"}</td>\r\n            <td>{user.last_login}</td>\r\n            <td>{user.is_active ? \"Sim\" : \"Não\"}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => onDelete(user)}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Deletar usuário\"\r\n              >\r\n                <i className={\"fa fa-trash\"}></i>\r\n              </button>\r\n              <button\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#ModalUser\"\r\n                data-modalcall=\"user\"\r\n                data-user_id={user.id}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Editar usuário\"\r\n              >\r\n                <i className={\"fa fa-pencil-square-o\"}></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  required,\r\n} from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDUserProfile } from \"../../../actions/user/actionUserProfile\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nconst FormUser = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Usuário?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Usuário: \" + user.username;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDUserProfile.delete(user.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalUser\")).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.password === undefined || values.password === \"\") {\r\n        delete values[\"password\"];\r\n      }\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDUserProfile.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDUserProfile.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalUser\")).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={user}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"username\"\r\n                  label=\"Usuário:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                  format={(value) => (value ? value.toLowerCase() : \"\")}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"first_name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"last_name\"\r\n                  label=\"Sobrenome:\"\r\n                  className=\"m-1\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup name=\"email\" label=\"Email:\" className=\"m-1\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"profile.matricula\"\r\n                  label=\"Matrícula:\"\r\n                  className=\"m-1\"\r\n                />\r\n              </div>\r\n              <CheckboxFormGroup name=\"is_staff\" label=\"Administrador\" />\r\n              <CheckboxFormGroup name=\"is_active\" label=\"Ativo\" />\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"password\"\r\n                  label=\"Senha:\"\r\n                  className=\"m-1\"\r\n                  validate={(value) =>\r\n                    value\r\n                      ? value.length >= 4\r\n                        ? undefined\r\n                        : \"A senha deve ter ao menos 6 caracteres\"\r\n                      : undefined\r\n                  }\r\n                />\r\n              </div>\r\n              <span>\r\n                Obs.: Senha em branco não irá alterar a senha do usuário.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              user !== undefined ? (user.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormUser from \"./FormUser\";\r\n\r\nexport default function ModalFormUser() {\r\n  const [user, setUser] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const users = store.getState().user.userprofiles.users;\r\n    let user;\r\n    if (e.relatedTarget.dataset.user_id !== \"0\") {\r\n      user = users.find(\r\n        (user) => user.id.toString() === e.relatedTarget.dataset.user_id\r\n      );\r\n    }\r\n    if (user !== undefined) {\r\n      setUser(user);\r\n    } else {\r\n      setUser({\r\n        id: 0,\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        is_staff: false,\r\n        is_active: true,\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalUser\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {user !== undefined\r\n                ? user.id !== 0\r\n                  ? \"Editar \" + user.username\r\n                  : \"Novo usuário\"\r\n                : \"Novo usuário\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormUser user={user} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDReportEventType } from \"../../actions/report/actionReportEventType\";\r\n\r\nconst ReportEventType = () => {\r\n  const dispatch = useDispatch();\r\n  const report_event_types = useSelector(\r\n    (state) => state.report.report_event_types.report_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDReportEventType.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (report_event_type) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Relatório?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Vistoria: \" + report_event_type.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDReportEventType.delete(report_event_type.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Tipos de Relatórios{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalReportType\"\r\n          data-modalcall=\"none\"\r\n          data-report_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Ordem</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Abreviação</th>\r\n          <th scope=\"col\">Cor</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {report_event_types\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((report_event_type, index) => (\r\n            <tr key={report_event_type.id}>\r\n              <td>{report_event_type.id}</td>\r\n              <td>{report_event_type.order}</td>\r\n              <td>{report_event_type.name}</td>\r\n              <td>{report_event_type.short_name}</td>\r\n              <td>\r\n                {report_event_type.css_color}\r\n                <input\r\n                  type=\"color\"\r\n                  disabled\r\n                  className=\"mx-1\"\r\n                  value={\r\n                    report_event_type.css_color\r\n                      ? report_event_type.css_color\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => onDelete(report_event_type)}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Deletar tipo\"\r\n                >\r\n                  <i className={\"fa fa-trash\"}></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ModalReportType\"\r\n                  data-modalcall=\"reporttype\"\r\n                  data-report_type_id={report_event_type.id}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Editar tipo\"\r\n                >\r\n                  <i className={\"fa fa-pencil-square-o\"}></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ReportEventType;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDReportEventType } from \"../../../actions/report/actionReportEventType\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormReportType = ({ reportType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Relatório?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Relatório: \" + reportType.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDReportEventType.delete(reportType.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalReportType\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDReportEventType.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDReportEventType.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalReportType\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={reportType}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"short_name\"\r\n                  label=\"Abreviação:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              reportType !== undefined\r\n                ? reportType.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormReportType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormReportType from \"./FormReportType\";\r\n\r\nexport default function ModalFormReportType() {\r\n  const [reportType, setReportType] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const reportTypes = store.getState().report.report_event_types\r\n      .report_event_types;\r\n\r\n    let reportType;\r\n    if (e.relatedTarget.dataset.report_type_id !== \"0\") {\r\n      reportType = reportTypes.find(\r\n        (reportType) =>\r\n          reportType.id.toString() === e.relatedTarget.dataset.report_type_id\r\n      );\r\n    }\r\n\r\n    let MaxOrder = Math.max.apply(\r\n      Math,\r\n      store\r\n        .getState()\r\n        .report.report_event_types.report_event_types.filter((report) => {\r\n          return report.order !== 99;\r\n        })\r\n        .map(function (report) {\r\n          return report.order;\r\n        })\r\n    );\r\n    if (MaxOrder === -Infinity) {\r\n      MaxOrder = 0;\r\n    }\r\n    if (reportType !== undefined) {\r\n      setReportType(reportType);\r\n    } else {\r\n      setReportType({\r\n        id: 0,\r\n        order: MaxOrder + 1,\r\n        name: \"\",\r\n        short_name: \"\",\r\n        css_color: \"#000000\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalReportType\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {reportType !== undefined\r\n                ? reportType.id !== 0\r\n                  ? \"Editar \" + reportType.name\r\n                  : \"Novo tipo de Relatório\"\r\n                : \"Novo tipo de Relatório\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormReportType reportType={reportType} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\n\r\nconst SurveyEventType = () => {\r\n  const dispatch = useDispatch();\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (survey_event_type) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Vistoria?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Vistoria: \" + survey_event_type.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurveyEventType.delete(survey_event_type.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Tipos de Vistorias{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalSurveyType\"\r\n          data-modalcall=\"none\"\r\n          data-survey_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Ordem</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Abreviação</th>\r\n          <th scope=\"col\">Cor</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {survey_event_types\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((survey_event_type, index) => (\r\n            <tr key={survey_event_type.id}>\r\n              <td>{survey_event_type.id}</td>\r\n              <td>{survey_event_type.order}</td>\r\n              <td>{survey_event_type.name}</td>\r\n              <td>{survey_event_type.short_name}</td>\r\n              <td>\r\n                {survey_event_type.css_color}\r\n                <input\r\n                  type=\"color\"\r\n                  disabled\r\n                  className=\"mx-1\"\r\n                  value={\r\n                    survey_event_type.css_color\r\n                      ? survey_event_type.css_color\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => onDelete(survey_event_type)}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Deletar tipo\"\r\n                >\r\n                  <i className={\"fa fa-trash\"}></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ModalSurveyType\"\r\n                  data-modalcall=\"surveytype\"\r\n                  data-survey_type_id={survey_event_type.id}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Editar tipo\"\r\n                >\r\n                  <i className={\"fa fa-pencil-square-o\"}></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SurveyEventType;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDSurveyEventType } from \"../../../actions/survey/actionSurveyEventType\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormSurveyType = ({ surveyType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Vistoria?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Vistoria: \" + surveyType.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurveyEventType.delete(surveyType.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalSurveyType\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDSurveyEventType.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDSurveyEventType.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalSurveyType\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={surveyType}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"short_name\"\r\n                  label=\"Abreviação:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              surveyType !== undefined\r\n                ? surveyType.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSurveyType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormSurveyType from \"./FormSurveyType\";\r\n\r\nexport default function ModalFormSurveyType() {\r\n  const [surveyType, setSurveyType] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const surveyTypes = store.getState().survey.survey_event_types\r\n      .survey_event_types;\r\n\r\n    let surveyType;\r\n    if (e.relatedTarget.dataset.survey_type_id !== \"0\") {\r\n      surveyType = surveyTypes.find(\r\n        (surveyType) =>\r\n          surveyType.id.toString() === e.relatedTarget.dataset.survey_type_id\r\n      );\r\n    }\r\n\r\n    let MaxOrder = Math.max.apply(\r\n      Math,\r\n      store\r\n        .getState()\r\n        .survey.survey_event_types.survey_event_types.filter((survey) => {\r\n          return survey.order !== 99;\r\n        })\r\n        .map(function (survey) {\r\n          return survey.order;\r\n        })\r\n    );\r\n    if (MaxOrder === -Infinity) {\r\n      MaxOrder = 0;\r\n    }\r\n    if (surveyType !== undefined) {\r\n      setSurveyType(surveyType);\r\n    } else {\r\n      setSurveyType({\r\n        id: 0,\r\n        order: MaxOrder + 1,\r\n        name: \"\",\r\n        short_name: \"\",\r\n        css_color: \"#000000\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalSurveyType\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {surveyType !== undefined\r\n                ? surveyType.id !== 0\r\n                  ? \"Editar \" + surveyType.name\r\n                  : \"Novo tipo de Vistoria\"\r\n                : \"Novo tipo de Vistoria\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormSurveyType surveyType={surveyType} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\n\r\nconst NoticeEventType = () => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (notice_event_type) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Auto: \" + notice_event_type.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventType.delete(notice_event_type.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Tipos de Autos e relacionados{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalNoticeType\"\r\n          data-modalcall=\"none\"\r\n          data-notice_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            #\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Ordem\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Nome\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Abreviação\r\n          </th>\r\n          <th scope=\"col\" colSpan=\"3\">\r\n            Padrão\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Cor\r\n          </th>\r\n          <th scope=\"col\" colSpan=\"6\">\r\n            Mostrar\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\"></th>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"col\">Prazo (dias)</th>\r\n          <th scope=\"col\">Dias úteis</th>\r\n          <th scope=\"col\">Concluido</th>\r\n          <th scope=\"col\">Concluido</th>\r\n          <th scope=\"col\">RF</th>\r\n          <th scope=\"col\">Prazo</th>\r\n          <th scope=\"col\">Multa</th>\r\n          <th scope=\"col\">Recurso</th>\r\n          <th scope=\"col\">Na data de início</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {notice_event_types\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((notice_event_type, index) => (\r\n            <tr key={notice_event_type.id}>\r\n              <td>{notice_event_type.id}</td>\r\n              <td>{notice_event_type.order}</td>\r\n              <td>{notice_event_type.name}</td>\r\n              <td>{notice_event_type.short_name}</td>\r\n              <td>{notice_event_type.default_deadline}</td>\r\n              <td>\r\n                {notice_event_type.default_deadline_working_days\r\n                  ? \"Sim\"\r\n                  : \"Não\"}\r\n              </td>\r\n              <td>{notice_event_type.default_concluded ? \"Sim\" : \"Não\"}</td>\r\n              <td>\r\n                {notice_event_type.css_color}\r\n                <input\r\n                  type=\"color\"\r\n                  disabled\r\n                  className=\"mx-1\"\r\n                  value={\r\n                    notice_event_type.css_color\r\n                      ? notice_event_type.css_color\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{notice_event_type.show_concluded ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_report_number ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_deadline ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_fine ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_appeal ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_start ? \"Sim\" : \"Não\"}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => onDelete(notice_event_type)}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Deletar tipo\"\r\n                >\r\n                  <i className={\"fa fa-trash\"}></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ModalNoticeType\"\r\n                  data-modalcall=\"noticetype\"\r\n                  data-notice_type_id={notice_event_type.id}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Editar tipo\"\r\n                >\r\n                  <i className={\"fa fa-pencil-square-o\"}></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default NoticeEventType;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  required,\r\n} from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNoticeEventType } from \"../../../actions/notice/actionNoticeEventType\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormNoticeType = ({ noticeType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Auto: \" + noticeType.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventType.delete(noticeType.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeType\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDNoticeEventType.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDNoticeEventType.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeType\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={noticeType}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"short_name\"\r\n                  label=\"Abreviação:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"default_deadline\"\r\n                  format={(value) => (value ? parseInt(value) : \"0\")}\r\n                  label=\"Prazo padrão (dias):\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"999\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <CheckboxFormGroup\r\n                  name=\"default_deadline_working_days\"\r\n                  label=\"apenas dias úteis\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"default_concluded\"\r\n                  label=\"Concluido por padrão\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_concluded\"\r\n                  label=\"Tem conclusão?\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_report_number\"\r\n                  label=\"Tem Relatório Fiscal?\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup name=\"show_deadline\" label=\"Tem prazo?\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup name=\"show_fine\" label=\"Tem Multa?\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup name=\"show_appeal\" label=\"Tem Recurso?\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_start\"\r\n                  label=\"Mostrar evento na data de início?\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              noticeType !== undefined\r\n                ? noticeType.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNoticeType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormNoticeType from \"./FormNoticeType\";\r\n\r\nexport default function ModalFormNoticeType() {\r\n  const [noticeType, setNoticeType] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const noticeTypes = store.getState().notice.notice_event_types\r\n      .notice_event_types;\r\n\r\n    let noticeType;\r\n    if (e.relatedTarget.dataset.notice_type_id !== \"0\") {\r\n      noticeType = noticeTypes.find(\r\n        (noticeType) =>\r\n          noticeType.id.toString() === e.relatedTarget.dataset.notice_type_id\r\n      );\r\n    }\r\n    let MaxOrder = Math.max.apply(\r\n      Math,\r\n      store\r\n        .getState()\r\n        .notice.notice_event_types.notice_event_types.map(function (o) {\r\n          return o.order;\r\n        })\r\n    );\r\n    if (MaxOrder === -Infinity) {\r\n      MaxOrder = 0;\r\n    }\r\n    if (noticeType !== undefined) {\r\n      setNoticeType(noticeType);\r\n    } else {\r\n      setNoticeType({\r\n        id: 0,\r\n        order: MaxOrder + 1,\r\n        name: \"\",\r\n        short_name: \"\",\r\n        default_deadline: \"0\",\r\n        default_deadline_working_days: true,\r\n        default_concluded: false,\r\n        css_color: \"#000000\",\r\n        show_concluded: true,\r\n        show_report_number: true,\r\n        show_deadline: true,\r\n        show_fine: true,\r\n        show_start: true,\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeType\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {noticeType !== undefined\r\n                ? noticeType.id !== 0\r\n                  ? \"Editar \" + noticeType.name\r\n                  : \"Novo tipo de Auto\"\r\n                : \"Novo tipo de Auto\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormNoticeType noticeType={noticeType} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeEventTypeFile } from \"../../actions/notice/actionNoticeEventTypeFile\";\r\n\r\nconst NoticeEventTypeFile = () => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_type_files = useSelector(\r\n    (state) => state.notice.notice_event_type_files.notice_event_type_files\r\n  );\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDNoticeEventTypeFile.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (notice_event_type_file) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar esta Notificação de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Notificação de Auto: \" + notice_event_type_file.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventTypeFile.delete(notice_event_type_file.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Notificações de Autos{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalNoticeTypeFile\"\r\n          data-modalcall=\"none\"\r\n          data-notice_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Ordem</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Tipo de Auto</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {notice_event_type_files\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((notice_event_type_file, index) => {\r\n            let notice_event_type = notice_event_types.find(\r\n              (notice_event_type) =>\r\n                notice_event_type.id ===\r\n                notice_event_type_file.notice_event_type\r\n            );\r\n\r\n            let notice_event_type_file_link = notice_event_type_file.file_doc;\r\n            if (!notice_event_type_file_link.startsWith(\"https\")) {\r\n              notice_event_type_file_link = notice_event_type_file_link.replace(\r\n                \"http\",\r\n                \"https\"\r\n              );\r\n            }\r\n            return (\r\n              <tr key={notice_event_type_file.id}>\r\n                <td>{notice_event_type_file.id}</td>\r\n                <td>{notice_event_type_file.order}</td>\r\n                <td>\r\n                  <a\r\n                    href={notice_event_type_file_link}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer noopener\"\r\n                  >\r\n                    {notice_event_type_file.name}\r\n                  </a>\r\n                </td>\r\n                <td>{notice_event_type && notice_event_type.name}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => onDelete(notice_event_type_file)}\r\n                    className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                    type=\"button\"\r\n                    title=\"Deletar Notificação\"\r\n                  >\r\n                    <i className={\"fa fa-trash\"}></i>\r\n                  </button>\r\n                  <button\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#ModalNoticeTypeFile\"\r\n                    data-modalcall=\"noticetypefile\"\r\n                    data-notice_type_file_id={notice_event_type_file.id}\r\n                    className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                    type=\"button\"\r\n                    title=\"Editar Notificação\"\r\n                  >\r\n                    <i className={\"fa fa-pencil-square-o\"}></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default NoticeEventTypeFile;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  SelectFormGroup,\r\n  FileField,\r\n  required,\r\n} from \"../../common/Forms\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCRUDNoticeEventTypeFile } from \"../../../actions/notice/actionNoticeEventTypeFile\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nconst FormNoticeTypeFile = ({ noticeTypeFile }) => {\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar esta Notificação de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Notificação de Auto: \" + noticeTypeFile.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventTypeFile.delete(noticeTypeFile.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeTypeFile\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDNoticeEventTypeFile.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (!values.file_doc || values.file_doc.toString().startsWith(\"http\")) {\r\n          delete values.file_doc;\r\n        }\r\n        dispatch(actionCRUDNoticeEventTypeFile.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeTypeFile\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        ...noticeTypeFile,\r\n        file_doc: \"\",\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <FileField\r\n                  name=\"file_doc\"\r\n                  id=\"file_doc\"\r\n                  label=\"Escolha um arquivo\"\r\n                />\r\n\r\n                {noticeTypeFile && noticeTypeFile.file_doc && (\r\n                  <a\r\n                    href={noticeTypeFile.file_doc}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer noopener\"\r\n                  >\r\n                    Baixar arquivo\r\n                  </a>\r\n                )}\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <SelectFormGroup\r\n                  name=\"notice_event_type\"\r\n                  label=\"Tipo:\"\r\n                  className=\"m-1\"\r\n                  classNameDiv=\"mx-1\"\r\n                  validate={required}\r\n                >\r\n                  <option value=\"\">---------</option>\r\n                  {notice_event_types.map((notice_event_type, index) => (\r\n                    <option\r\n                      key={notice_event_type.id}\r\n                      value={notice_event_type.id}\r\n                    >\r\n                      {notice_event_type.order} - {notice_event_type.name}\r\n                    </option>\r\n                  ))}\r\n                </SelectFormGroup>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              noticeTypeFile !== undefined\r\n                ? noticeTypeFile.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNoticeTypeFile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormNoticeTypeFile from \"./FormNoticeTypeFile\";\r\n\r\nexport default function ModalFormNoticeTypeFile() {\r\n  const [noticeTypeFile, setNoticeTypeFile] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const noticeTypeFiles = store.getState().notice.notice_event_type_files\r\n      .notice_event_type_files;\r\n\r\n    let noticeTypeFile;\r\n    if (e.relatedTarget.dataset.notice_type_id !== \"0\") {\r\n      noticeTypeFile = noticeTypeFiles.find(\r\n        (noticeTypeFile) =>\r\n          noticeTypeFile.id.toString() ===\r\n          e.relatedTarget.dataset.notice_type_file_id\r\n      );\r\n    }\r\n    let MaxOrder = Math.max.apply(\r\n      Math,\r\n      store\r\n        .getState()\r\n        .notice.notice_event_type_files.notice_event_type_files.map(function (\r\n          o\r\n        ) {\r\n          return o.order;\r\n        })\r\n    );\r\n    if (MaxOrder === -Infinity) {\r\n      MaxOrder = 0;\r\n    }\r\n    if (noticeTypeFile !== undefined) {\r\n      setNoticeTypeFile(noticeTypeFile);\r\n    } else {\r\n      setNoticeTypeFile({\r\n        id: 0,\r\n        order: MaxOrder + 1,\r\n        name: \"\",\r\n        file_doc: null,\r\n        notice_event_type: \"1\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeTypeFile\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {noticeTypeFile !== undefined\r\n                ? noticeTypeFile.id !== 0\r\n                  ? \"Editar \" + noticeTypeFile.name\r\n                  : \"Nova Notificação de Auto\"\r\n                : \"Nova Notificação de Auto\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormNoticeTypeFile noticeTypeFile={noticeTypeFile} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\n\r\nconst NoticeColor = () => {\r\n  const dispatch = useDispatch();\r\n  const notice_colors = useSelector(\r\n    (state) => state.notice.notice_colors.notice_colors\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDNoticeColor.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (notice_color) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta cor de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Combinação: \" + notice_color.css_name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeColor.delete(notice_color.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Cores para data de início dos Autos e relacionados{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalNoticeColor\"\r\n          data-modalcall=\"none\"\r\n          data-notice_color_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Combinação</th>\r\n          <th scope=\"col\">Cor</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {notice_colors.map((notice_color, index) => (\r\n          <tr key={notice_color.id}>\r\n            <td>{notice_color.id}</td>\r\n            <td>{notice_color.css_name}</td>\r\n            <td>\r\n              {notice_color.css_color}\r\n              <input\r\n                type=\"color\"\r\n                disabled\r\n                className=\"mx-1\"\r\n                value={notice_color.css_color}\r\n              />\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onDelete(notice_color)}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Deletar tipo\"\r\n              >\r\n                <i className={\"fa fa-trash\"}></i>\r\n              </button>\r\n              <button\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#ModalNoticeColor\"\r\n                data-modalcall=\"noticecolor\"\r\n                data-notice_color_id={notice_color.id}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Editar tipo\"\r\n              >\r\n                <i className={\"fa fa-pencil-square-o\"}></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default NoticeColor;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required, SelectFormGroup } from \"../../common/Forms\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeColor } from \"../../../actions/notice/actionNoticeColor\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormNoticeColor = ({ noticeColor }) => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta cor de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Combinação: \" + noticeColor.css_name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeColor.delete(noticeColor.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeColor\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDNoticeColor.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDNoticeColor.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeColor\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={noticeColor}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <SelectFormGroup\r\n                name=\"notice_event_types\"\r\n                label=\"Combinação de Autos:\"\r\n                validate={required}\r\n                className=\"m-1 custom-select\"\r\n                multiple\r\n                classNameDiv=\"mx-1\"\r\n                size={notice_event_types.length}\r\n              >\r\n                {notice_event_types.map((notice_event_type, index) => (\r\n                  <option\r\n                    key={notice_event_type.id}\r\n                    value={notice_event_type.id}\r\n                  >\r\n                    {notice_event_type.name}\r\n                  </option>\r\n                ))}\r\n              </SelectFormGroup>\r\n              <span>Obs.: Precione CTRL para multiplas seleções.</span>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              noticeColor !== undefined\r\n                ? noticeColor.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNoticeColor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormNoticeColor from \"./FormNoticeColor\";\r\n\r\nexport default function ModalFormNoticeColor() {\r\n  const [noticeColor, setNoticeColor] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const noticeColors = store.getState().notice.notice_colors.notice_colors;\r\n\r\n    let noticeColor;\r\n    if (e.relatedTarget.dataset.notice_color_id !== \"0\") {\r\n      noticeColor = noticeColors.find(\r\n        (noticeColor) =>\r\n          noticeColor.id.toString() === e.relatedTarget.dataset.notice_color_id\r\n      );\r\n    }\r\n    if (noticeColor !== undefined) {\r\n      setNoticeColor(noticeColor);\r\n    } else {\r\n      setNoticeColor({\r\n        id: 0,\r\n        css_color: \"#000000\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeColor\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-bs-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {noticeColor !== undefined\r\n                ? noticeColor.id !== 0\r\n                  ? \"Editar \" + noticeColor.name\r\n                  : \"Nova combinação para Cor\"\r\n                : \"Nova combinação para Cor\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormNoticeColor noticeColor={noticeColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { FileField } from \"../common/Forms\";\r\nimport {\r\n  downloadFileVARequestDocx,\r\n  uploadFileVARequestDocx,\r\n  downloadFileRFRequestDocx,\r\n  uploadFileRFRequestDocx,\r\n} from \"../../actions/actionFiles.js\";\r\n\r\nconst FormVAPadrao = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(uploadFileVARequestDocx(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form, submitting, pristine }) => (\r\n        <form\r\n          onSubmit={async (event) => {\r\n            await handleSubmit(event);\r\n            form.reset();\r\n          }}\r\n          className=\"needs-validation\"\r\n          noValidate\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <span>\r\n                Pedido de <strong>VA</strong> (documento padrão):\r\n              </span>\r\n            </div>\r\n            <div className=\"row mb-1\">\r\n              <button\r\n                className=\"btn btn-secondary btn-sm\"\r\n                type=\"button\"\r\n                onClick={() => dispatch(downloadFileVARequestDocx())}\r\n              >\r\n                Baixar arquivo atual\r\n              </button>\r\n            </div>\r\n            <div className=\"row mb-1\">\r\n              <FileField\r\n                name=\"va_padrao\"\r\n                id=\"va_padrao\"\r\n                label=\"Escolha um arquivo\"\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                type=\"submit\"\r\n                disabled={submitting || pristine}\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst FormRFPadrao = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(uploadFileRFRequestDocx(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form, submitting, pristine }) => (\r\n        <form\r\n          onSubmit={async (event) => {\r\n            await handleSubmit(event);\r\n            form.reset();\r\n          }}\r\n          className=\"needs-validation\"\r\n          noValidate\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <span>\r\n                Pedido de <strong>RF</strong> (documento padrão):\r\n              </span>\r\n            </div>\r\n            <div className=\"row mb-1\">\r\n              <button\r\n                className=\"btn btn-secondary btn-sm\"\r\n                type=\"button\"\r\n                onClick={() => dispatch(downloadFileRFRequestDocx())}\r\n              >\r\n                Baixar arquivo atual\r\n              </button>\r\n            </div>\r\n            <div className=\"row mb-1\">\r\n              <FileField\r\n                name=\"rf_padrao\"\r\n                id=\"rf_padrao\"\r\n                label=\"Escolha um arquivo\"\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                type=\"submit\"\r\n                disabled={submitting || pristine}\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default function FormDocument() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutters row-cols-1 row-cols-lg-3 justify-content-md-center\">\r\n        <div className=\"col col-12 col-lg-5 mx-2\">\r\n          <FormRFPadrao />\r\n        </div>\r\n        <div className=\"col col-12 col-lg-5 mx-2\">\r\n          <FormVAPadrao />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  updateImovel,\r\n  updateImovelLog,\r\n} from \"../../actions/imovel/actionImovel\";\r\n\r\nconst FormUpdateImovel = () => {\r\n  const dispatch = useDispatch();\r\n  const updatelog = useSelector((state) => state.imovel.updatelog);\r\n  const onSubmit = (values) => {\r\n    dispatch(updateImovel(values));\r\n    setTimeout(() => {\r\n      dispatch(updateImovelLog());\r\n    }, 300);\r\n  };\r\n  const [duration, setDuration] = useState(moment.duration());\r\n\r\n  useEffect(() => {\r\n    let diffTime = moment(updatelog.datetime).diff(updatelog.datetime_started);\r\n    setDuration(moment.duration(diffTime));\r\n  }, [updatelog]);\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        check: \"\",\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Atualizar lista de imóveis\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"check\"\r\n              label=\"Data: \"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <span style={{ color: \"red\" }}>\r\n            Obs.: O processo leva vários minutos para completar, esta ferramenta\r\n            não deve ser utilizado com frequencia.\r\n            <br />\r\n            Escreva a data de hoje no formato \"{moment().format(\"YYYY-MM-DD\")}\".\r\n          </span>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Atualizar\r\n            </button>\r\n          </div>\r\n\r\n          {updatelog && (\r\n            <ul className=\"list-group p-1 m-2 border\">\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Último Log: {updatelog.datetime}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                {updatelog.status}\r\n                {\": \"}\r\n                {updatelog.response}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Status da leitura do arquivo:\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Total: {updatelog.total} / Inalterados: {updatelog.inalterados}{\" \"}\r\n                / Alterados: {updatelog.alterados} / Novos: {updatelog.novos}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                <div className=\"progress\">\r\n                  <div\r\n                    className={\"progress-bar w-\" + updatelog.progresso * 100}\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={updatelog.progresso * 100}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                  ></div>\r\n                </div>\r\n                Duração:{\" \"}\r\n                {duration.hours() +\r\n                  \" horas, \" +\r\n                  duration.minutes() +\r\n                  \" minutos e \" +\r\n                  duration.seconds() +\r\n                  \" segundos\"}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUpdateImovel;\r\n","import React, { useEffect } from \"react\";\r\nimport Users from \"./Users\";\r\nimport ModalFormUser from \"./ModalFormUser\";\r\nimport ReportEventType from \"./ReportEventType\";\r\nimport ModalFormReportType from \"./ModalFormReportType\";\r\nimport SurveyEventType from \"./SurveyEventType\";\r\nimport ModalFormSurveyType from \"./ModalFormSurveyType\";\r\nimport NoticeEventType from \"./NoticeEventType\";\r\nimport ModalFormNoticeType from \"./ModalFormNoticeType\";\r\nimport NoticeEventTypeFile from \"./NoticeEventTypeFile\";\r\nimport ModalFormNoticeTypeFile from \"./ModalFormNoticeTypeFile\";\r\nimport NoticeColor from \"./NoticeColor\";\r\nimport ModalFormNoticeColor from \"./ModalFormNoticeColor\";\r\nimport FormDocument from \"./FormDocument\";\r\nimport FormUpdateImovel from \"./FormUpdateImovel\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateImovelLog } from \"../../actions/imovel/actionImovel\";\r\nimport \"./index.css\";\r\n\r\nconst AccordionItem = ({ name, title, accordionId, children }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card-header collapsed\"\r\n        id={\"header\" + name}\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target={\"#collapse\" + name}\r\n        aria-expanded=\"true\"\r\n        aria-controls={\"collapse\" + name}\r\n      >\r\n        <h5 className=\"mb-0\">{title}</h5>\r\n      </div>\r\n\r\n      <div\r\n        id={\"collapse\" + name}\r\n        className=\"collapse\"\r\n        aria-labelledby={name}\r\n        data-bs-parent={\"#header\" + name}\r\n      >\r\n        <div className=\"card-body\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function Admin() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateImovelLog());\r\n    let intervalId = setInterval(() => {\r\n      dispatch(updateImovelLog());\r\n    }, 30000);\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ModalFormUser />\r\n      <ModalFormReportType />\r\n      <ModalFormSurveyType />\r\n      <ModalFormNoticeType />\r\n      <ModalFormNoticeColor />\r\n      <ModalFormNoticeTypeFile />\r\n      <div className=\"mx-5 mt-2\">\r\n        <a\r\n          href=\"https://materializecss.com/color.html#palette\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          Paleta de cores para referência\r\n        </a>\r\n        <div className=\"accordion mt-2\" id=\"accordionAdmin\">\r\n          <AccordionItem\r\n            name=\"user\"\r\n            title=\"Lista de usuários\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <Users />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"report\"\r\n            title=\"Lista de Tipos de Relatórios\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <ReportEventType />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"survey\"\r\n            title=\"Lista de Tipos de Vistorias\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <SurveyEventType />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"notice\"\r\n            title=\"Lista de Tipos de Autos e relacionados\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <NoticeEventType />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"noticecolor\"\r\n            title=\"Lista de Cores para data de início dos Autos e relacionados\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <NoticeColor />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"noticefile\"\r\n            title=\"Lista de Notificações dos Autos\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <NoticeEventTypeFile />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"documentos_va_rf\"\r\n            title=\"Upload de documentos padrões (VA e RF)\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <FormDocument />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            name=\"update_imoveis\"\r\n            title=\"Atualizar imóveis\"\r\n            accordionId=\"accordionAdmin\"\r\n          >\r\n            <FormUpdateImovel />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: (event) => {\r\n        setValue(event.target.value);\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout } from \"../../actions/actionAuth\";\r\nimport { useInput } from \"../../hooks/input-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [isLoging, setIsLoging] = useState(false);\r\n  const {\r\n    value: username,\r\n    bind: bindUsername,\r\n    reset: resetUsername,\r\n  } = useInput(\"\");\r\n\r\n  const {\r\n    value: password,\r\n    bind: bindPassword,\r\n    reset: resetPassword,\r\n  } = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated && !isLoging) {\r\n      dispatch(logout());\r\n    } else if (auth.isAuthenticated && isLoging) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, auth, isLoging, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(username, password));\r\n    resetUsername();\r\n    resetPassword();\r\n    setIsLoging(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100 v-100 d-grid justify-content-center pt-2 pt-lg-5\">\r\n      <form className=\"form-signin\" onSubmit={handleSubmit}>\r\n        <div className=\"mb-lg-3 row\">\r\n          <h3 className=\"mb-lg-3 font-weight-normal\">Acesso restrito</h3>\r\n        </div>\r\n        <div className=\"mb-lg-3 row\">\r\n          <label htmlFor=\"staticEmail\" className=\"col-lg-3 col-form-label\">\r\n            Usuário:\r\n          </label>\r\n          <div className=\"col-lg-9\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"inputUsername\"\r\n              {...bindUsername}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2 mb-lg-3 row\">\r\n          <label htmlFor=\"inputPassword\" className=\"col-lg-3 col-form-label\">\r\n            Senha:\r\n          </label>\r\n          <div className=\"col-lg-9\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"inputPassword\"\r\n              {...bindPassword}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2 mb-lg-3 text-center\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions/actionAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.isLoading && auth.isAuthenticated != null) {\r\n          if (auth.isAuthenticated) {\r\n            if (auth.user.is_staff) {\r\n              return <Component {...props} />;\r\n            } else {\r\n              return <Redirect to=\"/NotAutorized\" />;\r\n            }\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        } else {\r\n          return <Loading />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./loadInterceptor\";\r\n// import { loadUser } from \"./actions/auth\";\r\n// import AlertTemplate from \"react-alert-template-basic\";\r\nimport { Provider as AlertProvider } from \"react-alert\";\r\nimport { loadUser } from \"./actions/actionAuth\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"./components/common/PrivateRoute\";\r\nimport NotFound from \"./components/common/NotFound\";\r\nimport Loading from \"./components/common/Loading\";\r\n\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import \"./fix-bootstrap5.css\";\r\nimport \"./bootstrap.flatly.min.css\";\r\n\r\nimport Header from \"./components/layouts/Header\";\r\nimport Footer from \"./components/layouts/Footer\";\r\nimport Alerts from \"./components/layouts/Alerts\";\r\nimport AlertTemplate from \"./components/layouts/AlertTemplate\";\r\n\r\n// import Calendario from \"./components/calendario/Calendario\";\r\nimport Calendario from \"./components/calendario/\";\r\nimport Tarefas from \"./components/tarefas/\";\r\nimport Perfil from \"./components/perfil/Perfil\";\r\nimport Aconcluir from \"./components/aconcluir/\";\r\nimport Incompativel from \"./components/incompativel/\";\r\nimport Busca from \"./components/busca/\";\r\nimport Admin from \"./components/admin/\";\r\n\r\nimport Login from \"./components/accounts/Login\";\r\nimport Logout from \"./components/accounts/Logout\";\r\n\r\nimport { actionCRUDUserProfile } from \"./actions/user/actionUserProfile\";\r\n\r\nimport \"./App.css\";\r\nimport AdminRoute from \"./components/common/AdminRoute\";\r\n\r\nexport const App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n    store.dispatch(actionCRUDUserProfile.read());\r\n  }, []);\r\n\r\n  // Alert Options\r\n  const alertOptions = {\r\n    timeout: 5000,\r\n    position: \"bottom center\",\r\n    containerStyle: {\r\n      zIndex: 1070,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <AlertProvider template={AlertTemplate} {...alertOptions}>\r\n        <Router>\r\n          <Alerts />\r\n          <Header />\r\n          <main role=\"main\">\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={Calendario} />\r\n              <PrivateRoute exact path=\"/perfil\" component={Perfil} />\r\n              <PrivateRoute exact path=\"/calendario\" component={Calendario} />\r\n              <PrivateRoute exact path=\"/tarefas\" component={Tarefas} />\r\n              <PrivateRoute exact path=\"/aconcluir\" component={Aconcluir} />\r\n              <AdminRoute exact path=\"/admin\" component={Admin} />\r\n              <PrivateRoute exact path=\"/busca\" component={Busca} />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/incompativel\"\r\n                component={Incompativel}\r\n              />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/logout\" component={Logout} />\r\n              <Route exact path=\"/loading\" component={Loading} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </main>\r\n          <Footer />\r\n        </Router>\r\n      </AlertProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}