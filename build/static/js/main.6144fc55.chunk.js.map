{"version":3,"sources":["actions/actionMessages.js","actions/actionTypes.js","actions/actionAuth.js","actions/actionCRUD.js","actions/notice/actionNotice.js","reducers/notice/reducerNotice.js","actions/notice/actionNoticeColor.js","reducers/notice/reducerNoticeColor.js","actions/notice/actionNoticeEventType.js","reducers/notice/reducerNoticeEventType.js","reducers/notice/index.js","actions/survey/actionSurvey.js","reducers/survey/reducerSurvey.js","actions/survey/actionSurveyEventType.js","reducers/survey/reducerSurveyEventType.js","reducers/survey/index.js","actions/activity/actionActivity.js","reducers/activity/reducerActivity.js","reducers/activity/index.js","actions/imovel/actionImovel.js","reducers/imovel/reducerImovel.js","reducers/imovel/reducerImovelUpdateLog.js","reducers/imovel/index.js","actions/user/actionUser.js","reducers/user/reducerUser.js","actions/user/actionUserProfile.js","reducers/user/reducerUserProfile.js","reducers/user/index.js","reducers/reducerAuth.js","reducers/errors.js","reducers/messages.js","reducers/index.js","reducers/date.js","store.js","loadInterceptor/index.js","components/common/Loading.js","components/common/PrivateRoute.js","components/common/NotFound.js","components/layouts/Header.js","components/layouts/Footer.js","components/layouts/Alerts.js","components/layouts/AlertTemplate.js","components/calendario/utils.js","actions/actionDate.js","components/calendario/Caption.js","components/calendario/common.js","components/calendario/NoticeEvent.js","components/calendario/SurveyEvent.js","components/calendario/Day.js","components/calendario/Calendario.js","components/common/Forms.js","components/common/CommonModalFooter.js","components/common/AutocompleteImovel.js","components/calendario/ModalFormEvent/FormNotice.js","actions/actionFiles.js","components/calendario/ModalFormEvent/FormSurvey.js","components/calendario/ModalFormEvent/FormActivity.js","components/calendario/ModalFormEvent/index.js","components/common/TaskBar.js","components/calendario/index.js","components/tarefas/CalendarioTarefa.js","components/tarefas/index.js","components/perfil/FormChangePassword.js","components/perfil/FormUserData.js","components/perfil/FormReportPDF.js","components/perfil/FormSheetCSV.js","components/perfil/FormUpdateImovel.js","components/perfil/Perfil.js","components/common/NoticeEventList.js","components/common/SurveyEventList.js","components/aconcluir/index.js","components/incompativel/index.js","components/busca/FormBusca.js","components/busca/index.js","components/admin/Users.js","components/admin/ModalFormUser/FormUser.js","components/admin/ModalFormUser/index.js","components/admin/SurveyEventType.js","components/admin/ModalFormSurveyType/FormSurveyType.js","components/admin/ModalFormSurveyType/index.js","components/admin/NoticeEventType.js","components/admin/ModalFormNoticeType/FormNoticeType.js","components/admin/ModalFormNoticeType/index.js","components/admin/NoticeColor.js","components/admin/ModalFormNoticeColor/FormNoticeColor.js","components/admin/ModalFormNoticeColor/index.js","components/admin/index.js","hooks/input-hook.js","components/accounts/Login.js","components/accounts/Logout.js","components/common/AdminRoute.js","App.js","index.js"],"names":["createMessage","msg","type","payload","returnErrors","err","status","response","data","undefined_error","loadUser","dispatch","getState","tokenHeader","tokenConfig","axios","get","process","then","res","user","catch","logout","post","logoutAll","token","auth","config","headers","nomes","actionCRUD","nome","url","create","objeto","types","CREATE","CRUDcreate","read","values","headerWithValues","Object","assign","params","READ","readOptions","options","READ_OPTIONS","update","put","id","UPDATE","CRUDupdate","delete","DELETE","CRUDdelete","includes","Error","push","this","toUpperCase","actionCRUDNotice","initialState","notices","actionCRUDNoticeColor","notice_colors","actionCRUDNoticeEventType","notice_event_types","combineReducers","state","action","map","notice","filter","imovel_id","find","notice_event_type","notice_color","actionCRUDSurvey","surveys","actionCRUDSurveyEventType","survey_event_types","survey","survey_event_type","actionCRUDActivity","activitys","activity","actionCRUDImovel","updateImovelLog","code","imoveis","results","imovel","updatelog","actionCRUDUser","users","current","actionCRUDUserProfile","userprofiles","localStorage","getItem","isAuthenticated","isLoading","removeItem","setItem","errors","messages","date","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","noLoading","interceptors","request","use","replace","document","body","classList","add","error","remove","Promise","reject","Loading","className","role","PrivateRoute","Component","component","rest","useSelector","render","props","to","NotFound","NavItem","children","exact","path","match","activeClassName","aria-current","Header","authButton","style","height","alt","src","href","disabled","first_name","last_name","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","is_staff","Footer","usePrevious","value","ref","useRef","useEffect","Alerts","prevProps","prevErrors","prevMessages","alert","useAlert","history","useHistory","username","join","password","non_field_errors","detail","success","CRUDread","ERROR","INFO","info","SUCCESS","AlertTemplate","message","close","alertClass","onClick","getDateFromString","stringDate","thedayString","toString","themonthString","splitString","split","Date","getNoticeColor","css_name","getNoticeEventType","notice_event","getAllNoticeConcluded","index","notice_events","length","concluded","getSurveyEventType","getFirstVA","name","newDate","momentDate","window","pushState","format","CalendarCaption","momentdate","useDispatch","moment","clone","subtract","startOf","IconButton","icon","onclick","title","target","rel","CompleteButton","MapButton","address","GeoItajaiButton","codigo_lote","EventButton","notice_id","survey_id","activity_id","modalcall","day","data-modalcall","data-notice_id","data-survey_id","data-activity_id","data-day","NoticeEventSpan","show_start","deadline_date","short_name","identification","NoticeButton","backgroundColor","css_color","name_string","key","logradouro","numero","bairro","NoticeEventButton","authuser","useState","isOwner","setIsOwner","undefined","owner","show_deadline","completeTask","SurveyEventSpan","SurveyEventButton","SurveyEvent","Day","currentUser","notices_deadline","isSame","Calendario","calendar","setCalendar","locale","start_date","end_date","endOf","startDay","endDay","_date","isBefore","Array","fill","buildCalendar","Caption","weekdays","d","week","weekindex","required","subscription","touched","meta","InputFormGroup","isHidden","classNameDiv","label","htmlFor","CheckboxFormGroup","tooltip","SelectFormGroup","ToogleFieldSet","isDisabled","CommonModalFooter","canDelete","canCopy","onDelete","form","reset","data-bs-dismiss","AutocompleteImovel","showResult","currentImovel","setCurrentImovel","showAutocomplete","setShowAutocomplete","blurTimer","setBlurTimer","showNewCEP","setShowNewCEP","logradouroBusca","setLogradouroBusca","CEPResults","setCEPResults","getFieldState","pristine","debouncedImovelSearch","useCallback","debounce","all","codigo_insc","complemento","number","street","codigo","inscricao_imobiliaria","test","minusIndex","indexOf","slice","trim","formatString","lastMinusIndex","lastIndexOf","firstCommaIndex","secondCommaIndex","SearchFromString","handleFocus","clearTimeout","setTimeout","handleImovelChoose","event","mutators","setValue","dataset","aria-hidden","autoComplete","previous","handleValueChange","data-imovel_id","data-imovel_value","razao_social","numero_contribuinte","cep","maxLength","placeholder","onChange","header","crossDomain","uf","localidade","total","dados","mensagem","console","log","handleBuscaCEP","result","logradouroDNEC","parse","FormNoticeFine","fields","size","FormNoticeEvent","validate","show_report_number","show_concluded","min","max","show_fine","requiredArray","FormNotice","isModalOpen","confirm_alert","element","confirm","bootstrap","Modal","getInstance","getElementById","hide","initialValues","onSubmit","criarnovo","closeModal","arrayObject","removedNoticeEvents","confirmSave","arrayMutators","field","changeValue","handleSubmit","noValidate","b","createElement","setAttribute","appendChild","click","parentNode","removeChild","onlyNumbers","cols","rows","deadline","default_deadline","deadline_working_days","default_deadline_working_days","default_concluded","responseType","file","Blob","fileURL","URL","createObjectURL","fileLink","download","revokeObjectURL","getnoticereportdocx","vistoriaAdministrativa","vistoria_administrativa_id","FormSurvey","order","FormActivity","errormgs","ModalEventTab","active","ModalEventPanel","aria-labelledby","setIsModalOpen","setNotice","setSurvey","setActivity","noticetab","surveytab","activitytab","tabstate","setTabstate","setDate","handleShowModal","e","relatedTarget","description","resethack","handleHiddenModal","addEventListener","removeEventListener","tabIndex","data-backdrop","TaskBar","dateType","newUser","location","useLocation","thedate","hash","substring","ModalFormEvent","CalendarioTarefa","FormChangePassword","authUser","new_password","new_password_check","submitError","FormUserData","FormReportPDF","user_id","month","user_name","fileName","getReportPDF","FormSheetCSV","getSheetCSV","FormUpdateImovel","duration","setDuration","diffTime","datetime","diff","datetime_started","check","color","inalterados","alterados","novos","progresso","aria-valuenow","aria-valuemin","aria-valuemax","hours","minutes","seconds","Perfil","intervalId","setInterval","clearInterval","last_login","NoticeEventList","SurveyEventList","incompatible","FormBusca","setstate","Users","data-user_id","scope","email","profile","matricula","is_active","FormUser","toLowerCase","setUser","SurveyEventType","data-survey_type_id","sort","a","FormSurveyType","surveyType","setSurveyType","surveyTypes","survey_type_id","NoticeEventType","data-notice_type_id","rowSpan","colSpan","FormNoticeType","noticeType","setNoticeType","noticeTypes","notice_type_id","NoticeColor","data-notice_color_id","FormNoticeColor","noticeColor","multiple","setNoticeColor","noticeColors","notice_color_id","ModalFormUser","ModalFormSurveyType","ModalFormNoticeType","ModalFormNoticeColor","useInput","initialValue","bind","Login","isLoging","setIsLoging","bindUsername","resetUsername","bindPassword","resetPassword","preventDefault","Authorization","btoa","login","Logout","AdminRoute","App","template","timeout","position","containerStyle","zIndex","Tarefas","Aconcluir","Admin","Busca","Incompativel","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6144fc55.chunk.js","sourcesContent":["import { CREATE_MESSAGE, GET_ERRORS } from \"./actionTypes\";\r\n\r\n// CREATE MESSAGE\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (err) => {\r\n  let msg;\r\n  let status;\r\n  if (err.response) {\r\n    msg = err.response.data;\r\n    status = err.response.status;\r\n  } else {\r\n    msg = { undefined_error: [err] };\r\n    status = \"undefined_error\";\r\n  }\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","//Geral\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\n\r\nexport const DATE_NEW = \"DATE_NEW\";\r\nexport const USER_NEW = \"USER_NEW\";\r\n\r\nexport const FILE_REPORT_PDF = \"FILE_REPORT_PDF\";\r\n\r\nexport const NOTICE_GETLATEST = \"NOTICE_GETLATEST\";\r\n\r\nexport const IMOVEL_UPDATEDATA = \"IMOVEL_UPDATEDATA\";\r\nexport const IMOVEL_UPDATELOG = \"IMOVEL_UPDATELOG\";\r\n","import axios from \"axios\";\r\nimport { returnErrors, createMessage } from \"./actionMessages\";\r\n\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  USER_NEW,\r\n} from \"./actionTypes\";\r\n\r\n// CHECK TOKEN & LOAD USER\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  // User Loading\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    dispatch({ type: USER_LOADING });\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/auth/login/\", tokenHeader)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: USER_LOADED,\r\n          payload: res.data,\r\n        });\r\n        dispatch({\r\n          type: USER_NEW,\r\n          payload: res.data.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n        dispatch({\r\n          type: AUTH_ERROR,\r\n        });\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// LOGIN USER\r\nexport const login = (username, password) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Basic ${btoa(username + \":\" + password)}`,\r\n    },\r\n  };\r\n  axios\r\n    .post(process.env.REACT_APP_API_URL + \"api/auth/login/\", null, config)\r\n    .then((res) => {\r\n      dispatch(createMessage(\"Bem vindo\"));\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch(loadUser());\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => (dispatch, getState) => {\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/auth/logout/\",\r\n        null,\r\n        tokenHeader\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\nexport const logoutAll = () => (dispatch, getState) => {\r\n  let tokenHeader = tokenConfig(getState);\r\n  if (tokenHeader != null) {\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_API_URL + \"api/auth/logoutall/\",\r\n        null,\r\n        tokenHeader\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } else {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n  // Get token from state\r\n  const token = getState().auth.token;\r\n  if (token == null) {\r\n    return null;\r\n  }\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"./actionMessages\";\r\nimport { tokenConfig } from \"../actions/actionAuth\";\r\nimport { createMessage } from \"./actionMessages\";\r\n\r\nvar nomes = [];\r\n\r\nexport class actionCRUD {\r\n  constructor(nome, url) {\r\n    if (nomes.includes(nome)) {\r\n      throw new Error('nome: \"' + nome + '\" já existe, o nome deve ser unico.');\r\n    } else {\r\n      nomes.push(nome);\r\n      this.nome = nome;\r\n      this.url = url;\r\n    }\r\n    this.types = {\r\n      CREATE: \"CREATE_\" + this.nome.toUpperCase(),\r\n      READ: \"READ_\" + this.nome.toUpperCase(),\r\n      READ_OPTIONS: \"READ_OPTIONS\" + this.nome.toUpperCase(),\r\n      UPDATE: \"UPDATE_\" + this.nome.toUpperCase(),\r\n      DELETE: \"DELETE_\" + this.nome.toUpperCase(),\r\n    };\r\n  }\r\n\r\n  // CREATE\r\n  create = (objeto) => (dispatch, getState) => {\r\n    axios\r\n      .post(this.url, objeto, tokenConfig(getState))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.CREATE,\r\n          payload: res.data,\r\n        });\r\n        dispatch(createMessage({ CRUDcreate: \"Criado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  // READ\r\n  read = (values) => (dispatch, getState) => {\r\n    let headerWithValues = Object.assign(\r\n      {},\r\n      { params: values },\r\n      tokenConfig(getState)\r\n    );\r\n    axios\r\n      .get(this.url, headerWithValues)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.READ,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  };\r\n\r\n  // READ_OPTIONS\r\n  readOptions = () => (dispatch, getState) => {\r\n    axios\r\n      .options(this.url, tokenConfig(getState))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.READ_OPTIONS,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  // UPDATE\r\n  update = (objeto) => (dispatch, getState) => {\r\n    axios\r\n      .put(this.url + objeto.id + \"/\", { ...objeto }, tokenConfig(getState))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.UPDATE,\r\n          payload: res.data,\r\n        });\r\n        dispatch(createMessage({ CRUDupdate: \"Atualizado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n\r\n  //DELETE\r\n  delete = (id) => (dispatch, getState) => {\r\n    axios\r\n      .delete(this.url + id + \"/\", tokenConfig(getState))\r\n      .then((res) => {\r\n        dispatch({\r\n          type: this.types.DELETE,\r\n          payload: id,\r\n        });\r\n        dispatch(createMessage({ CRUDdelete: \"Deletado com sucesso\" }));\r\n      })\r\n      .catch((err) => dispatch(returnErrors(err)));\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { actionCRUD } from \"../actionCRUD\";\r\nimport { returnErrors } from \"../actionMessages\";\r\nimport { NOTICE_GETLATEST } from \"../actionTypes\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nexport const actionCRUDNotice = new actionCRUD(\r\n  \"notice\",\r\n  process.env.REACT_APP_API_URL + \"api/notice/\"\r\n);\r\n\r\nexport const getLatest = (imovel_id) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { params: { imovel_id: imovel_id } },\r\n    tokenConfig(getState)\r\n  );\r\n  axios\r\n    .get(process.env.REACT_APP_API_URL + \"api/latestnotice/\", headerWithValues)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: NOTICE_GETLATEST,\r\n        payload: res.data,\r\n      });\r\n      if (res.data.imovel_id !== null) {\r\n        bootstrap.Modal.getInstance(\r\n          document.getElementById(\"ModalEvent\")\r\n        ).hide();\r\n        setTimeout(() => {\r\n          var b = document.createElement(\"button\");\r\n          b.type = \"button\";\r\n          b.setAttribute(\"role\", \"button\");\r\n          b.setAttribute(\"data-bs-toggle\", \"modal\");\r\n          b.setAttribute(\"data-bs-target\", \"#ModalEvent\");\r\n          b.setAttribute(\"data-modalcall\", \"notice\");\r\n          b.setAttribute(\"data-notice_id\", res.data.id);\r\n          b.setAttribute(\"data-survey_id\", \"0\");\r\n          b.setAttribute(\"data-activity_id\", \"0\");\r\n          document.body.appendChild(b);\r\n          b.click();\r\n          b.parentNode.removeChild(b);\r\n        }, 500);\r\n      } else {\r\n        dispatch(\r\n          returnErrors(\"Não foi encontrado Autos passados neste imóvel\")\r\n        );\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n    });\r\n};\r\n","import { NOTICE_GETLATEST } from \"../../actions/actionTypes.js\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice.js\";\r\n\r\nconst initialState = {\r\n  notices: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNotice.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notices: [...state.notices, action.payload],\r\n      };\r\n    case actionCRUDNotice.types.READ:\r\n      return {\r\n        ...state,\r\n        notices: action.payload,\r\n      };\r\n    case actionCRUDNotice.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notices: state.notices.map((notice) =>\r\n          notice.id === action.payload.id ? action.payload : notice\r\n        ),\r\n      };\r\n    case actionCRUDNotice.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notices: state.notices.filter((notice) => notice.id !== action.payload),\r\n      };\r\n    case NOTICE_GETLATEST:\r\n      if (action.payload.imovel_id !== null) {\r\n        if (!state.notices.find((notice) => notice.id === action.payload.id)) {\r\n          return {\r\n            ...state,\r\n            notices: [...state.notices, action.payload],\r\n          };\r\n        }\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDNoticeColor = new actionCRUD(\r\n  \"noticecolor\",\r\n  process.env.REACT_APP_API_URL + \"api/noticecolor/\"\r\n);\r\n","import { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\n\r\nconst initialState = {\r\n  notice_colors: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNoticeColor.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notice_colors: [...state.notice_colors, action.payload],\r\n      };\r\n    case actionCRUDNoticeColor.types.READ:\r\n      return {\r\n        ...state,\r\n        notice_colors: action.payload,\r\n      };\r\n    case actionCRUDNoticeColor.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notice_colors: state.notice_colors.map((notice_color) =>\r\n          notice_color.id === action.payload.id ? action.payload : notice_color\r\n        ),\r\n      };\r\n    case actionCRUDNoticeColor.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notice_colors: state.notice_colors.filter(\r\n          (notice_color) => notice_color.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDNoticeEventType = new actionCRUD(\r\n  \"noticeeventtype\",\r\n  process.env.REACT_APP_API_URL + \"api/noticeeventtype/\"\r\n);\r\n","import { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\n\r\nconst initialState = {\r\n  notice_event_types: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDNoticeEventType.types.CREATE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: [...state.notice_event_types, action.payload],\r\n      };\r\n    case actionCRUDNoticeEventType.types.READ:\r\n      return {\r\n        ...state,\r\n        notice_event_types: action.payload,\r\n      };\r\n    case actionCRUDNoticeEventType.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: state.notice_event_types.map((notice_event_type) =>\r\n          notice_event_type.id === action.payload.id\r\n            ? action.payload\r\n            : notice_event_type\r\n        ),\r\n      };\r\n    case actionCRUDNoticeEventType.types.DELETE:\r\n      return {\r\n        ...state,\r\n        notice_event_types: state.notice_event_types.filter(\r\n          (notice_event_type) => notice_event_type.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerNotice from \"./reducerNotice\";\r\nimport reducerNoticeColor from \"./reducerNoticeColor\";\r\nimport reducerNoticeEventType from \"./reducerNoticeEventType\";\r\n\r\nexport default combineReducers({\r\n  notices: reducerNotice,\r\n  notice_event_types: reducerNoticeEventType,\r\n  notice_colors: reducerNoticeColor,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDSurvey = new actionCRUD(\r\n  \"survey\",\r\n  process.env.REACT_APP_API_URL + \"api/survey/\"\r\n);\r\n","import { actionCRUDSurvey } from \"../../actions/survey/actionSurvey.js\";\r\n\r\nconst initialState = {\r\n  surveys: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDSurvey.types.CREATE:\r\n      return {\r\n        ...state,\r\n        surveys: [...state.surveys, action.payload],\r\n      };\r\n    case actionCRUDSurvey.types.READ:\r\n      return {\r\n        ...state,\r\n        surveys: action.payload,\r\n      };\r\n    case actionCRUDSurvey.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        surveys: state.surveys.map((survey) =>\r\n          survey.id === action.payload.id ? action.payload : survey\r\n        ),\r\n      };\r\n    case actionCRUDSurvey.types.DELETE:\r\n      return {\r\n        ...state,\r\n        surveys: state.surveys.filter((survey) => survey.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDSurveyEventType = new actionCRUD(\r\n  \"surveyeventtype\",\r\n  process.env.REACT_APP_API_URL + \"api/surveyeventtype/\"\r\n);\r\n","import { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\n\r\nconst initialState = {\r\n  survey_event_types: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDSurveyEventType.types.CREATE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: [...state.survey_event_types, action.payload],\r\n      };\r\n    case actionCRUDSurveyEventType.types.READ:\r\n      return {\r\n        ...state,\r\n        survey_event_types: action.payload,\r\n      };\r\n    case actionCRUDSurveyEventType.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: state.survey_event_types.map((survey_event_type) =>\r\n          survey_event_type.id === action.payload.id\r\n            ? action.payload\r\n            : survey_event_type\r\n        ),\r\n      };\r\n    case actionCRUDSurveyEventType.types.DELETE:\r\n      return {\r\n        ...state,\r\n        survey_event_types: state.survey_event_types.filter(\r\n          (survey_event_type) => survey_event_type.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerSurvey from \"./reducerSurvey\";\r\nimport reducerSurveyEventType from \"./reducerSurveyEventType\";\r\n\r\nexport default combineReducers({\r\n  surveys: reducerSurvey,\r\n  survey_event_types: reducerSurveyEventType,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\n\r\nexport const actionCRUDActivity = new actionCRUD(\r\n  \"activity\",\r\n  process.env.REACT_APP_API_URL + \"api/activity/\"\r\n);\r\n","import { actionCRUDActivity } from \"../../actions/activity/actionActivity.js\";\r\n\r\nconst initialState = {\r\n  activitys: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDActivity.types.CREATE:\r\n      return {\r\n        ...state,\r\n        activitys: [...state.activitys, action.payload],\r\n      };\r\n    case actionCRUDActivity.types.READ:\r\n      return {\r\n        ...state,\r\n        activitys: action.payload,\r\n      };\r\n    case actionCRUDActivity.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        activitys: state.activitys.map((activity) =>\r\n          activity.id === action.payload.id ? action.payload : activity\r\n        ),\r\n      };\r\n    case actionCRUDActivity.types.DELETE:\r\n      return {\r\n        ...state,\r\n        activitys: state.activitys.filter(\r\n          (activity) => activity.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerActivity from \"./reducerActivity\";\r\n\r\nexport default combineReducers({\r\n  activitys: reducerActivity,\r\n});\r\n","import axios from \"axios\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { actionCRUD } from \"../actionCRUD\";\r\nimport { createMessage, returnErrors } from \"../actionMessages\";\r\nimport { IMOVEL_UPDATEDATA, IMOVEL_UPDATELOG } from \"../actionTypes\";\r\n\r\nexport const actionCRUDImovel = new actionCRUD(\r\n  \"imovel\",\r\n  process.env.REACT_APP_API_URL + \"api/imovel/\"\r\n);\r\n\r\nexport const updateImovel = (check) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { params: check },\r\n    tokenConfig(getState)\r\n  );\r\n  axios\r\n    .get(process.env.REACT_APP_API_URL + \"api/geoitajai/\", headerWithValues)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: IMOVEL_UPDATEDATA,\r\n        payload: res.data,\r\n      });\r\n      if (res.data.response === \"Não Autorizado\") {\r\n        dispatch(createMessage({ ERROR: res.data.response }));\r\n      } else {\r\n        dispatch(createMessage({ SUCCESS: res.data.response }));\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err));\r\n    });\r\n};\r\n\r\nexport const updateImovelLog = () => (dispatch, getState) => {\r\n  axios\r\n    .get(\r\n      process.env.REACT_APP_API_URL + \"api/imovelupdatelog/\",\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: IMOVEL_UPDATELOG,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      if (!err.code === \"ECONNABORTED\") {\r\n        dispatch(returnErrors(err));\r\n      }\r\n    });\r\n};\r\n","import { actionCRUDImovel } from \"../../actions/imovel/actionImovel\";\r\n\r\nconst initialState = {\r\n  imoveis: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDImovel.types.CREATE:\r\n      return {\r\n        ...state,\r\n        imoveis: [...state.imoveis, action.payload],\r\n      };\r\n    case actionCRUDImovel.types.READ:\r\n      return {\r\n        ...state,\r\n        imoveis: action.payload.results,\r\n      };\r\n    case actionCRUDImovel.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        imoveis: state.imoveis.map((imovel) =>\r\n          imovel.id === action.payload.id ? action.payload : imovel\r\n        ),\r\n      };\r\n    case actionCRUDImovel.types.DELETE:\r\n      return {\r\n        ...state,\r\n        imoveis: state.imoveis.filter((imovel) => imovel.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { IMOVEL_UPDATELOG } from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case IMOVEL_UPDATELOG:\r\n      return {\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerImovel from \"./reducerImovel\";\r\nimport reducerImovelUpdateLog from \"./reducerImovelUpdateLog\";\r\n\r\nexport default combineReducers({\r\n  imoveis: reducerImovel,\r\n  updatelog: reducerImovelUpdateLog,\r\n});\r\n","import { actionCRUD } from \"../actionCRUD\";\r\nimport { USER_NEW } from \"../actionTypes\";\r\n\r\nexport const actionCRUDUser = new actionCRUD(\r\n  \"user\",\r\n  process.env.REACT_APP_API_URL + \"api/user/\"\r\n);\r\n\r\nexport const newUser = (user) => {\r\n  return {\r\n    type: USER_NEW,\r\n    payload: user,\r\n  };\r\n};\r\n","import { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport { USER_NEW } from \"../../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  current: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDUser.types.CREATE:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case actionCRUDUser.types.READ:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case actionCRUDUser.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id === action.payload.id ? action.payload : user\r\n        ),\r\n      };\r\n    case actionCRUDUser.types.DELETE:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    case USER_NEW:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { actionCRUD } from \"../actionCRUD\";\r\nimport axios from \"axios\";\r\nimport { returnErrors, createMessage } from \"../actionMessages\";\r\nimport { tokenConfig } from \"../actionAuth\";\r\nimport { logoutAll } from \"../actionAuth\";\r\n\r\nexport const actionCRUDUserProfile = new actionCRUD(\r\n  \"userprofile\",\r\n  process.env.REACT_APP_API_URL + \"api/userprofile/\"\r\n);\r\n\r\nexport const changePassword = (objeto) => (dispatch, getState) => {\r\n  axios\r\n    .put(\r\n      process.env.REACT_APP_API_URL + \"api/changepassword/\",\r\n      { ...objeto },\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch(createMessage({ CRUDupdate: \"Senha alterada com sucesso!\" }));\r\n      dispatch(logoutAll());\r\n    })\r\n    .catch((err) => dispatch(returnErrors(err)));\r\n};\r\n","import { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile.js\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionCRUDUserProfile.types.CREATE:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case actionCRUDUserProfile.types.READ:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    case actionCRUDUserProfile.types.UPDATE:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id === action.payload.id ? action.payload : user\r\n        ),\r\n      };\r\n    case actionCRUDUserProfile.types.DELETE:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport reducerUser from \"./reducerUser\";\r\nimport reducerUserProfile from \"./reducerUserProfile\";\r\n\r\nexport default combineReducers({\r\n  users: reducerUser,\r\n  userprofiles: reducerUserProfile,\r\n});\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n  isLoading: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case \"UPDATE_USERPROFILE\":\r\n      return {\r\n        ...state,\r\n        user: state.user.id === action.payload.id ? action.payload : state.user,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport notice from \"./notice\";\r\nimport survey from \"./survey\";\r\nimport activity from \"./activity\";\r\nimport imovel from \"./imovel\";\r\nimport user from \"./user\";\r\nimport reducerAuth from \"./reducerAuth\";\r\nimport errors from \"./errors\";\r\nimport messages from \"./messages\";\r\nimport date from \"./date\";\r\n\r\nexport default combineReducers({\r\n  auth: reducerAuth,\r\n  user,\r\n  notice,\r\n  survey,\r\n  activity,\r\n  errors,\r\n  messages,\r\n  date,\r\n  imovel,\r\n});\r\n","import { DATE_NEW } from \"../actions/actionTypes\";\r\n\r\nconst initialState = null;\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case DATE_NEW:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport \"./index.css\";\r\n\r\nconst noLoading = [\"api/imovelupdatelog/\", \"api/imovel/\"];\r\n\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    if (\r\n      !noLoading.includes(config.url.replace(process.env.REACT_APP_API_URL, \"\"))\r\n    ) {\r\n      document.body.classList.add(\"loading-indicator\");\r\n    }\r\n    // const token = window.localStorage.token;\r\n    // if (token) {\r\n    //   config.headers.Authorization = `token ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  function (error) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return response;\r\n  },\r\n  function (error) {\r\n    document.body.classList.remove(\"loading-indicator\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"w-100 h-100 d-grid justify-content-center align-content-center\">\r\n      <div className=\"spinner-border\" role=\"status\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.isLoading && auth.isAuthenticated != null) {\r\n          if (auth.isAuthenticated) {\r\n            return <Component {...props} />;\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        } else {\r\n          return <Loading />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 - Pagina não encontrada!</h1>\r\n      <Link to=\"/\">Ir para pagina inicial</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem = ({ to, children }) => {\r\n  return (\r\n    <Route\r\n      exact\r\n      path={to}\r\n      children={({ match }) => (\r\n        <li className={match ? \"nav-item active\" : \"nav-item\"}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            className=\"nav-link\"\r\n            aria-current=\"page\"\r\n            to={to}\r\n          >\r\n            {children}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  let authButton;\r\n  if (auth.isAuthenticated) {\r\n    authButton = (\r\n      <NavLink\r\n        to=\"/login\"\r\n        activeClassName=\"d-none\"\r\n        className=\"btn btn-outline-primary\"\r\n      >\r\n        Sair\r\n      </NavLink>\r\n    );\r\n  } else {\r\n    authButton = (\r\n      <NavLink\r\n        to=\"/login\"\r\n        activeClassName=\"d-none\"\r\n        className=\"btn btn-outline-primary\"\r\n      >\r\n        entrar\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg p-2\">\r\n      <img\r\n        style={{ height: \"35px\" }}\r\n        className=\"d-none d-xl-inline-block mr-2\"\r\n        alt=\"\"\r\n        src={process.env.PUBLIC_URL + \"/Logo.png\"}\r\n      />\r\n      <div className=\"container-fluid\">\r\n        <span className=\"navbar-brand\" href=\"/\" disabled=\"disabled\">\r\n          {auth.user\r\n            ? \"AFM \" + auth.user.first_name + \" \" + auth.user.last_name\r\n            : \"Event Tracker\"}\r\n        </span>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n            <NavItem to=\"/perfil\">Perfil</NavItem>\r\n            <NavItem to=\"/\">Calendario</NavItem>\r\n            <NavItem to=\"/tarefas\">Tarefas do Dia</NavItem>\r\n            <NavItem to=\"/aconcluir\">A Concluir</NavItem>\r\n            <NavItem to=\"/busca\">Buscar</NavItem>\r\n            <NavItem to=\"/incompativel\">Verificação de imóvel</NavItem>\r\n            {auth && auth.user && auth.user.is_staff && (\r\n              <NavItem to=\"/admin\">Administração</NavItem>\r\n            )}\r\n          </ul>\r\n          {authButton}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"container-fluid bg-light\">\r\n      <span className=\"text-muted\">©2020 Jonas Martins</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment, useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n\r\nconst Alerts = (prevProps, props) => {\r\n  const { errors, messages } = useSelector((state) => state);\r\n  const prevErrors = usePrevious(errors);\r\n  const prevMessages = usePrevious(messages);\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (errors !== prevErrors) {\r\n      if (errors.msg.username)\r\n        alert.error(`Usuário: ${errors.msg.username.join()}`);\r\n      if (errors.msg.password)\r\n        alert.error(`Senha: ${errors.msg.password.join()}`);\r\n      if (errors.msg.non_field_errors) {\r\n        alert.error(errors.msg.non_field_errors.join());\r\n      }\r\n      if (errors.msg.detail) {\r\n        alert.error(errors.msg.detail);\r\n      }\r\n      if (errors.msg.undefined_error) {\r\n        alert.error(errors.msg.undefined_error.join());\r\n      }\r\n      if (errors.status >= 300) {\r\n        if (!errors.msg) {\r\n          alert.error(errors.status);\r\n        }\r\n      }\r\n    }\r\n    if (messages !== prevMessages) {\r\n      if (messages.CRUDcreate) alert.success(messages.CRUDcreate);\r\n      if (messages.CRUDread) alert.success(messages.CRUDread);\r\n      if (messages.CRUDupdate) alert.success(messages.CRUDupdate);\r\n      if (messages.CRUDdelete) alert.success(messages.CRUDdelete);\r\n      if (messages.ERROR) alert.error(messages.ERROR);\r\n      if (messages.INFO) alert.info(messages.INFO);\r\n      if (messages.SUCCESS) alert.success(messages.SUCCESS);\r\n    }\r\n  }, [errors, prevErrors, messages, prevMessages, alert, history]);\r\n\r\n  return <Fragment />;\r\n};\r\n\r\nexport default Alerts;\r\n","import React from \"react\";\r\n\r\nconst AlertTemplate = ({ style, options, message, close }) => {\r\n  let alertClass = \"\";\r\n  if (options.type === \"info\") {\r\n    alertClass = \"alert-info\";\r\n  } else if (options.type === \"success\") {\r\n    alertClass = \"alert-success\";\r\n  } else if (options.type === \"error\") {\r\n    alertClass = \"alert-danger\";\r\n  }\r\n  return (\r\n    <div\r\n      className={\"alert alert-dismissible fade show \" + alertClass}\r\n      role=\"alert\"\r\n      style={style}\r\n    >\r\n      {message}\r\n      <button className=\"close\" onClick={close}>\r\n        <span>&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertTemplate;\r\n","import bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport store from \"../../store\";\r\n\r\nexport default function buildCalendar(date) {\r\n  const calendar = [];\r\n  const startDay = date.clone().startOf(\"month\").startOf(\"week\");\r\n  const endDay = date.clone().endOf(\"month\").endOf(\"week\");\r\n  const _date = startDay.clone().subtract(1, \"day\");\r\n  while (_date.isBefore(endDay, \"day\")) {\r\n    calendar.push(\r\n      Array(7)\r\n        .fill(0)\r\n        .map(() => _date.add(1, \"day\").clone())\r\n    );\r\n  }\r\n  return calendar;\r\n}\r\n\r\nexport const filterOnlyInArrayByID = (arrayObject) => {\r\n  return function (current) {\r\n    for (let index = 0; index < arrayObject.length; index++) {\r\n      if (current.id === arrayObject[index].id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyUnConcluded = () => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (!notice.notice_events[index].concluded) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyConcluded = () => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].concluded) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterSurveybyUnConcluded = () => {\r\n  return function (survey) {\r\n    return !survey.concluded;\r\n  };\r\n};\r\n\r\nexport const filterSurveybyConcluded = () => {\r\n  return function (survey) {\r\n    return survey.concluded;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDate = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (\r\n        notice.notice_events[index].date === stringDate ||\r\n        notice.notice_events[index].deadline_date === stringDate\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDateStart = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticebyDateDeadline = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].deadline_date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterSurveyByDate = (stringDate) => {\r\n  return function (survey) {\r\n    if (survey.date === stringDate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterActivityByDate = (stringDate) => {\r\n  return function (activity) {\r\n    if (activity.date === stringDate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const filterNoticeEventByDate = (stringDate) => {\r\n  return function (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      if (notice.notice_events[index].deadline_date === stringDate) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\nexport const getDateFromString = (stringDate) => {\r\n  const thedayString = stringDate\r\n    .toString()\r\n    .match(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/g);\r\n  const themonthString = stringDate\r\n    .toString()\r\n    .match(/^\\d{4}-(0[1-9]|1[012])$/g);\r\n  if (thedayString !== null) {\r\n    let splitString = thedayString[0].split(\"-\");\r\n    return new Date(splitString[0], splitString[1] - 1, splitString[2]);\r\n  } else if (themonthString !== null) {\r\n    let splitString = themonthString[0].split(\"-\");\r\n    return new Date(splitString[0], splitString[1] - 1);\r\n  } else {\r\n    return new Date();\r\n  }\r\n};\r\n\r\nexport const getFirstDateOfMonth = (date) => {\r\n  return new Date(date.getFullYear(), date.getMonth());\r\n};\r\n\r\nexport const getLastDateOfMonth = (date) => {\r\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n};\r\n\r\nexport const getStarDayOfCalendar = (firstDayOfMonth) => {\r\n  let startDate = new Date(firstDayOfMonth.getTime());\r\n  startDate.setDate(firstDayOfMonth.getDate() - firstDayOfMonth.getDay());\r\n  return startDate;\r\n};\r\n\r\nexport const getEndDayOfCalendar = (lastDayOfMonth) => {\r\n  let endDate = new Date(lastDayOfMonth.getTime());\r\n  if (endDate.getDay() !== 6) {\r\n    endDate.setDate(lastDayOfMonth.getDate() + lastDayOfMonth.getDay());\r\n  }\r\n  return endDate;\r\n};\r\n\r\nexport const openNoticeModal = (notice) => {\r\n  var myModal = new bootstrap.Modal(document.getElementById(\"ModalEvent\"), {});\r\n  myModal.show();\r\n};\r\n\r\nexport const getNoticeColor = (notice) => {\r\n  if (notice) {\r\n    const notice_colors = store.getState().notice.notice_colors.notice_colors;\r\n    let notice_color = notice_colors.find(\r\n      (notice_color) => notice_color.css_name === notice.css_name\r\n    );\r\n    return notice_color;\r\n  }\r\n};\r\n\r\nexport const getNoticeEventType = (notice_event) => {\r\n  if (notice_event) {\r\n    const notice_event_types = store.getState().notice.notice_event_types\r\n      .notice_event_types;\r\n\r\n    let notice_event_type = notice_event_types.find(\r\n      (notice_event_type) =>\r\n        notice_event_type.id === notice_event.notice_event_type\r\n    );\r\n    return notice_event_type;\r\n  }\r\n};\r\n\r\nexport const getAllNoticeConcluded = (notice) => {\r\n  for (let index = 0; index < notice.notice_events.length; index++) {\r\n    if (!notice.notice_events[index].concluded) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getSurveyEventType = (survey) => {\r\n  if (survey) {\r\n    const survey_event_types = store.getState().survey.survey_event_types\r\n      .survey_event_types;\r\n    let survey_event_type = survey_event_types.find(\r\n      (survey_event_type) => survey_event_type.id === survey.survey_event_type\r\n    );\r\n    return survey_event_type;\r\n  }\r\n};\r\n\r\nexport const getFirstVA = (notice) => {\r\n  if (notice) {\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      let notice_event_type = getNoticeEventType(notice.notice_events[index]);\r\n      if (notice_event_type.name === \"Vistoria Administrativa\") {\r\n        return notice.notice_events[index];\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};","import { DATE_NEW } from \"./actionTypes\";\r\n\r\nexport const newDate = (momentDate) => {\r\n  window.history.pushState(null, null, \"#\" + momentDate.format(\"YYYY-MM-DD\"));\r\n  return {\r\n    type: DATE_NEW,\r\n    payload: momentDate,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst CalendarCaption = ({ momentdate }) => {\r\n  const dispatch = useDispatch();\r\n  const dateBackward = () => {\r\n    dispatch(\r\n      newDate(moment(momentdate.clone().subtract(1, \"months\").startOf(\"month\")))\r\n    );\r\n  };\r\n  const dateForward = () => {\r\n    dispatch(\r\n      newDate(moment(momentdate.clone().add(1, \"months\").startOf(\"month\")))\r\n    );\r\n  };\r\n  const dateToday = () => {\r\n    dispatch(newDate(moment()));\r\n  };\r\n\r\n  return (\r\n    <caption className=\"bg-primary text-center\">\r\n      <div className=\"float-left ml-2\">\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            className=\"btn btn-secondary border-right\"\r\n            onClick={dateBackward}\r\n          >\r\n            <i className=\"fa fa-chevron-left\"></i>\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary border-left\"\r\n            onClick={dateForward}\r\n          >\r\n            <i className=\"fa fa-chevron-right\"></i>\r\n          </button>\r\n        </div>\r\n        <button className=\"btn btn-secondary mx-2\" onClick={dateToday}>\r\n          Hoje\r\n        </button>\r\n      </div>\r\n      <h4 className=\"text-uppercase font-weight-bold\">\r\n        {momentdate.format(\"MMMM Y\")}\r\n      </h4>\r\n    </caption>\r\n  );\r\n};\r\n\r\nexport default CalendarCaption;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const IconButton = ({ icon, href = null, onclick = null, title }) => {\r\n  return (\r\n    <div className=\"col col-auto p-0 d-flex flex-column justify-content-center\">\r\n      <a\r\n        href={href}\r\n        onClick={onclick}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        className=\"btn btn-secondary d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n        type=\"button\"\r\n        title={title}\r\n      >\r\n        <i className={\"fa \" + icon}></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CompleteButton = ({ concluded, onclick }) => {\r\n  return (\r\n    <IconButton\r\n      icon={concluded ? \"fa-check-square-o\" : \"fa-square-o\"}\r\n      onclick={onclick}\r\n      title=\"Marcar como finalizado\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const MapButton = ({ address }) => {\r\n  return (\r\n    <IconButton\r\n      href={\"https://www.google.com/maps/place/\" + address}\r\n      icon=\"fa-map\"\r\n      title=\"Procurar endereço no GMaps\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const GeoItajaiButton = ({ codigo_lote }) => {\r\n  return (\r\n    <IconButton\r\n      href={\r\n        \"https://geoitajai.github.io/geo/consultazoneamento_openlayers.html#\" +\r\n        codigo_lote\r\n      }\r\n      icon=\"fa-file-text-o\"\r\n      title=\"Abrir no GeoItajaí\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const EventButton = ({\r\n  notice_id = \"0\",\r\n  survey_id = \"0\",\r\n  activity_id = \"0\",\r\n  modalcall = \"none\",\r\n  title = \"\",\r\n  day = moment().format(\"YYYY-MM-DD\"),\r\n  children,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"col p-1 text-truncate d-flex flex-column justify-content-center\"\r\n      role=\"button\"\r\n      title={title}\r\n      data-bs-toggle=\"modal\"\r\n      data-bs-target=\"#ModalEvent\"\r\n      data-modalcall={modalcall}\r\n      data-notice_id={notice_id}\r\n      data-survey_id={survey_id}\r\n      data-activity_id={activity_id}\r\n      data-day={day}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getNoticeEventType,\r\n  getAllNoticeConcluded,\r\n  getNoticeColor,\r\n} from \"./utils\";\r\nimport {\r\n  CompleteButton,\r\n  MapButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n} from \"./common\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\n\r\nconst NoticeEventSpan = ({ notice_event, day }) => {\r\n  let notice_event_type = getNoticeEventType(notice_event);\r\n  if (notice_event && day && notice_event_type) {\r\n    if (\r\n      (notice_event.date === day.format(\"YYYY-MM-DD\") &&\r\n        notice_event_type.show_start) ||\r\n      notice_event.deadline_date === day.format(\"YYYY-MM-DD\")\r\n    ) {\r\n      return (\r\n        <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n          {\"A. \" + notice_event_type.short_name + \": \"}\r\n          {notice_event.identification !== null && notice_event.identification}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const NoticeButton = ({ notice, day }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: getNoticeColor(notice)\r\n          ? getNoticeColor(notice).css_color\r\n          : \"red\",\r\n      }}\r\n      className={\r\n        \"row no-gutters event user-select-none text-truncate\" +\r\n        (getAllNoticeConcluded(notice) ? \" concluded\" : \"\")\r\n      }\r\n    >\r\n      <EventButton\r\n        notice_id={notice.id}\r\n        modalcall=\"notice\"\r\n        title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n        day={day.format(\"YYYY-MM-DD\")}\r\n      >\r\n        {notice.notice_events\r\n          .filter(\r\n            (notice_event) => notice_event.date === day.format(\"YYYY-MM-DD\")\r\n          )\r\n          .map((notice_event, index) => (\r\n            <NoticeEventSpan\r\n              key={notice_event.id}\r\n              notice_event={notice_event}\r\n              day={day}\r\n            />\r\n          ))}\r\n      </EventButton>\r\n      <GeoItajaiButton\r\n        codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n      />\r\n      <MapButton\r\n        address={\r\n          notice.imovel\r\n            ? notice.imovel.logradouro +\r\n              \",\" +\r\n              notice.imovel.numero +\r\n              \"-\" +\r\n              notice.imovel.bairro +\r\n              \"-itajaí\"\r\n            : \"\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoticeEventButton = ({ notice, day }) => {\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const completeTask = (notice_event) => {\r\n    notice_event.concluded = !notice_event.concluded;\r\n    dispatch(actionCRUDNotice.update(notice));\r\n  };\r\n\r\n  return notice.notice_events\r\n    .filter(\r\n      (notice_event) => notice_event.deadline_date === day.format(\"YYYY-MM-DD\")\r\n    )\r\n    .map((notice_event) => {\r\n      let notice_event_type = getNoticeEventType(notice_event);\r\n      if (notice_event_type) {\r\n        if (notice_event_type.show_deadline) {\r\n          return (\r\n            notice_event.deadline_date === day.format(\"YYYY-MM-DD\") && (\r\n              <div\r\n                key={notice_event.id}\r\n                style={{\r\n                  backgroundColor: getNoticeEventType(notice_event)\r\n                    ? getNoticeEventType(notice_event).css_color\r\n                    : \"blue\",\r\n                }}\r\n                className={\r\n                  \"row no-gutters event user-select-none text-truncate\" +\r\n                  (notice_event.concluded ? \" concluded\" : \"\")\r\n                }\r\n              >\r\n                <EventButton\r\n                  notice_id={notice.id}\r\n                  modalcall=\"notice\"\r\n                  title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n                  day={day.format(\"YYYY-MM-DD\")}\r\n                >\r\n                  <NoticeEventSpan notice_event={notice_event} day={day} />\r\n                </EventButton>\r\n                <CompleteButton\r\n                  concluded={notice_event.concluded}\r\n                  onclick={\r\n                    isOwner ? () => completeTask(notice_event) : () => {}\r\n                  }\r\n                />\r\n                <GeoItajaiButton\r\n                  codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n                />\r\n                <MapButton\r\n                  address={\r\n                    notice.imovel\r\n                      ? notice.imovel.logradouro +\r\n                        \",\" +\r\n                        notice.imovel.numero +\r\n                        \"-\" +\r\n                        notice.imovel.bairro +\r\n                        \"-itajaí\"\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </div>\r\n            )\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n};\r\n\r\n// deprecated\r\nconst NoticeEvent = ({ notice, day }) => {\r\n  if (notice.date === day.format(\"YYYY-MM-DD\")) {\r\n    return <NoticeButton notice={notice} day={day} />;\r\n  } else {\r\n    return <NoticeEventButton notice={notice} day={day} />;\r\n  }\r\n};\r\n\r\nexport default NoticeEvent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CompleteButton,\r\n  MapButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n} from \"./common\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSurveyEventType } from \"./utils\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\n\r\nconst SurveyEventSpan = ({ survey }) => {\r\n  let survey_event_type = getSurveyEventType(survey);\r\n  if (survey && survey_event_type) {\r\n    return (\r\n      <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n        {\"V. \" + survey_event_type.short_name + \": \"}\r\n        {survey.identification !== null && survey.identification}\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nconst SurveyEventButton = ({ survey, day }) => {\r\n  let survey_event_type = getSurveyEventType(survey);\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && survey !== undefined) {\r\n      setIsOwner(authuser.id === survey.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, survey]);\r\n\r\n  const completeTask = () => {\r\n    survey.concluded = !survey.concluded;\r\n    dispatch(actionCRUDSurvey.update(survey));\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: survey_event_type\r\n          ? survey_event_type.css_color\r\n          : \"green\",\r\n      }}\r\n      className={\r\n        \"row no-gutters event user-select-none text-truncate \" +\r\n        (survey.concluded ? \" concluded\" : \"\")\r\n      }\r\n    >\r\n      <EventButton\r\n        survey_id={survey.id}\r\n        modalcall=\"survey\"\r\n        title={survey.imovel ? survey.imovel.name_string : \"\"}\r\n        day={day.format(\"YYYY-MM-DD\")}\r\n      >\r\n        <SurveyEventSpan survey={survey} />\r\n      </EventButton>\r\n      <CompleteButton\r\n        concluded={survey.concluded}\r\n        onclick={isOwner ? () => completeTask() : () => {}}\r\n      />\r\n      <GeoItajaiButton\r\n        codigo_lote={survey.imovel ? survey.imovel.codigo_lote : \"\"}\r\n      />\r\n      <MapButton\r\n        address={\r\n          survey.imovel\r\n            ? survey.imovel.logradouro +\r\n              \",\" +\r\n              survey.imovel.numero +\r\n              \"-\" +\r\n              survey.imovel.bairro +\r\n              \"-itajaí\"\r\n            : \"\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SurveyEvent = ({ survey, day }) => {\r\n  return <SurveyEventButton survey={survey} day={day} />;\r\n};\r\n\r\nexport default SurveyEvent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Day.css\";\r\nimport { NoticeButton, NoticeEventButton } from \"./NoticeEvent\";\r\nimport SurveyEvent from \"./SurveyEvent\";\r\nimport moment from \"moment\";\r\nimport {\r\n  filterNoticebyDateStart,\r\n  filterNoticebyDateDeadline,\r\n  filterSurveyByDate,\r\n  filterActivityByDate,\r\n} from \"./utils\";\r\n\r\nconst Day = ({ day, momentdate }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n\r\n  const notices = useSelector((state) =>\r\n    state.notice.notices.notices\r\n      .filter((notice) => {\r\n        return notice.owner === currentUser.id;\r\n      })\r\n      .filter(filterNoticebyDateStart(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const notices_deadline = useSelector((state) =>\r\n    state.notice.notices.notices\r\n      .filter((notice) => {\r\n        return notice.owner === currentUser.id;\r\n      })\r\n      .filter(filterNoticebyDateDeadline(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const surveys = useSelector((state) =>\r\n    state.survey.surveys.surveys\r\n      .filter((survey) => {\r\n        return survey.owner === currentUser.id;\r\n      })\r\n      .filter(filterSurveyByDate(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const activity = useSelector((state) =>\r\n    state.activity.activitys.activitys\r\n      .filter((activity) => {\r\n        return activity.owner === currentUser.id;\r\n      })\r\n      .find(filterActivityByDate(day.format(\"YYYY-MM-DD\")))\r\n  );\r\n\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && activity !== undefined) {\r\n      setIsOwner(authuser.id === activity.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, activity]);\r\n\r\n  if (!momentdate.isSame(day, \"month\")) {\r\n    return (\r\n      <td id={day.format(\"YYYY-MM-DD\")} className=\"opacity-4\">\r\n        <div className=\"text-right pb-1\">\r\n          <button className=\"btn btn-circle btn-secondary disabled\">\r\n            {day.format(\"DD\").toString()}\r\n          </button>\r\n        </div>\r\n      </td>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <td\r\n      id={day.format(\"YYYY-MM-DD\")}\r\n      className={day.isSame(moment(), \"day\") ? \"bg-dark\" : \"\"}\r\n    >\r\n      <div className=\"text-right pb-1\">\r\n        <button\r\n          className={\r\n            \"btn btn-circle\" + (activity ? \" btn-primary\" : \" btn-secondary\")\r\n          }\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalEvent\"\r\n          data-modalcall={\r\n            isOwner\r\n              ? activity !== undefined\r\n                ? \"none\"\r\n                : \"none\"\r\n              : \"activity\"\r\n          }\r\n          data-notice_id=\"0\"\r\n          data-survey_id=\"0\"\r\n          data-activity_id={activity !== undefined ? activity.id : \"0\"}\r\n          data-day={day.format(\"YYYY-MM-DD\")}\r\n          disabled={\r\n            activity !== undefined || authuser.id === currentUser.id\r\n              ? \"\"\r\n              : \"disabled\"\r\n          }\r\n        >\r\n          {day.format(\"DD\").toString()}\r\n        </button>\r\n      </div>\r\n      {notices.map((notice) => (\r\n        <NoticeButton key={notice.id} notice={notice} day={day} />\r\n      ))}\r\n      {notices_deadline.map((notice) => (\r\n        <NoticeEventButton key={notice.id} notice={notice} day={day} />\r\n      ))}\r\n      {surveys.map((survey) => (\r\n        <SurveyEvent key={survey.id} survey={survey} day={day} />\r\n      ))}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDActivity } from \"../../actions/activity/actionActivity\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport \"./Calendario.css\";\r\n\r\nimport buildCalendar from \"./utils\";\r\n\r\nimport Caption from \"./Caption\";\r\nimport Day from \"./Day\";\r\n\r\nconst Calendario = ({ momentdate }) => {\r\n  const [calendar, setCalendar] = useState([]);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    moment.locale(\"pt-br\");\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    const params = {\r\n      start_date: momentdate\r\n        .clone()\r\n        .startOf(\"month\")\r\n        .startOf(\"week\")\r\n        .format(\"YYYY-MM-DD\"),\r\n      end_date: momentdate\r\n        .clone()\r\n        .endOf(\"month\")\r\n        .endOf(\"week\")\r\n        .format(\"YYYY-MM-DD\"),\r\n    };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDActivity.read(params));\r\n\r\n    setCalendar(buildCalendar(momentdate));\r\n  }, [dispatch, momentdate]);\r\n\r\n  return (\r\n    <section>\r\n      <table id=\"calendar\" className=\"table table-light table-bordered\">\r\n        <Caption momentdate={momentdate} />\r\n        <thead className=\"thead-dark\">\r\n          <tr className=\"text-center text-uppercase\">\r\n            {moment.weekdays().map((d, index) => (\r\n              <th key={\"week\" + index} className=\"weekdays \">\r\n                {d}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {calendar.map((week, weekindex) => (\r\n            <tr key={\"week\" + weekindex}>\r\n              {week.map((day) => (\r\n                <Day\r\n                  key={day.format(\"YYYY-MM-DD\")}\r\n                  day={day}\r\n                  momentdate={momentdate}\r\n                >\r\n                  {day.format(\"D\").toString()}\r\n                </Day>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Calendario;\r\n","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\n\r\nexport const required = (value) => (value ? undefined : \"Campo obrigatório\");\r\n\r\nexport const Error = ({ name }) => (\r\n  <Field name={name} subscription={{ error: true, touched: true }}>\r\n    {({ meta: { error, touched } }) =>\r\n      error && touched ? (\r\n        <div className=\"invalid-feedback d-block\">{error.toString()}</div>\r\n      ) : null\r\n    }\r\n  </Field>\r\n);\r\n\r\nexport const InputFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n    delete props.className;\r\n  }\r\n  let classNameDiv = \"form-group mb-0\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv}>\r\n      {props.label && (\r\n        <label htmlFor={\"id_\" + props.name} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"input\"\r\n        type=\"text\"\r\n        {...props}\r\n        className={className}\r\n        id={\"id_\" + props.name}\r\n        name={props.name}\r\n      />\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CheckboxFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"custom-control-input\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n    delete props.className;\r\n  }\r\n  let classNameDiv = \"custom-control custom-checkbox\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv} title={props.tooltip}>\r\n      <Field\r\n        component=\"input\"\r\n        type=\"checkbox\"\r\n        {...props}\r\n        id={\"id_\" + props.name}\r\n        name={props.name}\r\n        className={className}\r\n      />\r\n      {props.label && (\r\n        <label className=\"custom-control-label\" htmlFor={\"id_\" + props.name}>\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SelectFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n  }\r\n  let classNameDiv = \"form-group mb-0\";\r\n  if (props.classNameDiv !== undefined) {\r\n    classNameDiv += \" \" + props.classNameDiv;\r\n    delete props.classNameDiv;\r\n  }\r\n  return (\r\n    <div className={isHidden ? \"d-none\" : classNameDiv}>\r\n      {props.label && (\r\n        <label htmlFor={\"id_\" + props.name} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"select\"\r\n        {...props}\r\n        className={className}\r\n        id={\"id_\" + props.name}\r\n        name={props.name}\r\n      />\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ComboboxFormGroup = ({ isHidden = false, ...props }) => {\r\n  let className = \"form-control form-control-sm\";\r\n  if (props.className !== undefined) {\r\n    className += \" \" + props.className;\r\n  }\r\n  const { children, ...childprops } = props;\r\n  return (\r\n    <div className={props.isHidden ? \"d-none\" : \"form-group mb-0\"}>\r\n      {props.label && (\r\n        <label htmlFor={\"id_\" + props.name} className=\"mb-0\">\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <Field\r\n        component=\"input\"\r\n        type=\"text\"\r\n        {...childprops}\r\n        className={className}\r\n        id={\"id_\" + props.name}\r\n        name={props.name}\r\n        list={\"id_\" + props.name + \"_list\"}\r\n      />\r\n      <datalist id={\"id_\" + props.name + \"_list\"}>{children}</datalist>\r\n      <Error name={props.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ToogleFieldSet = ({ isDisabled = false, ...props }) => {\r\n  if (isDisabled) {\r\n    return <fieldset disabled>{props.children}</fieldset>;\r\n  } else {\r\n    return <fieldset>{props.children}</fieldset>;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport { CheckboxFormGroup } from \"./Forms\";\r\n\r\nconst CommonModalFooter = ({\r\n  isDisabled = false,\r\n  canDelete = false,\r\n  canCopy = false,\r\n  onDelete,\r\n  form,\r\n}) => {\r\n  return (\r\n    <div className=\"modal-footer\">\r\n      {canDelete && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"mr-auto btn btn-danger font-weight-bold\"\r\n          onClick={onDelete}\r\n          disabled={isDisabled}\r\n        >\r\n          Deletar\r\n        </button>\r\n      )}\r\n      {form && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary font-weight-bold\"\r\n          onClick={() => {\r\n            form.reset();\r\n          }}\r\n          title=\"Recarregar informações iniciais\"\r\n          disabled={isDisabled}\r\n        >\r\n          <i className=\"fa fa-refresh\" />\r\n        </button>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-secondary font-weight-bold\"\r\n        data-bs-dismiss=\"modal\"\r\n      >\r\n        Fechar\r\n      </button>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary font-weight-bold\"\r\n        disabled={isDisabled}\r\n      >\r\n        Salvar\r\n      </button>\r\n      {canCopy && (\r\n        <CheckboxFormGroup\r\n          name=\"criarnovo\"\r\n          label=\"Criar novo\"\r\n          tooltip=\"Salva como um novo evento\"\r\n          disabled={isDisabled}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommonModalFooter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Error, InputFormGroup } from \"./Forms\";\r\nimport \"./AutocompleteImovel.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport formatString from \"format-string-by-pattern\";\r\nimport { actionCRUDImovel } from \"../../actions/imovel/actionImovel\";\r\nimport { OnFocus, OnBlur, OnChange } from \"react-final-form-listeners\";\r\nimport { GeoItajaiButton, IconButton, MapButton } from \"../calendario/common\";\r\nimport { useCallback } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\nimport axios from \"axios\";\r\nimport { createMessage } from \"../../actions/actionMessages\";\r\n\r\nexport const SearchFromString = (value, imovel_id = null) => {\r\n  let all = /^[\\d.]+-(.+)$/g;\r\n  // let address = /^[^-]+$/g;\r\n  let codigo_insc = /^[\\d.]+$/g;\r\n\r\n  let bairro = \"\";\r\n  let complemento = \"\";\r\n  let number = \"\";\r\n  let street = \"\";\r\n  let codigo = \"\";\r\n  let inscricao_imobiliaria = \"\";\r\n\r\n  if (all.test(value)) {\r\n    let minusIndex = value.indexOf(\"-\");\r\n    codigo = value.slice(0, minusIndex).trim();\r\n    street = value.slice(minusIndex + 1).trim();\r\n  } else {\r\n    if (codigo_insc.test(value)) {\r\n      codigo = value;\r\n    } else {\r\n      street = value;\r\n    }\r\n  }\r\n\r\n  if (codigo) {\r\n    codigo = codigo.replace(/\\D/g, \"\");\r\n    inscricao_imobiliaria = formatString(\"999.999.99.9999.9999.999\", codigo);\r\n  }\r\n  if (street) {\r\n    let lastMinusIndex = street.lastIndexOf(\"-\");\r\n\r\n    if (lastMinusIndex > 0) {\r\n      bairro = street.slice(lastMinusIndex + 1).trim();\r\n      street = street.slice(0, lastMinusIndex).trim();\r\n    }\r\n    let firstCommaIndex = street.indexOf(\",\");\r\n    if (firstCommaIndex > 0) {\r\n      number = street.slice(firstCommaIndex + 1);\r\n      let secondCommaIndex = number.indexOf(\",\");\r\n      if (secondCommaIndex > 0) {\r\n        complemento = number.slice(secondCommaIndex + 1).trim();\r\n        number = number.slice(0, secondCommaIndex);\r\n      }\r\n      //number = number.replace(/(?<!\\/)[nN]|[º°]/g, \"\").trim();\r\n      if (!number.includes(\"s/n\")) {\r\n        number = number.replace(/[nN]|[º°]/g, \"\").trim();\r\n      } else {\r\n        number = number.trim();\r\n      }\r\n      //number = number.trim();\r\n      street = street.slice(0, firstCommaIndex).trim();\r\n    }\r\n  }\r\n\r\n  return {\r\n    id: imovel_id,\r\n    bairro: bairro,\r\n    complemento: complemento,\r\n    number: number,\r\n    street: street,\r\n    codigo: codigo,\r\n    inscricao_imobiliaria: inscricao_imobiliaria,\r\n  };\r\n};\r\n\r\nconst AutocompleteImovel = ({\r\n  name,\r\n  name_string,\r\n  label,\r\n  form,\r\n  className,\r\n  showResult = true,\r\n  ...props\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const imoveis = useSelector((state) => state.imovel.imoveis.imoveis);\r\n  const [currentImovel, setCurrentImovel] = useState();\r\n  const [showAutocomplete, setShowAutocomplete] = useState(false);\r\n  const [blurTimer, setBlurTimer] = useState(null);\r\n\r\n  const [showNewCEP, setShowNewCEP] = useState(false);\r\n  const [logradouroBusca, setLogradouroBusca] = useState(\"\");\r\n  const [CEPResults, setCEPResults] = useState();\r\n\r\n  useEffect(() => {\r\n    setCurrentImovel(form.getFieldState(name).value);\r\n    if (form.getFieldState(name_string).pristine) {\r\n      setShowAutocomplete(false);\r\n    }\r\n  }, [form, name, name_string]);\r\n\r\n  const debouncedImovelSearch = useCallback(\r\n    debounce((value) => {\r\n      if (form.getFieldState(name).value) {\r\n        let params = SearchFromString(value, form.getFieldState(name).value.id);\r\n        dispatch(actionCRUDImovel.read(params));\r\n      }\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleValueChange = (value, previous) => {\r\n    if (value.length > 3) {\r\n      debouncedImovelSearch(value);\r\n      handleFocus(true);\r\n    } else {\r\n      handleFocus(false);\r\n    }\r\n    if (value.length === 0) {\r\n      form.mutators.setValue(name, null);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (value) => {\r\n    if (\r\n      value &&\r\n      form.getFieldState(name_string).value !== undefined &&\r\n      form.getFieldState(name_string).value.length > 3\r\n    ) {\r\n      clearTimeout(blurTimer);\r\n      setShowAutocomplete(true);\r\n    } else {\r\n      setBlurTimer(\r\n        setTimeout(() => {\r\n          setShowAutocomplete(false);\r\n        }, 100)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleImovelChoose = (event) => {\r\n    handleFocus(false);\r\n    setShowNewCEP(false);\r\n    if (imoveis) {\r\n      form.mutators.setValue(\r\n        name,\r\n        imoveis.find(\r\n          (imovel) => imovel.id.toString() === event.target.dataset.imovel_id\r\n        )\r\n      );\r\n      form.mutators.setValue(name + \"_id\", event.target.dataset.imovel_id);\r\n    }\r\n  };\r\n\r\n  const handleBuscaCEP = () => {\r\n    const header = {\r\n      crossDomain: true,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params: { uf: \"SC\", localidade: \"Itajai\", logradouro: logradouroBusca },\r\n    };\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/buscacep/\", header)\r\n      .then((res) => {\r\n        if (res.data.total > 0) {\r\n          setCEPResults(res.data.dados);\r\n        } else {\r\n          dispatch(createMessage({ INFO: res.data.mensagem }));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleSaveCEP = () => {\r\n    if (form.getFieldState(\"newCEP\")) {\r\n      form.mutators.setValue(\r\n        name + \".cep\",\r\n        formatString(\"99.999-999\", form.getFieldState(\"newCEP\").value)\r\n      );\r\n      dispatch(actionCRUDImovel.update(form.getFieldState(name).value));\r\n    }\r\n    setShowNewCEP(false);\r\n  };\r\n\r\n  if (className !== undefined) {\r\n    className += \" form-control form-control-sm\";\r\n  } else {\r\n    className = \"form-control form-control-sm\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group mb-0\">\r\n      {label && (\r\n        <label htmlFor={\"id_\" + name} className=\"mb-0\">\r\n          {label}{\" \"}\r\n          <i\r\n            className=\"fa fa-question fa-sm\"\r\n            aria-hidden=\"true\"\r\n            title='Digite o codigo do imovel, insc. imobiliária, ou endereço &#013; ex.: &#013; endereço: \"logradouro,numero,complemento-bairro\" &#013; codigo do imóvel: \"123456\" &#013; insc. imobiliária (com ou sem pontos): \"123.456...\" &#013; Após terminar de digitar espere por meio segundo para a pesquisar ser realizada'\r\n          />\r\n        </label>\r\n      )}\r\n\r\n      <div className=\"autocomplete\">\r\n        <Field\r\n          component=\"input\"\r\n          type=\"text\"\r\n          {...props}\r\n          className={className}\r\n          id={\"id_\" + name_string}\r\n          name={name_string}\r\n          autoComplete=\"off\"\r\n        />\r\n        <OnChange name=\"imovel.name_string\">\r\n          {(value, previous) => {\r\n            handleValueChange(value, previous);\r\n          }}\r\n        </OnChange>\r\n        <OnFocus name=\"imovel.name_string\">\r\n          {() => {\r\n            handleFocus(true);\r\n          }}\r\n        </OnFocus>\r\n        <OnBlur name=\"imovel.name_string\">\r\n          {() => {\r\n            handleFocus(false);\r\n          }}\r\n        </OnBlur>\r\n        <Field component=\"input\" type=\"hidden\" id={\"id_\" + name} name={name} />\r\n        <div className={showAutocomplete ? \"autocomplete-items\" : \"d-none\"}>\r\n          {imoveis &&\r\n            imoveis.map((imovel, index) => (\r\n              <div\r\n                key={index}\r\n                data-imovel_id={imovel.id}\r\n                data-imovel_value={imovel.name_string}\r\n                onClick={handleImovelChoose}\r\n                className={\r\n                  currentImovel\r\n                    ? imovel.name_string === currentImovel.name_string\r\n                      ? \"autocomplete-active\"\r\n                      : \"\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                {imovel.name_string}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <Error name={name_string} />\r\n      {showResult && currentImovel && (\r\n        <ul className=\"list-group p-1 m-2 autocomplete-resultlist border\">\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            razao_social: {currentImovel.razao_social}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Código do imóvel: {currentImovel.codigo}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Insc. Imobiliária: {currentImovel.inscricao_imobiliaria}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Contribuinte: {currentImovel.numero_contribuinte}\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            Endereço: {currentImovel.logradouro + \", \" + currentImovel.numero}\r\n            {currentImovel.complemento ? \", \" + currentImovel.complemento : \"\"}\r\n            {\" - \"}\r\n            Bairro: {currentImovel.bairro}\r\n            {\" - \"}CEP:{\" \"}\r\n            {currentImovel.cep && formatString(\"99.999-999\", currentImovel.cep)}\r\n            <div className=\"row no-gutters d-inline-flex float-right\">\r\n              <IconButton\r\n                icon={showNewCEP ? \"fa-envelope-open-o\" : \"fa-envelope-o\"}\r\n                onclick={() => {\r\n                  setLogradouroBusca(currentImovel.logradouro);\r\n                  setCEPResults();\r\n                  setShowNewCEP(!showNewCEP);\r\n                  form.mutators.setValue(\r\n                    \"newCEP\",\r\n                    formatString(\"99.999-999\", currentImovel.cep)\r\n                  );\r\n                }}\r\n                title=\"Autalizar CEP\"\r\n              />\r\n              <GeoItajaiButton codigo_lote={currentImovel.codigo_lote} />\r\n              <MapButton\r\n                address={\r\n                  currentImovel.logradouro +\r\n                  \",\" +\r\n                  currentImovel.numero +\r\n                  \"-\" +\r\n                  currentImovel.bairro +\r\n                  \"-itajaí\"\r\n                }\r\n              />\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item p-0 border-0\">\r\n            <div className={showNewCEP ? \"collapse show p-1\" : \"collapse\"}>\r\n              <div className=\"card card-body d-block p-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-sm\"\r\n                  maxLength=\"255\"\r\n                  value={logradouroBusca}\r\n                  placeholder=\"Logradouro sem número e sem bairro\"\r\n                  onChange={(event) => {\r\n                    setLogradouroBusca(event.target.value);\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary btn-sm my-1\"\r\n                  onClick={() => {\r\n                    handleBuscaCEP();\r\n                  }}\r\n                >\r\n                  Buscar CEP <i className=\"fa fa-search\"></i>\r\n                </button>\r\n                <div className=\"list-group border-0\">\r\n                  {CEPResults &&\r\n                    CEPResults.map((result, index) => (\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"list-group-item list-group-item-action p-1 \"\r\n                        key={index}\r\n                        onClick={() => {\r\n                          form.mutators.setValue(\r\n                            \"newCEP\",\r\n                            formatString(\"99.999-999\", result.cep)\r\n                          );\r\n                        }}\r\n                      >\r\n                        <span>\r\n                          {result.logradouroDNEC}\r\n                          {\" - \"}\r\n                          {result.bairro}\r\n                          {\": \"}\r\n                          {result.cep}\r\n                        </span>\r\n                      </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"newCEP\"\r\n                    label=\"Novo CEP:\"\r\n                    maxLength=\"255\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    parse={formatString(\"99.999-999\")}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={() => {\r\n                      handleSaveCEP();\r\n                    }}\r\n                  >\r\n                    Salvar CEP\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutocompleteImovel;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  actionCRUDNotice,\r\n  getLatest,\r\n} from \"../../../actions/notice/actionNotice\";\r\nimport { Form } from \"react-final-form\";\r\nimport arrayMutators from \"final-form-arrays\";\r\nimport { FieldArray } from \"react-final-form-arrays\";\r\nimport moment from \"moment\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport {\r\n  getNoticeEventType,\r\n  filterOnlyInArrayByID,\r\n  getFirstVA,\r\n} from \"../utils\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport AutocompleteImovel from \"../../common/AutocompleteImovel\";\r\nimport formatString from \"format-string-by-pattern\";\r\nimport {\r\n  getnoticereportdocx,\r\n  getVArequestdocx,\r\n} from \"../../../actions/actionFiles\";\r\n\r\nconst FormNoticeFine = ({ fields, name, index, isOwner }) => {\r\n  return (\r\n    <div key={name} className=\"row px-4 py-1 form-inline\">\r\n      <InputFormGroup\r\n        name={name + \".identification\"}\r\n        label=\"Nº:\"\r\n        size=\"10\"\r\n        maxLength=\"255\"\r\n        placeholder=\"identificação\"\r\n        className=\"mx-1\"\r\n      />\r\n      <InputFormGroup\r\n        name={name + \".date\"}\r\n        label=\"Data:\"\r\n        type=\"date\"\r\n        className=\"mx-1\"\r\n      />\r\n      {isOwner && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger border-0 btn-sm\"\r\n          onClick={() => fields.remove(index)}\r\n        >\r\n          <i className=\"fa fa-trash fa-sm\"></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormNoticeEvent = ({ fields, name, index, push, isOwner }) => {\r\n  return (\r\n    <div>\r\n      <hr className=\"m-1\" />\r\n      <div className=\"row text-center\">\r\n        <span className=\"col text-uppercase w-100 font-weight-bold text-nowrap inline-block\">\r\n          {getNoticeEventType(fields.value[index]).name}\r\n        </span>\r\n        {isOwner && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger border-0\"\r\n            onClick={() => fields.remove(index)}\r\n          >\r\n            <i className=\"fa fa-trash fa-lg\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n      {getNoticeEventType(fields.value[index]) !== undefined && (\r\n        <div className=\"row\">\r\n          <div className=\"d-flex flex-row\">\r\n            <div className=\"form-inline\">\r\n              <InputFormGroup\r\n                name={name + \"date\"}\r\n                label=\"Data:\"\r\n                type=\"date\"\r\n                className=\"mx-1\"\r\n                classNameDiv=\"m-1\"\r\n                validate={required}\r\n              />\r\n              <InputFormGroup\r\n                name={name + \".identification\"}\r\n                label=\"Nº:\"\r\n                type=\"text\"\r\n                size=\"15\"\r\n                maxLength=\"255\"\r\n                placeholder=\"identificação\"\r\n                className=\"mx-1\"\r\n                classNameDiv=\"m-1\"\r\n              />\r\n              {getNoticeEventType(fields.value[index]).show_report_number && (\r\n                <InputFormGroup\r\n                  name={name + \"report_number\"}\r\n                  label=\"RF:\"\r\n                  type=\"text\"\r\n                  size=\"10\"\r\n                  maxLength=\"255\"\r\n                  className=\"mx-1\"\r\n                  classNameDiv=\"m-1\"\r\n                />\r\n              )}\r\n              {getNoticeEventType(fields.value[index]).show_concluded && (\r\n                <CheckboxFormGroup\r\n                  name={name + \".concluded\"}\r\n                  label=\"Concluído\"\r\n                  className=\"mx-1\"\r\n                  classNameDiv=\"m-1\"\r\n                />\r\n              )}\r\n              {getNoticeEventType(fields.value[index]).show_deadline && (\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name={name + \".deadline\"}\r\n                    label=\"Prazo (dias):\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"999\"\r\n                    placeholder=\"prazo\"\r\n                    className=\"mx-1\"\r\n                    classNameDiv=\"m-1\"\r\n                    validate={required}\r\n                  />\r\n                  <CheckboxFormGroup\r\n                    name={name + \".deadline_working_days\"}\r\n                    label=\"Apenas dias úteis\"\r\n                    className=\"mx-1\"\r\n                    classNameDiv=\"m-1\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {getNoticeEventType(fields.value[index]).show_fine && (\r\n            <Fragment>\r\n              <div className=\"row text-left m-1\">\r\n                <span className=\"col-lg w-100\">Multas:</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-primary btn-sm\"\r\n                  onClick={() =>\r\n                    push(name + \".notice_fines\", {\r\n                      date: moment().format(\"YYYY-MM-DD\"),\r\n                    })\r\n                  }\r\n                >\r\n                  Adicionar multa\r\n                </button>\r\n              </div>\r\n              <div className=\"row pr-1 pb-1 w-100 justify-content-center\">\r\n                <FieldArray name={name + \".notice_fines\"}>\r\n                  {({ fields }) =>\r\n                    fields.map((name, index) => (\r\n                      <FormNoticeFine\r\n                        key={name}\r\n                        fields={fields}\r\n                        name={name}\r\n                        index={index}\r\n                        isOwner={isOwner}\r\n                      />\r\n                    ))\r\n                  }\r\n                </FieldArray>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst requiredArray = (value) =>\r\n  value && value.length > 0 ? undefined : \"Required\";\r\n\r\nconst FormNotice = ({ notice, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(notice.date).format(\"DD/MM/YYYY\");\r\n\r\n    for (let index = 0; index < notice.notice_events.length; index++) {\r\n      confirm_alert += newLine;\r\n      confirm_alert += \"Nº: \" + notice.notice_events[index].identification;\r\n      confirm_alert +=\r\n        \" (\" +\r\n        notice_event_types.find(\r\n          (element) =>\r\n            element.id === notice.notice_events[index].notice_event_type\r\n        ).name +\r\n        \")\";\r\n    }\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNotice.delete(notice.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = (values) => {\r\n    let removedNoticeEvents = notice.notice_events.filter(\r\n      filterOnlyInArrayByID(values.notice_events)\r\n    );\r\n    if (removedNoticeEvents.length === 0) {\r\n      return true;\r\n    }\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Salvando este Auto você estará removendo:\";\r\n    for (let index = 0; index < removedNoticeEvents.length; index++) {\r\n      confirm_alert += newLine;\r\n      confirm_alert += \"Nº: \" + removedNoticeEvents[index].identification;\r\n      confirm_alert +=\r\n        \" (\" +\r\n        notice_event_types.find(\r\n          (element) =>\r\n            element.id === removedNoticeEvents[index].notice_event_type\r\n        ).name +\r\n        \")\";\r\n    }\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Gostaria de continuar?\";\r\n\r\n    return window.confirm(confirm_alert);\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        dispatch(actionCRUDNotice.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          dispatch(actionCRUDNotice.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={notice}\r\n      onSubmit={onSubmit}\r\n      mutators={{\r\n        ...arrayMutators,\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        form: {\r\n          mutators: { push },\r\n        },\r\n        form,\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <ToogleFieldSet isDisabled={true}>\r\n                <div className=\"row no-gutters form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    validate={required}\r\n                    className=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </div>\r\n              </ToogleFieldSet>\r\n              <AutocompleteImovel\r\n                name=\"imovel\"\r\n                name_string=\"imovel.name_string\"\r\n                label=\"Imóvel:\"\r\n                form={form}\r\n                disabled={!isOwner}\r\n              />\r\n              {form &&\r\n                notice &&\r\n                notice.id === 0 &&\r\n                form.getFieldState(\"imovel\") !== undefined &&\r\n                form.getFieldState(\"imovel\").value && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        getLatest(form.getFieldState(\"imovel\").value.id)\r\n                      );\r\n                    }}\r\n                  >\r\n                    Carregar Autos passados deste Imóvel\r\n                  </button>\r\n                )}\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"document\"\r\n                  label=\"CPF/CNPJ:\"\r\n                  maxLength=\"255\"\r\n                  parse={(value) => {\r\n                    if (!value) return value;\r\n                    const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                    if (value.length > 14) {\r\n                      return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                    } else {\r\n                      return formatString(\"999.999.999-99\", onlyNumbers);\r\n                    }\r\n                  }}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"address\"\r\n                  label=\"Endereço:\"\r\n                  maxLength=\"255\"\r\n                />\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"3\"\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\"col-auto\">Adicionar:</div>\r\n                  <div className=\"col text-left\">\r\n                    {notice_event_types.map((notice_event_type, index) => (\r\n                      <button\r\n                        key={index}\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-primary btn-sm m-1\"\r\n                        onClick={() =>\r\n                          push(\"notice_events\", {\r\n                            date: day.format(\"YYYY-MM-DD\"),\r\n                            deadline: notice_event_type.default_deadline,\r\n                            deadline_working_days:\r\n                              notice_event_type.default_deadline_working_days,\r\n                            concluded: notice_event_type.default_concluded,\r\n                            notice_event_type: notice_event_type.id,\r\n                          })\r\n                        }\r\n                      >\r\n                        {notice_event_type.name}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </ToogleFieldSet>\r\n              <div className={notice && notice.id === 0 ? \"row d-none\" : \"row\"}>\r\n                <div className=\"col text-left\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-sm m-1\"\r\n                    onClick={() => {\r\n                      dispatch(getnoticereportdocx(notice));\r\n                    }}\r\n                    disabled={notice && notice.imovel ? false : true}\r\n                  >\r\n                    Gerar Relatório de Fiscalização\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-sm m-1\"\r\n                    onClick={() => {\r\n                      dispatch(getVArequestdocx(getFirstVA(notice)));\r\n                    }}\r\n                    disabled={notice && notice.imovel ? getFirstVA(notice) ? false : true : true}\r\n                  >\r\n                    Gerar Pedido de VA\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <div className=\"container\">\r\n                  <FieldArray name=\"notice_events\" validate={requiredArray}>\r\n                    {({ fields, meta: { touched } }) => (\r\n                      <div>\r\n                        {fields.map((name, index) => (\r\n                          <FormNoticeEvent\r\n                            key={name}\r\n                            fields={fields}\r\n                            name={name}\r\n                            index={index}\r\n                            push={push}\r\n                            isOwner={isOwner}\r\n                          />\r\n                        ))}\r\n                        {fields.length === 0 && touched ? (\r\n                          <div className=\"invalid-feedback d-block\">\r\n                            É necessario adicionar ao menos um Auto ou VA\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    )}\r\n                  </FieldArray>\r\n                </div>\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              notice !== undefined ? (notice.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={\r\n              notice !== undefined ? (notice.id !== 0 ? true : false) : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNotice;\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"./actionMessages\";\r\nimport { tokenConfig } from \"./actionAuth\";\r\nimport store from \"../store\";\r\n\r\nexport const getReportPDF = (values) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: values },\r\n    tokenConfig(getState)\r\n  );\r\n  let user = store\r\n    .getState()\r\n    .user.users.users.find(\r\n      (user) => user.id.toString() === values.user_id.toString()\r\n    );\r\n\r\n  let user_name = \"\";\r\n  if (user) {\r\n    user_name = user.first_name;\r\n    if (user.last_name) {\r\n      user_name += \" \" + user.last_name;\r\n    }\r\n    user_name += \"-\";\r\n  }\r\n  let fileName = \"relatório_mensal-\" + user_name + values.month + \".pdf\";\r\n  try {\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/reportpdf/\", headerWithValues)\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getSheetCSV = (values) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: values },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  let user = store\r\n    .getState()\r\n    .user.users.users.find(\r\n      (user) => user.id.toString() === values.user_id.toString()\r\n    );\r\n\r\n  let user_name = \"\";\r\n  if (user) {\r\n    user_name = user.first_name;\r\n    if (user.last_name) {\r\n      user_name += \" \" + user.last_name;\r\n    }\r\n    user_name += \"-\";\r\n  }\r\n  let fileName = \"planilha_mensal-\" + user_name + values.month + \".csv\";\r\n  try {\r\n    axios\r\n      .get(process.env.REACT_APP_API_URL + \"api/sheetcsv/\", headerWithValues)\r\n      .then((response) => {\r\n        const file = new Blob([response.data], { type: \"text/csv\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getnoticereportdocx = (notice) => (dispatch, getState) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    { responseType: \"blob\", params: { notice_id: notice.id } },\r\n    tokenConfig(getState)\r\n  );\r\n  let fileName = \"relatório de Fiscalização.docx\";\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/noticereportdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getVArequestdocx = (vistoriaAdministrativa) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let headerWithValues = Object.assign(\r\n    {},\r\n    {\r\n      responseType: \"blob\",\r\n      params: { vistoria_administrativa_id: vistoriaAdministrativa.id },\r\n    },\r\n    tokenConfig(getState)\r\n  );\r\n\r\n  let fileName = \"Pedido de VA.docx\";\r\n  try {\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_API_URL + \"api/varequestdocx/\",\r\n        headerWithValues\r\n      )\r\n      .then((response) => {\r\n        const file = new Blob([response.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        var fileLink = document.createElement(\"a\");\r\n        fileLink.href = fileURL;\r\n        //fileLink.target = \"_blank\";\r\n        fileLink.download = fileName;\r\n        fileLink.click();\r\n        URL.revokeObjectURL(fileURL);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(returnErrors(err));\r\n      });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDSurvey } from \"../../../actions/survey/actionSurvey\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport moment from \"moment\";\r\nimport AutocompleteImovel from \"../../common/AutocompleteImovel\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormSurvey = ({ survey, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && survey !== undefined) {\r\n      setIsOwner(authuser.id === survey.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, survey]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta Vistoria de \";\r\n    confirm_alert +=\r\n      survey_event_types.find(\r\n        (element) => element.id === survey.survey_event_type\r\n      ).name + \"?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Nº: \" + survey.identification;\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(survey.date).format(\"DD/MM/YYYY\");\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurvey.delete(survey.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        dispatch(actionCRUDSurvey.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          dispatch(actionCRUDSurvey.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={survey}\r\n      onSubmit={onSubmit}\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <ToogleFieldSet isDisabled={true}>\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    validate={required}\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </ToogleFieldSet>\r\n                <ToogleFieldSet isDisabled={!isOwner}>\r\n                  <InputFormGroup\r\n                    name=\"date\"\r\n                    label=\"Data:\"\r\n                    type=\"date\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  />\r\n                </ToogleFieldSet>\r\n              </div>\r\n              <AutocompleteImovel\r\n                name=\"imovel\"\r\n                name_string=\"imovel.name_string\"\r\n                label=\"Imóvel:\"\r\n                form={form}\r\n                disabled={!isOwner}\r\n              />\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"document\"\r\n                  label=\"CPF/CNPJ:\"\r\n                  maxLength=\"255\"\r\n                  parse={(value) => {\r\n                    if (!value) return value;\r\n                    const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                    if (value.length > 14) {\r\n                      return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                    } else {\r\n                      return formatString(\"999.999.999-99\", onlyNumbers);\r\n                    }\r\n                  }}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"address\"\r\n                  label=\"Endereço:\"\r\n                  maxLength=\"255\"\r\n                />\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"3\"\r\n                />\r\n                <div className=\"d-flex flex-row\">\r\n                  <div className=\"form-inline\">\r\n                    <InputFormGroup\r\n                      name=\"identification\"\r\n                      label=\"Identificação:\"\r\n                      maxLength=\"255\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    />\r\n                    <SelectFormGroup\r\n                      name=\"survey_event_type\"\r\n                      label=\"Tipo:\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                      validate={required}\r\n                    >\r\n                      <option value=\"\">---------</option>\r\n                      {survey_event_types.map((survey_event_type, index) => (\r\n                        <option\r\n                          key={survey_event_type.id}\r\n                          value={survey_event_type.id}\r\n                        >\r\n                          {survey_event_type.order} - {survey_event_type.name}\r\n                        </option>\r\n                      ))}\r\n                    </SelectFormGroup>\r\n                    <CheckboxFormGroup\r\n                      name=\"concluded\"\r\n                      label=\"Concluído\"\r\n                      className=\"m-1\"\r\n                      classNameDiv=\"mx-1\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              survey !== undefined ? (survey.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={\r\n              survey !== undefined ? (survey.id !== 0 ? true : false) : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSurvey;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCRUDActivity } from \"../../../actions/activity/actionActivity\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  SelectFormGroup,\r\n  ToogleFieldSet,\r\n  required,\r\n} from \"../../common/Forms\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport moment from \"moment\";\r\nimport { createMessage } from \"../../../actions/actionMessages\";\r\n\r\nconst FormActivity = ({ activity, day, isModalOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const activitys = useSelector((state) => state.activity.activitys.activitys);\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && activity !== undefined) {\r\n      setIsOwner(authuser.id === activity.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, activity]);\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta Atividade?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Data: \" + moment(activity.date).format(\"DD/MM/YYYY\");\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDActivity.delete(activity.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  const confirmSave = () => {\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let criarnovo = values.criarnovo;\r\n    delete values[\"criarnovo\"];\r\n    let closeModal = false;\r\n    let errormgs = {\r\n      ERROR: \"Apenas é permitido um registro de atividade por data\",\r\n    };\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0 || criarnovo) {\r\n        if (\r\n          activitys.filter(\r\n            (activity) =>\r\n              activity.date === values.date && activity.owner === values.owner\r\n          ).length > 0\r\n        ) {\r\n          dispatch(createMessage(errormgs));\r\n          return;\r\n        }\r\n        dispatch(actionCRUDActivity.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        if (confirmSave(values)) {\r\n          if (\r\n            activitys.filter(\r\n              (activity) =>\r\n                activity.id !== values.id &&\r\n                activity.date === values.date &&\r\n                activity.owner === values.owner\r\n            ).length > 0\r\n          ) {\r\n            dispatch(createMessage(errormgs));\r\n            return;\r\n          }\r\n          dispatch(actionCRUDActivity.update(values));\r\n          closeModal = true;\r\n        }\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalEvent\")).hide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={activity}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <ToogleFieldSet isDisabled={true}>\r\n                  <SelectFormGroup\r\n                    name=\"owner\"\r\n                    label=\"AFM:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  >\r\n                    <option value=\"\">---------</option>\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </ToogleFieldSet>\r\n                <ToogleFieldSet isDisabled={!isOwner}>\r\n                  <InputFormGroup\r\n                    name=\"date\"\r\n                    label=\"Data:\"\r\n                    type=\"date\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                    validate={required}\r\n                  />\r\n                </ToogleFieldSet>\r\n              </div>\r\n              <ToogleFieldSet isDisabled={!isOwner}>\r\n                <InputFormGroup\r\n                  name=\"description\"\r\n                  label=\"Descrição:\"\r\n                  component=\"textarea\"\r\n                  cols=\"40\"\r\n                  rows=\"20\"\r\n                  validate={required}\r\n                />\r\n              </ToogleFieldSet>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            isDisabled={!isOwner}\r\n            canDelete={\r\n              activity !== undefined\r\n                ? activity.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={\r\n              activity !== undefined\r\n                ? activity.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormActivity;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormNotice from \"./FormNotice\";\r\nimport FormSurvey from \"./FormSurvey\";\r\nimport FormActivity from \"./FormActivity\";\r\nimport store from \"../../../store\";\r\nimport moment from \"moment\";\r\n\r\nconst ModalEventTab = ({ active, name }) => {\r\n  return (\r\n    <a\r\n      className={\r\n        \"nav-item nav-link font-weight-bold text-capitalize\" +\r\n        (!active ? \" disabled\" : \"\")\r\n      }\r\n      id={\"nav-\" + name + \"-tab\"}\r\n      data-bs-toggle=\"tab\"\r\n      href={\"#nav-\" + name}\r\n      role=\"tab\"\r\n      aria-controls={\"nav-\" + name}\r\n    >\r\n      {name}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst ModalEventPanel = ({ name, children }) => {\r\n  return (\r\n    <div\r\n      className=\"tab-pane fade\"\r\n      id={\"nav-\" + name}\r\n      role=\"tabpanel\"\r\n      aria-labelledby={\"nav-\" + name + \"-tab\"}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function () {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [notice, setNotice] = useState();\r\n  const [survey, setSurvey] = useState();\r\n  const [activity, setActivity] = useState();\r\n\r\n  const [tabstate, setTabstate] = useState({\r\n    title: \"Criar\",\r\n    noticetab: true,\r\n    surveytab: true,\r\n    activitytab: true,\r\n  });\r\n\r\n  const [date, setDate] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const currentUser = store.getState().user.users.current;\r\n\r\n    const notices = store.getState().notice.notices.notices;\r\n    const surveys = store.getState().survey.surveys.surveys;\r\n    const activitys = store.getState().activity.activitys.activitys;\r\n\r\n    setDate(moment(e.relatedTarget.dataset.day));\r\n\r\n    let notice;\r\n    if (e.relatedTarget.dataset.notice_id !== \"0\") {\r\n      notice = notices.find(\r\n        (notice) => notice.id.toString() === e.relatedTarget.dataset.notice_id\r\n      );\r\n    }\r\n    if (notice !== undefined) {\r\n      setNotice(notice);\r\n    } else {\r\n      setNotice({\r\n        id: 0,\r\n        imovel: null,\r\n        imovel_id: 0,\r\n        document: null,\r\n        date: e.relatedTarget.dataset.day,\r\n        address: null,\r\n        description: null,\r\n        owner: currentUser.id,\r\n        notice_events: [],\r\n        css_name: null,\r\n        resethack: [],\r\n      });\r\n    }\r\n    let survey;\r\n    if (e.relatedTarget.dataset.survey_id !== \"0\") {\r\n      survey = surveys.find(\r\n        (survey) => survey.id.toString() === e.relatedTarget.dataset.survey_id\r\n      );\r\n    }\r\n    if (survey !== undefined) {\r\n      setSurvey(survey);\r\n    } else {\r\n      setSurvey({\r\n        id: 0,\r\n        imovel: null,\r\n        imovel_id: 0,\r\n        document: null,\r\n        identification: null,\r\n        date: e.relatedTarget.dataset.day,\r\n        survey_event_type: null,\r\n        address: null,\r\n        description: null,\r\n        concluded: false,\r\n        owner: currentUser.id,\r\n        resethack: [],\r\n      });\r\n    }\r\n    let activity;\r\n    if (e.relatedTarget.dataset.activity_id !== \"0\") {\r\n      activity = activitys.find(\r\n        (activity) =>\r\n          activity.id.toString() === e.relatedTarget.dataset.activity_id\r\n      );\r\n    }\r\n    if (activity !== undefined) {\r\n      setActivity(activity);\r\n    } else {\r\n      setActivity({\r\n        id: 0,\r\n        date: e.relatedTarget.dataset.day,\r\n        owner: currentUser.id,\r\n        description: null,\r\n        resethack: [],\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"notice\") {\r\n      setTabstate({\r\n        title: \"Editar Auto\",\r\n        noticetab: true,\r\n        surveytab: false,\r\n        activitytab: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"survey\") {\r\n      setTabstate({\r\n        title: \"Editar Vistoria\",\r\n        noticetab: false,\r\n        surveytab: true,\r\n        activitytab: false,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"activity\") {\r\n      setTabstate({\r\n        title: \"Editar Atividade\",\r\n        noticetab: false,\r\n        surveytab: false,\r\n        activitytab: true,\r\n      });\r\n    }\r\n    if (e.relatedTarget.dataset.modalcall === \"none\") {\r\n      setTabstate({\r\n        title: \"Criar\",\r\n        noticetab: true,\r\n        surveytab: true,\r\n        activitytab: true,\r\n      });\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleHiddenModal = (e) => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tabstate.noticetab && !tabstate.surveytab && !tabstate.activitytab) {\r\n      document.getElementById(\"nav-auto-tab\").click();\r\n    } else if (\r\n      !tabstate.noticetab &&\r\n      tabstate.surveytab &&\r\n      !tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-vistoria-tab\").click();\r\n    } else if (\r\n      !tabstate.noticetab &&\r\n      !tabstate.surveytab &&\r\n      tabstate.activitytab\r\n    ) {\r\n      document.getElementById(\"nav-atividade-tab\").click();\r\n    } else {\r\n      document.getElementById(\"nav-auto-tab\").click();\r\n    }\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    window.addEventListener(\"hidden.bs.modal\", handleHiddenModal);\r\n    return () => {\r\n      window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n      window.removeEventListener(\"hidden.bs.modal\", handleHiddenModal);\r\n    };\r\n  }, [tabstate]);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalEvent\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n      data-backdrop=\"static\"\r\n    >\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\" id=\"id_modal-header\">\r\n              {tabstate.title}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <nav>\r\n            <div\r\n              className=\"nav nav-tabs justify-content-center\"\r\n              id=\"nav-tab\"\r\n              role=\"tablist\"\r\n            >\r\n              <ModalEventTab active={tabstate.noticetab} name=\"auto\" />\r\n              <ModalEventTab active={tabstate.surveytab} name=\"vistoria\" />\r\n              <ModalEventTab active={tabstate.activitytab} name=\"atividade\" />\r\n            </div>\r\n          </nav>\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <ModalEventPanel name=\"auto\">\r\n              <FormNotice\r\n                notice={notice}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n            <ModalEventPanel name=\"vistoria\">\r\n              <FormSurvey\r\n                survey={survey}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n            <ModalEventPanel name=\"atividade\">\r\n              <FormActivity\r\n                activity={activity}\r\n                day={date}\r\n                isModalOpen={isModalOpen}\r\n              />\r\n            </ModalEventPanel>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, SelectFormGroup, required } from \"../common/Forms\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { newUser } from \"../../actions/user/actionUser\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { OnChange } from \"react-final-form-listeners\";\r\n\r\nconst TaskBar = ({ momentdate, dateType }) => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.users.users);\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const momentDate = useSelector((state) => state.date);\r\n\r\n  const onSubmit = (values) => {};\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-2\">\r\n      <div className=\"form-inline\">\r\n        <button\r\n          className=\"btn btn-sm btn-outline-primary mx-1 d-none d-lg-inline-block\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalEvent\"\r\n          data-modalcall=\"none\"\r\n          data-day={momentDate ? momentDate.format(\"YYYY-MM-DD\") : \"\"}\r\n        >\r\n          Novo Evento\r\n        </button>\r\n        <Form\r\n          initialValues={{ momentdate, currentUser }}\r\n          onSubmit={onSubmit}\r\n          render={({ handleSubmit }) => {\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"needs-validation d-flex\"\r\n                noValidate\r\n              >\r\n                <div className=\"col form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"currentUser.id\"\r\n                    label=\"AFM:\"\r\n                    className=\"mx-1\"\r\n                  >\r\n                    {users.map((user, index) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.first_name} {user.last_name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                  <OnChange name=\"currentUser.id\">\r\n                    {(value, previous) => {\r\n                      let user = users.find(\r\n                        (user) => user.id.toString() === value\r\n                      );\r\n                      if (user !== undefined) {\r\n                        dispatch(newUser(user));\r\n                      }\r\n                    }}\r\n                  </OnChange>\r\n                </div>\r\n                {momentdate && dateType && (\r\n                  <div className=\"col form-inline\">\r\n                    <InputFormGroup\r\n                      name=\"momentdate\"\r\n                      label=\"data:\"\r\n                      type={dateType}\r\n                      className=\"mx-1\"\r\n                      validate={required}\r\n                      parse={\r\n                        dateType === \"month\"\r\n                          ? (value) => value && moment(value + \"-01\")\r\n                          : (value) => value && moment(value)\r\n                      }\r\n                      format={\r\n                        dateType === \"month\"\r\n                          ? (value) => (value ? value.format(\"YYYY-MM\") : \"\")\r\n                          : (value) => (value ? value.format(\"YYYY-MM-DD\") : \"\")\r\n                      }\r\n                    />\r\n                    <OnChange name=\"momentdate\">\r\n                      {(value, previous) => {\r\n                        dispatch(newDate(value));\r\n                      }}\r\n                    </OnChange>\r\n                  </div>\r\n                )}\r\n              </form>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default TaskBar;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport Calendario from \"./Calendario\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getDateFromString } from \"./utils\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ModalFormEvent from \"./ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const momentdate = useSelector((state) => state.date);\r\n  const user = useSelector((state) => state.user.users.current);\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    let thedate = moment();\r\n    if (location.hash !== \"\") {\r\n      thedate = moment(getDateFromString(location.hash.substring(1)));\r\n    }\r\n    dispatch(newDate(thedate));\r\n  }, [dispatch, location.hash]);\r\n  if (momentdate) {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row no-gutters px-3\">\r\n            <ModalFormEvent />\r\n            <div className=\"col col-12\">\r\n              <TaskBar momentdate={momentdate} dateType=\"month\" />\r\n              <Calendario momentdate={momentdate} user={user} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport { actionCRUDActivity } from \"../../actions/activity/actionActivity\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport Day from \"../calendario/Day\";\r\nimport \"./CalendarioTarefa.css\";\r\n\r\nconst CalendarioTarefa = ({ momentdate }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    moment.locale(\"pt-br\");\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    const params = {\r\n      start_date: momentdate.clone().format(\"YYYY-MM-DD\"),\r\n      end_date: momentdate.clone().format(\"YYYY-MM-DD\"),\r\n    };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n    dispatch(actionCRUDActivity.read(params));\r\n  }, [dispatch, momentdate]);\r\n\r\n  return (\r\n    <table id=\"calendartarefa\" className=\"table table-light table-bordered \">\r\n      <tbody>\r\n        <tr>\r\n          <Day day={momentdate} momentdate={momentdate}>\r\n            {momentdate.format(\"D\").toString()}\r\n          </Day>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CalendarioTarefa;\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getDateFromString } from \"../calendario/utils\";\r\nimport { newDate } from \"../../actions/actionDate\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport CalendarioTarefa from \"./CalendarioTarefa\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const momentdate = useSelector((state) => state.date);\r\n  const user = useSelector((state) => state.user.users.current);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let thedate = moment();\r\n    if (location.hash !== \"\") {\r\n      thedate = moment(getDateFromString(location.hash.substring(1)));\r\n    }\r\n    dispatch(newDate(thedate));\r\n  }, [dispatch, location.hash]);\r\n\r\n  if (momentdate) {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutters px-3 justify-content-md-center\">\r\n          <ModalFormEvent />\r\n          <div className=\"col col-12 col-md-9 col-lg-6\">\r\n            <TaskBar momentdate={momentdate} dateType=\"date\" />\r\n            <CalendarioTarefa momentdate={momentdate} user={user} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changePassword } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst FormChangePassword = ({ authUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    if (values.new_password === values.new_password_check) {\r\n      dispatch(changePassword({ user: authUser, ...values }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (values.new_password !== values.new_password_check) {\r\n          errors.new_password = \"As novas senhas devem ser a iguais\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, submitError }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          {submitError && <div className=\"error\">{submitError}</div>}\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"old_password\"\r\n              label=\"Senha atual: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"new_password\"\r\n              label=\"Nova Senha: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline p-1\">\r\n            <InputFormGroup\r\n              name=\"new_password_check\"\r\n              label=\"Nova Senha: \"\r\n              type=\"password\"\r\n              className=\"mx-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary font-weight-bold mt-2\"\r\n          >\r\n            Alterar Senha\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormChangePassword;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\n\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst FormUserData = ({ authUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(actionCRUDUserProfile.update(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={authUser}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <InputFormGroup\r\n            name=\"username\"\r\n            label=\"Username:\"\r\n            validate={required}\r\n          />\r\n          <InputFormGroup name=\"first_name\" label=\"Nome:\" validate={required} />\r\n          <InputFormGroup name=\"last_name\" label=\"Sobrenome:\" />\r\n          <InputFormGroup name=\"email\" label=\"email:\" />\r\n          <InputFormGroup name=\"profile.matricula\" label=\"Matrícula:\" />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary font-weight-bold mt-2\"\r\n          >\r\n            Salvar\r\n          </button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUserData;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required, SelectFormGroup } from \"../common/Forms\";\r\n\r\nimport { getReportPDF } from \"../../actions/actionFiles\";\r\n\r\nconst FormReportPDF = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n  const users = useSelector((state) => state.user.users.users);\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(getReportPDF(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        user_id: authUser.id,\r\n        month: moment().format(\"YYYY-MM\"),\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Baixar relatório\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <SelectFormGroup name=\"user_id\" label=\"AFM:\" className=\"m-1\">\r\n              {users.map((user, index) => (\r\n                <option key={user.id} value={user.id}>\r\n                  {user.first_name} {user.last_name}\r\n                </option>\r\n              ))}\r\n            </SelectFormGroup>\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"month\"\r\n              label=\"Referência: \"\r\n              type=\"month\"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Criar relatório\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormReportPDF;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required, SelectFormGroup } from \"../common/Forms\";\r\n\r\nimport { getSheetCSV } from \"../../actions/actionFiles\";\r\n\r\nconst FormSheetCSV = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n  const users = useSelector((state) => state.user.users.users);\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(getSheetCSV(values));\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        user_id: authUser.id,\r\n        month: moment().format(\"YYYY-MM\"),\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Baixar planilha em formato csv\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <SelectFormGroup name=\"user_id\" label=\"AFM:\" className=\"m-1\">\r\n              {users.map((user, index) => (\r\n                <option key={user.id} value={user.id}>\r\n                  {user.first_name} {user.last_name}\r\n                </option>\r\n              ))}\r\n            </SelectFormGroup>\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"month\"\r\n              label=\"Referência: \"\r\n              type=\"month\"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Baixar planilha\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSheetCSV;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../common/Forms\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  updateImovel,\r\n  updateImovelLog,\r\n} from \"../../actions/imovel/actionImovel\";\r\n\r\nconst FormUpdateImovel = () => {\r\n  const dispatch = useDispatch();\r\n  const updatelog = useSelector((state) => state.imovel.updatelog);\r\n  const onSubmit = (values) => {\r\n    dispatch(updateImovel(values));\r\n    dispatch(updateImovelLog());\r\n  };\r\n  const [duration, setDuration] = useState(moment.duration());\r\n\r\n  useEffect(() => {\r\n    let diffTime = moment(updatelog.datetime).diff(updatelog.datetime_started);\r\n    setDuration(moment.duration(diffTime));\r\n  }, [updatelog]);\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        check: \"\",\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <h5>{\"Atualizar lista de imóveis\"}</h5>\r\n          <div className=\"form-inline\">\r\n            <InputFormGroup\r\n              name=\"check\"\r\n              label=\"Data: \"\r\n              className=\"m-1\"\r\n              validate={required}\r\n            />\r\n          </div>\r\n          <span style={{ color: \"red\" }}>\r\n            Obs.: O processo leva vários minutos para completar, esta ferramenta\r\n            não deve ser utilizado com frequencia.\r\n            <br />\r\n            Escreva a data de hoje no formato \"{moment().format(\"YYYY-MM-DD\")}\".\r\n          </span>\r\n          <div className=\"form-inline\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary font-weight-bold m-2\"\r\n            >\r\n              Atualizar\r\n            </button>\r\n          </div>\r\n\r\n          {updatelog && (\r\n            <ul className=\"list-group p-1 m-2 border\">\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Último Log: {updatelog.datetime}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                {updatelog.status}\r\n                {\": \"}\r\n                {updatelog.response}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Status da leitura do arquivo:\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                Total: {updatelog.total} / Inalterados: {updatelog.inalterados}{\" \"}\r\n                / Alterados: {updatelog.alterados} / Novos: {updatelog.novos}\r\n              </li>\r\n              <li className=\"list-group-item p-0 border-0\">\r\n                <div className=\"progress\">\r\n                  <div\r\n                    className={\"progress-bar w-\" + updatelog.progresso * 100}\r\n                    role=\"progressbar\"\r\n                    aria-valuenow={updatelog.progresso * 100}\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                  ></div>\r\n                </div>\r\n                Duração: {duration.hours()+\" horas, \"+duration.minutes()+\" minutos e \"+duration.seconds()+\" segundos\"}\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUpdateImovel;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\nimport { logoutAll } from \"../../actions/actionAuth\";\r\nimport FormChangePassword from \"./FormChangePassword\";\r\nimport FormUserData from \"./FormUserData\";\r\nimport FormReportPDF from \"./FormReportPDF\";\r\nimport FormSheetCSV from \"./FormSheetCSV\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport FormUpdateImovel from \"./FormUpdateImovel\";\r\nimport { updateImovelLog } from \"../../actions/imovel/actionImovel\";\r\n\r\nconst Perfil = () => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => state.auth.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDUserProfile.read());\r\n    if (authUser.is_staff) {\r\n      dispatch(updateImovelLog());\r\n      let intervalId = setInterval(() => {\r\n        dispatch(updateImovelLog());\r\n      }, 30000);\r\n      return () => {\r\n        clearInterval(intervalId);\r\n      };\r\n    }\r\n  }, [dispatch, authUser]);\r\n\r\n  const handleLogoutAll = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria sair de todas as Instâncias?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Você terá que entrar novamente em todos os dispositivos.\";\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(logoutAll());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-body container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 offset-lg-1 col-lg-4\">\r\n          <h5>\r\n            {\"Bem vindo, \"}\r\n            {authUser\r\n              ? authUser.first_name\r\n                ? authUser.first_name\r\n                : authUser.username\r\n              : \"\"}\r\n            {\"!\"}\r\n          </h5>\r\n          <h6>\r\n            {\" (último login: \"}\r\n            {authUser ? authUser.last_login : \"\"}\r\n            {\")\"}\r\n          </h6>\r\n          <div>\r\n            <FormUserData authUser={authUser} />\r\n          </div>\r\n\r\n          <div className=\"mt-2\">\r\n            <FormChangePassword authUser={authUser} />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12 offset-lg-1 col-lg-4 mt-2 mt-lg-0\">\r\n          <div className=\"row m-1 p-2 border\">\r\n            <FormReportPDF />\r\n          </div>\r\n          <div className=\"row m-1 p-2 border\">\r\n            <FormSheetCSV />\r\n          </div>\r\n\r\n          <div className=\"row m-1 p-2\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary font-weight-bold mt-2\"\r\n              onClick={handleLogoutAll}\r\n            >\r\n              Sair de todos os locais\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {authUser && authUser.is_staff && (\r\n        <div className=\"row mt-3 m-1 p-2 border\">\r\n          <FormUpdateImovel />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Perfil;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getNoticeEventType } from \"../calendario/utils\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CompleteButton,\r\n  EventButton,\r\n  GeoItajaiButton,\r\n  MapButton,\r\n} from \"../calendario/common\";\r\n\r\nconst NoticeEventSpan = ({ notice_event }) => {\r\n  let notice_event_type = getNoticeEventType(notice_event);\r\n  if (notice_event && notice_event_type) {\r\n    return (\r\n      <span className=\"row no-gutters py-1 text-truncate d-inline-block font-weight-bold\">\r\n        {\"A. \" + notice_event_type.short_name + \": \"}\r\n        {notice_event.identification !== null && notice_event.identification}\r\n        {\" (\" + notice_event.deadline_date + \")\"}\r\n      </span>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const NoticeEventButton = ({ notice, concluded, notice_event_type }) => {\r\n  const dispatch = useDispatch();\r\n  const authuser = useSelector((state) => state.auth.user);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (authuser !== undefined && notice !== undefined) {\r\n      setIsOwner(authuser.id === notice.owner);\r\n    } else if (authuser === undefined) {\r\n      setIsOwner(false);\r\n    } else {\r\n      setIsOwner(true);\r\n    }\r\n  }, [authuser, notice]);\r\n\r\n  const completeTask = (notice_event) => {\r\n    notice_event.concluded = !notice_event.concluded;\r\n    dispatch(actionCRUDNotice.update(notice));\r\n  };\r\n\r\n  const filterNoticeEventbyConcluded = (notice_event) => {\r\n    let show_concluded;\r\n    let notice_event_type = getNoticeEventType(notice_event);\r\n    if (notice_event_type) {\r\n      show_concluded = notice_event_type.show_concluded;\r\n    } else {\r\n      show_concluded = true;\r\n    }\r\n    if (concluded === \"0\") {\r\n      if (show_concluded) {\r\n        return !notice_event.concluded;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else if (concluded === \"1\") {\r\n      if (show_concluded) {\r\n        return notice_event.concluded;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterNoticeEventbyType = (notice_event) => {\r\n    if (notice_event_type === \"\") {\r\n      return false;\r\n    }\r\n    if (notice_event_type === \"0\") {\r\n      return true;\r\n    }\r\n    if (notice_event.notice_event_type.toString() === notice_event_type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return notice.notice_events\r\n    .filter(filterNoticeEventbyType)\r\n    .filter(filterNoticeEventbyConcluded)\r\n    .map((notice_event) => {\r\n      let notice_event_type = getNoticeEventType(notice_event);\r\n      return (\r\n        <div\r\n          key={notice_event.id}\r\n          style={{\r\n            backgroundColor: notice_event_type\r\n              ? notice_event_type.css_color\r\n              : \"blue\",\r\n          }}\r\n          className={\r\n            \"row no-gutters event user-select-none text-truncate\" +\r\n            (notice_event.concluded ? \" concluded\" : \"\")\r\n          }\r\n        >\r\n          <EventButton\r\n            notice_id={notice.id}\r\n            modalcall=\"notice\"\r\n            title={notice.imovel ? notice.imovel.name_string : \"\"}\r\n            day={moment().format(\"YYYY-MM-DD\")}\r\n          >\r\n            <NoticeEventSpan notice_event={notice_event} />\r\n          </EventButton>\r\n          {notice_event_type && notice_event_type.show_concluded && (\r\n            <CompleteButton\r\n              concluded={notice_event.concluded}\r\n              onclick={isOwner ? () => completeTask(notice_event) : () => {}}\r\n            />\r\n          )}\r\n          <GeoItajaiButton\r\n            codigo_lote={notice.imovel ? notice.imovel.codigo_lote : \"\"}\r\n          />\r\n          <MapButton\r\n            address={\r\n              notice.imovel\r\n                ? notice.imovel.logradouro +\r\n                  \",\" +\r\n                  notice.imovel.numero +\r\n                  \"-\" +\r\n                  notice.imovel.bairro +\r\n                  \"-itajaí\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n};\r\n\r\nconst NoticeEventList = ({ title, concluded, notice_event_type }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const notices = useSelector((state) =>\r\n    state.notice.notices.notices.filter((notice) => {\r\n      return notice.owner === currentUser.id;\r\n    })\r\n  );\r\n  return (\r\n    <div className=\"border p-2 m-1\">\r\n      <span>\r\n        <strong>{title ? title : \"\"}</strong>\r\n      </span>\r\n      {notices &&\r\n        notices.map((notice) => (\r\n          <NoticeEventButton\r\n            key={notice.id}\r\n            notice={notice}\r\n            concluded={concluded}\r\n            notice_event_type={notice_event_type}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeEventList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SurveyEvent from \"../calendario/SurveyEvent\";\r\nimport moment from \"moment\";\r\n\r\nconst SurveyEventList = ({ title, concluded, survey_event_type }) => {\r\n  const currentUser = useSelector((state) => state.user.users.current);\r\n  const surveys = useSelector((state) =>\r\n    state.survey.surveys.surveys.filter((notice) => {\r\n      return notice.owner === currentUser.id;\r\n    })\r\n  );\r\n\r\n  const filterSurveyEventbyConcluded = (survey) => {\r\n    if (concluded === \"0\") {\r\n      return !survey.concluded;\r\n    } else if (concluded === \"1\") {\r\n      return survey.concluded;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterSurveyEventbyType = (survey) => {\r\n    if (survey_event_type === \"\") {\r\n      return false;\r\n    }\r\n    if (survey_event_type === \"0\") {\r\n      return true;\r\n    }\r\n    if (survey.survey_event_type.toString() === survey_event_type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-2 m-1\">\r\n      <span>\r\n        <strong>{title ? title : \"\"}</strong>\r\n      </span>\r\n      {surveys &&\r\n        surveys\r\n          .filter(filterSurveyEventbyType)\r\n          .filter(filterSurveyEventbyConcluded)\r\n          .map((survey) => (\r\n            <SurveyEvent\r\n              key={survey.id}\r\n              survey={survey}\r\n              day={moment(survey.date)}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyEventList;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    const params = { concluded: \"0\" };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutters justify-content-md-center\">\r\n        <ModalFormEvent />\r\n        <div className=\"col col-12 col-lg-9\">\r\n          <TaskBar />\r\n          <div className=\"row row-cols-1 row-cols-lg-2\">\r\n            <div className=\"col\">\r\n              <NoticeEventList\r\n                title=\"Autos a concluir:\"\r\n                concluded=\"0\"\r\n                notice_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SurveyEventList\r\n                title=\"Vistorias a concluir:\"\r\n                concluded=\"0\"\r\n                survey_event_type=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDNoticeColor.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n    const params = { incompatible: true };\r\n    dispatch(actionCRUDNotice.read(params));\r\n    dispatch(actionCRUDSurvey.read(params));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row no-gutters justify-content-md-center\">\r\n        <ModalFormEvent />\r\n        <div className=\"col col-12 col-lg-9\">\r\n          <TaskBar />\r\n          <div className=\"row row-cols-1 row-cols-lg-2\">\r\n            <div className=\"col\">\r\n              <NoticeEventList\r\n                title=\"Autos sem imóvel:\"\r\n                concluded=\"\"\r\n                notice_event_type=\"0\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <SurveyEventList\r\n                title=\"Vistorias sem imóvel:\"\r\n                concluded=\"\"\r\n                survey_event_type=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, SelectFormGroup } from \"../common/Forms\";\r\nimport AutocompleteImovel from \"../common/AutocompleteImovel\";\r\nimport \"./index.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IconButton } from \"../calendario/common\";\r\nimport { actionCRUDNotice } from \"../../actions/notice/actionNotice\";\r\nimport { actionCRUDSurvey } from \"../../actions/survey/actionSurvey\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormBusca = ({ state, setstate }) => {\r\n  const dispatch = useDispatch();\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  const onSubmit = (values) => {\r\n    if (values.notice_event_type !== \"\") {\r\n      dispatch(actionCRUDNotice.read(values));\r\n    }\r\n    if (values.survey_event_type !== \"\") {\r\n      dispatch(actionCRUDSurvey.read(values));\r\n    }\r\n    setstate(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      initialValues={state}\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => {\r\n        return (\r\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n            <div className=\"modal-body container\">\r\n              <div className=\"container\">\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"start_date\"\r\n                    label=\"Desde:\"\r\n                    type=\"date\"\r\n                    className=\"ml-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <IconButton\r\n                    icon={\"fa-times-circle-o\"}\r\n                    onclick={() => {\r\n                      form.mutators.setValue(\"start_date\", \"\");\r\n                    }}\r\n                    title=\"Limpar data\"\r\n                  />\r\n                  <InputFormGroup\r\n                    name=\"end_date\"\r\n                    label=\"Até:\"\r\n                    type=\"date\"\r\n                    className=\"ml-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <IconButton\r\n                    icon={\"fa-times-circle-o\"}\r\n                    onclick={() => {\r\n                      form.mutators.setValue(\"end_date\", \"\");\r\n                    }}\r\n                    title=\"Limpar data\"\r\n                  />\r\n                </div>\r\n                <AutocompleteImovel\r\n                  name=\"imovel\"\r\n                  name_string=\"imovel.name_string\"\r\n                  label=\"Imóvel:\"\r\n                  form={form}\r\n                />\r\n                <div className=\"form-inline\">\r\n                  <InputFormGroup\r\n                    name=\"identification\"\r\n                    label=\"Identificação/Nº:\"\r\n                    maxLength=\"255\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <InputFormGroup\r\n                    name=\"document\"\r\n                    label=\"CPF/CNPJ:\"\r\n                    maxLength=\"255\"\r\n                    parse={(value) => {\r\n                      if (!value) return value;\r\n                      const onlyNumbers = value.replace(/[^\\d]/g, \"\");\r\n                      if (value.length > 14) {\r\n                        return formatString(\"99.999.999/9999-99\", onlyNumbers);\r\n                      } else {\r\n                        return formatString(\"999.999.999-99\", onlyNumbers);\r\n                      }\r\n                    }}\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  />\r\n                  <SelectFormGroup\r\n                    name=\"concluded\"\r\n                    label=\"Concluído:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Não concluído</option>\r\n                    <option value=\"1\">Concluído</option>\r\n                  </SelectFormGroup>\r\n                </div>\r\n                <div className=\"form-inline\">\r\n                  <SelectFormGroup\r\n                    name=\"notice_event_type\"\r\n                    label=\"Tipo de Auto:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Todos</option>\r\n                    {notice_event_types.map((notice_event_type, index) => (\r\n                      <option\r\n                        key={notice_event_type.id}\r\n                        value={notice_event_type.id}\r\n                      >\r\n                        {notice_event_type.order} - {notice_event_type.name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                  <SelectFormGroup\r\n                    name=\"survey_event_type\"\r\n                    label=\"Tipo de Vistoria:\"\r\n                    className=\"m-1\"\r\n                    classNameDiv=\"mx-1\"\r\n                  >\r\n                    <option value=\"\">Nenhum</option>\r\n                    <option value=\"0\">Todos</option>\r\n                    {survey_event_types.map((survey_event_type, index) => (\r\n                      <option\r\n                        key={survey_event_type.id}\r\n                        value={survey_event_type.id}\r\n                      >\r\n                        {survey_event_type.order} - {survey_event_type.name}\r\n                      </option>\r\n                    ))}\r\n                  </SelectFormGroup>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary mr-2\"\r\n                  onClick={() => {\r\n                    form.reset();\r\n                  }}\r\n                  title=\"Recarregar\"\r\n                >\r\n                  <i className=\"fa fa-refresh\" />\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Buscar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormBusca;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\nimport \"./index.css\";\r\nimport { actionCRUDUser } from \"../../actions/user/actionUser\";\r\nimport FormBusca from \"./FormBusca\";\r\nimport ModalFormEvent from \"../calendario/ModalFormEvent\";\r\nimport SurveyEventList from \"../common/SurveyEventList\";\r\nimport NoticeEventList from \"../common/NoticeEventList\";\r\nimport TaskBar from \"../common/TaskBar\";\r\nimport moment from \"moment\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const [state, setstate] = useState({\r\n    start_date: moment().startOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    end_date: moment().endOf(\"month\").format(\"YYYY-MM-DD\"),\r\n    imovel: \"\",\r\n    imovel_id: \"\",\r\n    identification: \"\",\r\n    concluded: \"\",\r\n    notice_event_type: \"0\",\r\n    survey_event_type: \"0\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUser.read());\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n  }, [dispatch, location]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ModalFormEvent />\r\n      <TaskBar />\r\n      <FormBusca state={state} setstate={setstate} />\r\n      <h5 className=\"p-2\">Resultado:</h5>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row no-gutters row-cols-1 row-cols-lg-2 justify-content-md-center\">\r\n          <div className=\"col col-12 col-lg-5\">\r\n            <NoticeEventList\r\n              title=\"Autos:\"\r\n              concluded={state.concluded}\r\n              notice_event_type={state.notice_event_type}\r\n            />\r\n          </div>\r\n          <div className=\"col col-12 col-lg-5\">\r\n            <SurveyEventList\r\n              title=\"Vistorias:\"\r\n              concluded={state.concluded}\r\n              survey_event_type={state.survey_event_type}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDUserProfile } from \"../../actions/user/actionUserProfile\";\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state) => state.user.userprofiles.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDUserProfile.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (user) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Usuário?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Usuário: \" + user.username;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDUserProfile.delete(user.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de usuários{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalUser\"\r\n          data-modalcall=\"none\"\r\n          data-user_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Usuário</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Sobrenome</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Matrícula</th>\r\n          <th scope=\"col\">Administrador</th>\r\n          <th scope=\"col\">Último Login</th>\r\n          <th scope=\"col\">Ativo</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map((user, index) => (\r\n          <tr key={user.id}>\r\n            <td>{user.id}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.first_name}</td>\r\n            <td>{user.last_name}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.profile.matricula}</td>\r\n            <td>{user.is_staff ? \"Sim\" : \"Não\"}</td>\r\n            <td>{user.last_login}</td>\r\n            <td>{user.is_active ? \"Sim\" : \"Não\"}</td>\r\n            <td>\r\n              <button\r\n                onClick={() => onDelete(user)}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Deletar usuário\"\r\n              >\r\n                <i className={\"fa fa-trash\"}></i>\r\n              </button>\r\n              <button\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#ModalUser\"\r\n                data-modalcall=\"user\"\r\n                data-user_id={user.id}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Editar usuário\"\r\n              >\r\n                <i className={\"fa fa-pencil-square-o\"}></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  required,\r\n} from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDUserProfile } from \"../../../actions/user/actionUserProfile\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\n\r\nconst FormUser = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar este Usuário?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Usuário: \" + user.username;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDUserProfile.delete(user.id));\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalUser\")).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.password === undefined || values.password === \"\") {\r\n        delete values[\"password\"];\r\n      }\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDUserProfile.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDUserProfile.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(document.getElementById(\"ModalUser\")).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={user}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"username\"\r\n                  label=\"Usuário:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                  format={(value) => (value ? value.toLowerCase() : \"\")}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"first_name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"last_name\"\r\n                  label=\"Sobrenome:\"\r\n                  className=\"m-1\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup name=\"email\" label=\"Email:\" className=\"m-1\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"profile.matricula\"\r\n                  label=\"Matrícula:\"\r\n                  className=\"m-1\"\r\n                />\r\n              </div>\r\n              <CheckboxFormGroup name=\"is_staff\" label=\"Administrador\" />\r\n              <CheckboxFormGroup name=\"is_active\" label=\"Ativo\" />\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"password\"\r\n                  label=\"Senha:\"\r\n                  className=\"m-1\"\r\n                  validate={(value) =>\r\n                    value\r\n                      ? value.length >= 4\r\n                        ? undefined\r\n                        : \"A senha deve ter ao menos 6 caracteres\"\r\n                      : undefined\r\n                  }\r\n                />\r\n              </div>\r\n              <span>\r\n                Obs.: Senha em branco não irá alterar a senha do usuário.\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              user !== undefined ? (user.id !== 0 ? true : false) : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormUser;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormUser from \"./FormUser\";\r\n\r\nexport default function () {\r\n  const [user, setUser] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const users = store.getState().user.userprofiles.users;\r\n    let user;\r\n    if (e.relatedTarget.dataset.user_id !== \"0\") {\r\n      user = users.find(\r\n        (user) => user.id.toString() === e.relatedTarget.dataset.user_id\r\n      );\r\n    }\r\n    if (user !== undefined) {\r\n      setUser(user);\r\n    } else {\r\n      setUser({\r\n        id: 0,\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        is_staff: false,\r\n        is_active: true,\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalUser\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {user !== undefined\r\n                ? user.id !== 0\r\n                  ? \"Editar \" + user.username\r\n                  : \"Novo usuário\"\r\n                : \"Novo usuário\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormUser user={user} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDSurveyEventType } from \"../../actions/survey/actionSurveyEventType\";\r\n\r\nconst SurveyEventType = () => {\r\n  const dispatch = useDispatch();\r\n  const survey_event_types = useSelector(\r\n    (state) => state.survey.survey_event_types.survey_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDSurveyEventType.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (survey_event_type) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Vistoria?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Vistoria: \" + survey_event_type.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurveyEventType.delete(survey_event_type.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Tipos de Vistorias{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalSurveyType\"\r\n          data-modalcall=\"none\"\r\n          data-survey_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Ordem</th>\r\n          <th scope=\"col\">Nome</th>\r\n          <th scope=\"col\">Abreviação</th>\r\n          <th scope=\"col\">Cor</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {survey_event_types\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((survey_event_type, index) => (\r\n            <tr key={survey_event_type.id}>\r\n              <td>{survey_event_type.id}</td>\r\n              <td>{survey_event_type.order}</td>\r\n              <td>{survey_event_type.name}</td>\r\n              <td>{survey_event_type.short_name}</td>\r\n              <td>\r\n                {survey_event_type.css_color}\r\n                <input\r\n                  type=\"color\"\r\n                  disabled\r\n                  className=\"mx-1\"\r\n                  value={\r\n                    survey_event_type.css_color\r\n                      ? survey_event_type.css_color\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  onClick={() => onDelete(survey_event_type)}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Deletar tipo\"\r\n                >\r\n                  <i className={\"fa fa-trash\"}></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ModalSurveyType\"\r\n                  data-modalcall=\"surveytype\"\r\n                  data-survey_type_id={survey_event_type.id}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Editar tipo\"\r\n                >\r\n                  <i className={\"fa fa-pencil-square-o\"}></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default SurveyEventType;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required } from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDSurveyEventType } from \"../../../actions/survey/actionSurveyEventType\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormSurveyType = ({ surveyType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Vistoria?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Vistoria: \" + surveyType.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDSurveyEventType.delete(surveyType.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalSurveyType\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDSurveyEventType.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDSurveyEventType.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalSurveyType\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={surveyType}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"short_name\"\r\n                  label=\"Abreviação:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              surveyType !== undefined\r\n                ? surveyType.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormSurveyType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormSurveyType from \"./FormSurveyType\";\r\n\r\nexport default function () {\r\n  const [surveyType, setSurveyType] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const surveyTypes = store.getState().survey.survey_event_types\r\n      .survey_event_types;\r\n\r\n    let surveyType;\r\n    if (e.relatedTarget.dataset.survey_type_id !== \"0\") {\r\n      surveyType = surveyTypes.find(\r\n        (surveyType) =>\r\n          surveyType.id.toString() === e.relatedTarget.dataset.survey_type_id\r\n      );\r\n    }\r\n    if (surveyType !== undefined) {\r\n      setSurveyType(surveyType);\r\n    } else {\r\n      setSurveyType({\r\n        id: 0,\r\n        order: \"\",\r\n        name: \"\",\r\n        short_name: \"\",\r\n        css_color: \"\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalSurveyType\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {surveyType !== undefined\r\n                ? surveyType.id !== 0\r\n                  ? \"Editar \" + surveyType.name\r\n                  : \"Novo tipo de Vistoria\"\r\n                : \"Novo tipo de Vistoria\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormSurveyType surveyType={surveyType} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeEventType } from \"../../actions/notice/actionNoticeEventType\";\r\n\r\nconst NoticeEventType = () => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDNoticeEventType.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (notice_event_type) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Auto: \" + notice_event_type.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventType.delete(notice_event_type.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Tipos de Autos e relacionados{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalNoticeType\"\r\n          data-modalcall=\"none\"\r\n          data-notice_type_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            #\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Ordem\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Nome\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Abreviação\r\n          </th>\r\n          <th scope=\"col\" colSpan=\"3\">\r\n            Padrão\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\">\r\n            Cor\r\n          </th>\r\n          <th scope=\"col\" colSpan=\"5\">\r\n            Mostrar\r\n          </th>\r\n          <th scope=\"col\" rowSpan=\"2\"></th>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"col\">Prazo (dias)</th>\r\n          <th scope=\"col\">Dias úteis</th>\r\n          <th scope=\"col\">Concluido</th>\r\n          <th scope=\"col\">Concluido</th>\r\n          <th scope=\"col\">RF</th>\r\n          <th scope=\"col\">Prazo</th>\r\n          <th scope=\"col\">Multa</th>\r\n          <th scope=\"col\">Na data de início</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {notice_event_types\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((notice_event_type, index) => (\r\n            <tr key={notice_event_type.id}>\r\n              <td>{notice_event_type.id}</td>\r\n              <td>{notice_event_type.order}</td>\r\n              <td>{notice_event_type.name}</td>\r\n              <td>{notice_event_type.short_name}</td>\r\n              <td>{notice_event_type.default_deadline}</td>\r\n              <td>\r\n                {notice_event_type.default_deadline_working_days\r\n                  ? \"Sim\"\r\n                  : \"Não\"}\r\n              </td>\r\n              <td>{notice_event_type.default_concluded ? \"Sim\" : \"Não\"}</td>\r\n              <td>\r\n                {notice_event_type.css_color}\r\n                <input\r\n                  type=\"color\"\r\n                  disabled\r\n                  className=\"mx-1\"\r\n                  value={\r\n                    notice_event_type.css_color\r\n                      ? notice_event_type.css_color\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{notice_event_type.show_concluded ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_report_number ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_deadline ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_fine ? \"Sim\" : \"Não\"}</td>\r\n              <td>{notice_event_type.show_start ? \"Sim\" : \"Não\"}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => onDelete(notice_event_type)}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Deletar tipo\"\r\n                >\r\n                  <i className={\"fa fa-trash\"}></i>\r\n                </button>\r\n                <button\r\n                  data-bs-toggle=\"modal\"\r\n                  data-bs-target=\"#ModalNoticeType\"\r\n                  data-modalcall=\"noticetype\"\r\n                  data-notice_type_id={notice_event_type.id}\r\n                  className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                  type=\"button\"\r\n                  title=\"Editar tipo\"\r\n                >\r\n                  <i className={\"fa fa-pencil-square-o\"}></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default NoticeEventType;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport {\r\n  InputFormGroup,\r\n  CheckboxFormGroup,\r\n  required,\r\n} from \"../../common/Forms\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCRUDNoticeEventType } from \"../../../actions/notice/actionNoticeEventType\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormNoticeType = ({ noticeType }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert =\r\n      \"Tem certeza que gostaria de deletar este Tipo de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Tipo de Auto: \" + noticeType.name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeEventType.delete(noticeType.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeType\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDNoticeEventType.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDNoticeEventType.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeType\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={noticeType}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"order\"\r\n                  label=\"Ordem:\"\r\n                  type=\"number\"\r\n                  className=\"m-1\"\r\n                  min=\"1\"\r\n                  max=\"99\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"name\"\r\n                  label=\"Nome:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"short_name\"\r\n                  label=\"Abreviação:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"default_deadline\"\r\n                  label=\"Prazo padrão (dias):\"\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"999\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <CheckboxFormGroup\r\n                  name=\"default_deadline_working_days\"\r\n                  label=\"apenas dias úteis\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"default_concluded\"\r\n                  label=\"Concluido por padrão\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_concluded\"\r\n                  label=\"Tem conclusão?\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_report_number\"\r\n                  label=\"Tem Relatório Fiscal?\"\r\n                />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup name=\"show_deadline\" label=\"Tem prazo?\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup name=\"show_fine\" label=\"Tem Multas?\" />\r\n              </div>\r\n              <div className=\"form-inline\">\r\n                <CheckboxFormGroup\r\n                  name=\"show_start\"\r\n                  label=\"Mostrar evento na data de início?\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              noticeType !== undefined\r\n                ? noticeType.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNoticeType;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormNoticeType from \"./FormNoticeType\";\r\n\r\nexport default function () {\r\n  const [noticeType, setNoticeType] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const noticeTypes = store.getState().notice.notice_event_types\r\n      .notice_event_types;\r\n\r\n    let noticeType;\r\n    if (e.relatedTarget.dataset.notice_type_id !== \"0\") {\r\n      noticeType = noticeTypes.find(\r\n        (noticeType) =>\r\n          noticeType.id.toString() === e.relatedTarget.dataset.notice_type_id\r\n      );\r\n    }\r\n    if (noticeType !== undefined) {\r\n      setNoticeType(noticeType);\r\n    } else {\r\n      setNoticeType({\r\n        id: 0,\r\n        order: \"\",\r\n        name: \"\",\r\n        short_name: \"\",\r\n        default_deadline: 0,\r\n        default_deadline_working_days: true,\r\n        default_concluded: false,\r\n        css_color: \"\",\r\n        show_concluded: true,\r\n        show_report_number: true,\r\n        show_deadline: true,\r\n        show_fine: true,\r\n        show_start: true,\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeType\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {noticeType !== undefined\r\n                ? noticeType.id !== 0\r\n                  ? \"Editar \" + noticeType.name\r\n                  : \"Novo tipo de Auto\"\r\n                : \"Novo tipo de Auto\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormNoticeType noticeType={noticeType} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeColor } from \"../../actions/notice/actionNoticeColor\";\r\n\r\nconst NoticeColor = () => {\r\n  const dispatch = useDispatch();\r\n  const notice_colors = useSelector(\r\n    (state) => state.notice.notice_colors.notice_colors\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCRUDNoticeColor.read());\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (notice_color) => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta cor de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Combinação: \" + notice_color.css_name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeColor.delete(notice_color.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"table table-sm table-light table-striped table-bordered my-2\">\r\n      <caption>\r\n        Lista de Cores para data de início dos Autos e relacionados{\" \"}\r\n        <button\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#ModalNoticeColor\"\r\n          data-modalcall=\"none\"\r\n          data-notice_color_id=\"0\"\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-primary\"\r\n        >\r\n          Adicionar\r\n        </button>\r\n      </caption>\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Combinação</th>\r\n          <th scope=\"col\">Cor</th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {notice_colors.map((notice_color, index) => (\r\n          <tr key={notice_color.id}>\r\n            <td>{notice_color.id}</td>\r\n            <td>{notice_color.css_name}</td>\r\n            <td>\r\n              {notice_color.css_color}\r\n              <input\r\n                type=\"color\"\r\n                disabled\r\n                className=\"mx-1\"\r\n                value={notice_color.css_color}\r\n              />\r\n            </td>\r\n            <td>\r\n              <button\r\n                onClick={() => onDelete(notice_color)}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Deletar tipo\"\r\n              >\r\n                <i className={\"fa fa-trash\"}></i>\r\n              </button>\r\n              <button\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target=\"#ModalNoticeColor\"\r\n                data-modalcall=\"noticecolor\"\r\n                data-notice_color_id={notice_color.id}\r\n                className=\"btn btn-outline-primary border-0 d-flex justify-content-center align-content-between p-1 mr-1 float-right\"\r\n                type=\"button\"\r\n                title=\"Editar tipo\"\r\n              >\r\n                <i className={\"fa fa-pencil-square-o\"}></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default NoticeColor;\r\n","import React from \"react\";\r\nimport CommonModalFooter from \"../../common/CommonModalFooter\";\r\nimport { Form } from \"react-final-form\";\r\nimport { InputFormGroup, required, SelectFormGroup } from \"../../common/Forms\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCRUDNoticeColor } from \"../../../actions/notice/actionNoticeColor\";\r\nimport bootstrap from \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport formatString from \"format-string-by-pattern\";\r\n\r\nconst FormNoticeColor = ({ noticeColor }) => {\r\n  const dispatch = useDispatch();\r\n  const notice_event_types = useSelector(\r\n    (state) => state.notice.notice_event_types.notice_event_types\r\n  );\r\n\r\n  const onDelete = () => {\r\n    let newLine = \"\\r\\n\";\r\n    let confirm_alert = \"Tem certeza que gostaria de deletar esta cor de Auto?\";\r\n    confirm_alert += newLine;\r\n    confirm_alert += \"Combinação: \" + noticeColor.css_name;\r\n    if (window.confirm(confirm_alert)) {\r\n      dispatch(actionCRUDNoticeColor.delete(noticeColor.id));\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeColor\")\r\n      ).hide();\r\n    }\r\n  };\r\n\r\n  const onSubmit = (values) => {\r\n    let closeModal = false;\r\n    if (values.id !== undefined) {\r\n      if (values.id === 0) {\r\n        dispatch(actionCRUDNoticeColor.create(values));\r\n        closeModal = true;\r\n      } else {\r\n        dispatch(actionCRUDNoticeColor.update(values));\r\n        closeModal = true;\r\n      }\r\n    }\r\n    if (closeModal) {\r\n      bootstrap.Modal.getInstance(\r\n        document.getElementById(\"ModalNoticeColor\")\r\n      ).hide();\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      initialValues={noticeColor}\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit, form }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"modal-body container\">\r\n            <div className=\"container\">\r\n              <SelectFormGroup\r\n                name=\"notice_event_types\"\r\n                label=\"Combinação de Autos:\"\r\n                validate={required}\r\n                className=\"m-1 custom-select\"\r\n                multiple\r\n                classNameDiv=\"mx-1\"\r\n                size={notice_event_types.length}\r\n              >\r\n                {notice_event_types.map((notice_event_type, index) => (\r\n                  <option\r\n                    key={notice_event_type.id}\r\n                    value={notice_event_type.id}\r\n                  >\r\n                    {notice_event_type.name}\r\n                  </option>\r\n                ))}\r\n              </SelectFormGroup>\r\n              <span>Obs.: Precione CTRL para multiplas seleções.</span>\r\n              <div className=\"form-inline\">\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  parse={formatString(\"#AAAAAA\")}\r\n                  label=\"Cor:\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n                <InputFormGroup\r\n                  name=\"css_color\"\r\n                  type=\"color\"\r\n                  className=\"m-1\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <CommonModalFooter\r\n            canDelete={\r\n              noticeColor !== undefined\r\n                ? noticeColor.id !== 0\r\n                  ? true\r\n                  : false\r\n                : false\r\n            }\r\n            canCopy={false}\r\n            onDelete={onDelete}\r\n            form={form}\r\n          />\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormNoticeColor;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport store from \"../../../store\";\r\nimport FormNoticeColor from \"./FormNoticeColor\";\r\n\r\nexport default function () {\r\n  const [noticeColor, setNoticeColor] = useState();\r\n\r\n  const handleShowModal = (e) => {\r\n    const noticeColors = store.getState().notice.notice_colors.notice_colors;\r\n\r\n    let noticeColor;\r\n    if (e.relatedTarget.dataset.notice_color_id !== \"0\") {\r\n      noticeColor = noticeColors.find(\r\n        (noticeColor) =>\r\n          noticeColor.id.toString() === e.relatedTarget.dataset.notice_color_id\r\n      );\r\n    }\r\n    if (noticeColor !== undefined) {\r\n      setNoticeColor(noticeColor);\r\n    } else {\r\n      setNoticeColor({\r\n        id: 0,\r\n        css_color: \"\",\r\n        resethack: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"show.bs.modal\", handleShowModal);\r\n    return () => window.removeEventListener(\"show.bs.modal\", handleShowModal);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"ModalNoticeColor\"\r\n      className=\"modal fade\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title font-weight-bold\">\r\n              {noticeColor !== undefined\r\n                ? noticeColor.id !== 0\r\n                  ? \"Editar \" + noticeColor.name\r\n                  : \"Nova combinação para Cor\"\r\n                : \"Nova combinação para Cor\"}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <FormNoticeColor noticeColor={noticeColor} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport ModalFormUser from \"./ModalFormUser\";\r\nimport SurveyEventType from \"./SurveyEventType\";\r\nimport ModalFormSurveyType from \"./ModalFormSurveyType\";\r\nimport NoticeEventType from \"./NoticeEventType\";\r\nimport ModalFormNoticeType from \"./ModalFormNoticeType\";\r\nimport NoticeColor from \"./NoticeColor\";\r\nimport ModalFormNoticeColor from \"./ModalFormNoticeColor\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div>\r\n      <ModalFormUser />\r\n      <ModalFormSurveyType />\r\n      <ModalFormNoticeType />\r\n      <ModalFormNoticeColor />\r\n      <div className=\"mx-5\">\r\n        <Users />\r\n        <SurveyEventType />\r\n        <NoticeEventType />\r\n        <NoticeColor />\r\n        <a\r\n          href=\"https://materializecss.com/color.html#palette\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          Paleta de cores para referência\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: (event) => {\r\n        setValue(event.target.value);\r\n      },\r\n    },\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, logout } from \"../../actions/actionAuth\";\r\nimport { useInput } from \"../../hooks/input-hook\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [isLoging, setIsLoging] = useState(false);\r\n  const {\r\n    value: username,\r\n    bind: bindUsername,\r\n    reset: resetUsername,\r\n  } = useInput(\"\");\r\n\r\n  const {\r\n    value: password,\r\n    bind: bindPassword,\r\n    reset: resetPassword,\r\n  } = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated && !isLoging) {\r\n      dispatch(logout());\r\n    } else if (auth.isAuthenticated && isLoging) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [dispatch, auth, isLoging, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(username, password));\r\n    resetUsername();\r\n    resetPassword();\r\n    setIsLoging(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100 v-100 d-grid justify-content-center pt-2 pt-lg-5\">\r\n      <form className=\"form-signin\" onSubmit={handleSubmit}>\r\n        <div className=\"mb-lg-3 row\">\r\n          <h3 className=\"mb-lg-3 font-weight-normal\">Acesso restrito</h3>\r\n        </div>\r\n        <div className=\"mb-lg-3 row\">\r\n          <label htmlFor=\"staticEmail\" className=\"col-lg-3 col-form-label\">\r\n            Usuário:\r\n          </label>\r\n          <div className=\"col-lg-9\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"inputUsername\"\r\n              {...bindUsername}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2 mb-lg-3 row\">\r\n          <label htmlFor=\"inputPassword\" className=\"col-lg-3 col-form-label\">\r\n            Senha:\r\n          </label>\r\n          <div className=\"col-lg-9\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"inputPassword\"\r\n              {...bindPassword}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2 mb-lg-3 text-center\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../actions/actionAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.isLoading && auth.isAuthenticated != null) {\r\n          if (auth.isAuthenticated) {\r\n            if (auth.user.is_staff) {\r\n              return <Component {...props} />;\r\n            } else {\r\n              return <Redirect to=\"/NotAutorized\" />;\r\n            }\r\n          } else {\r\n            return <Redirect to=\"/login\" />;\r\n          }\r\n        } else {\r\n          return <Loading />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./loadInterceptor\";\n// import { loadUser } from \"./actions/auth\";\n// import AlertTemplate from \"react-alert-template-basic\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport { loadUser } from \"./actions/actionAuth\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport PrivateRoute from \"./components/common/PrivateRoute\";\nimport NotFound from \"./components/common/NotFound\";\nimport Loading from \"./components/common/Loading\";\n\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import \"./fix-bootstrap5.css\";\nimport \"./bootstrap.flatly.min.css\";\n\nimport Header from \"./components/layouts/Header\";\nimport Footer from \"./components/layouts/Footer\";\nimport Alerts from \"./components/layouts/Alerts\";\nimport AlertTemplate from \"./components/layouts/AlertTemplate\";\n\n// import Calendario from \"./components/calendario/Calendario\";\nimport Calendario from \"./components/calendario/\";\nimport Tarefas from \"./components/tarefas/\";\nimport Perfil from \"./components/perfil/Perfil\";\nimport Aconcluir from \"./components/aconcluir/\";\nimport Incompativel from \"./components/incompativel/\";\nimport Busca from \"./components/busca/\";\nimport Admin from \"./components/admin/\";\n\nimport Login from \"./components/accounts/Login\";\nimport Logout from \"./components/accounts/Logout\";\n\nimport { actionCRUDUserProfile } from \"./actions/user/actionUserProfile\";\n\nimport \"./App.css\";\nimport AdminRoute from \"./components/common/AdminRoute\";\n\nexport const App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(actionCRUDUserProfile.read());\n  }, []);\n\n  // Alert Options\n  const alertOptions = {\n    timeout: 3000,\n    position: \"bottom center\",\n    containerStyle: {\n      zIndex: 1070,\n    },\n  };\n\n  return (\n    <Provider store={store}>\n      <AlertProvider template={AlertTemplate} {...alertOptions}>\n        <Router>\n          <Alerts />\n          <Header />\n          <main role=\"main\">\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Calendario} />\n              <PrivateRoute exact path=\"/perfil\" component={Perfil} />\n              <PrivateRoute exact path=\"/calendario\" component={Calendario} />\n              <PrivateRoute exact path=\"/tarefas\" component={Tarefas} />\n              <PrivateRoute exact path=\"/aconcluir\" component={Aconcluir} />\n              <AdminRoute exact path=\"/admin\" component={Admin} />\n              <PrivateRoute exact path=\"/busca\" component={Busca} />\n              <PrivateRoute\n                exact\n                path=\"/incompativel\"\n                component={Incompativel}\n              />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/logout\" component={Logout} />\n              <Route exact path=\"/loading\" component={Loading} />\n              <Route component={NotFound} />\n            </Switch>\n          </main>\n          <Footer />\n        </Router>\n      </AlertProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}